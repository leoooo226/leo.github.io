{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"about/","title":"This is leo's site","text":"<p>Nec amor nec tussis celatur  </p>"},{"location":"Algorithm/","title":"Getting Started","text":"<ul> <li> HEFT</li> <li> LSTM</li> </ul>"},{"location":"Algorithm/HEFT/","title":"Github","text":"<p>heft.cpp</p> <p>https://github.com/samanjate/heft</p> <p>heft.cpp</p> <p>https://github.com/hackerkid/HEFT-Scheduling</p> <p>heft.cpp</p> <p>https://github.com/VanillaBase1lb/HEFT</p> <p>heft.cpp</p> <p>https://github.com/spharish/HEFT-Algorithm</p> <p>heft.cpp</p> <p>https://github.com/yuqingtang/heft-algorithm</p> <p>heft.cpp</p> <p>https://github.com/mehtaharsh53/HEFT.cpp</p> <p>heft.py</p> <p>https://github.com/mrocklin/heft</p> <p>heft.py</p> <p>https://github.com/sina33/heft</p> <p>heft.c</p> <p>https://github.com/0x333333/HEFT</p> <p>heft.c</p> <p>https://github.com/royitbhu/HEFT-Task-Scheduling</p>"},{"location":"Architecture/","title":"Getting Started","text":"<p>\u5173\u4e8e\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u7535\u5b50\u7cfb\u7edf\u7ea7\u8bbe\u8ba1\u7684\u5b66\u4e60</p> <p>\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 ETH-CA 2023</p> <p>https://www.bilibili.com/video/BV18i421a7NZ</p> <p>learnsystemc</p> <p>https://www.learnsystemc.com/</p>"},{"location":"Architecture/CA/","title":"Computer Architecture","text":"<p>\u770b\u8fc7\u7684\u7ecf\u5178\u8bfe\u7a0b\u53ca\u4e66\u7c4d</p> <p>\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 ETH-CA 2023</p> <p>https://www.bilibili.com/video/BV18i421a7NZ</p> <p>\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1</p> <p>https://github.com/zhangyachen/ComputerArchitectureAndCppBooks</p> <p>\u91cf\u5316\u7814\u7a76\u65b9\u6cd5</p> <p>https://github.com/zhangyachen/ComputerArchitectureAndCppBooks</p>"},{"location":"Architecture/ESL/","title":"ESL","text":"<p>ESL\uff1aElectronic System Level Design\uff0c\u7535\u5b50\u7cfb\u7edf\u7ea7\u8bbe\u8ba1</p> <p>ESL\u5229\u7528C/C++\u7b49\u9ad8\u7ea7\u8bed\u8a00\u901a\u8fc7\u8f6f\u4ef6\u6a21\u578b\u6765\u6a21\u62df\u786c\u4ef6\u884c\u4e3a\uff0c\u4e3aSoC\u7cfb\u7edf\u63d0\u4f9b\u5404\u79cd\u7ea7\u522b\u7684\u8f6f\u4ef6\u6a21\u62df\u5e73\u53f0\uff0c\u4e3aSoC\u7cfb\u7edf\u67b6\u6784\u9a8c\u8bc1\u548c\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u5f00\u53d1\u63d0\u4f9b\u4e00\u79cd\u53ef\u8fd0\u884c\u7684\u9a8c\u8bc1\u73af\u5883\uff0c\u6709\u6548\u652f\u6491SoC\u7cfb\u7edf\u7684\u8fed\u4ee3\u5f00\u53d1\u3002</p> <p></p>"},{"location":"Architecture/Script/","title":"\u81ea\u52a8\u5316\u811a\u672c","text":"<pre><code>import re\nimport os\nimport sys\nprint('-----TOP Generator -------')\n# \u6253\u5f00\u8bbe\u8ba1\u6587\u4ef6\ntry:\n    top = sys.argv[1]\n    file_group = sys.argv[2]\nexcept Exception:\n    raise (\"Error: gen_top.py need some design.v \")\n# \u683c\u5f0f\u5bf9\u9f50\nalign1 = \"{:&lt;20}\\t{:&lt;10}\\t{:&lt;20}\\t{:&lt;25}\"\nalign2 = \"{:&lt;20}\\t{:&lt;10}\\t{:&lt;20}\\t{:&lt;25}{:&lt;5}\"\nalign3 = \"{:&lt;20}{:&lt;30}\\t{:&lt;5}\"\nalign4 = \"{:&lt;20}{:&lt;4}\"\nalign5 = \"{:&lt;20}\\t{:&lt;10}\\t{:&lt;20}\\t{:&lt;25}{:&lt;1}\"\n# \u5b9a\u4e49\u8def\u5f84\ninst = 'inst.tmp'\ndirectory = os.getcwd()\ninst_path = directory + '/' + inst\ntop_path = directory + '/' + top\n# \u79fb\u9664tmp\u6587\u4ef6\nif os.path.exists(inst_path):\n    os.remove(inst_path)\nif os.path.exists(top_path):\n    os.remove(top_path)\n\nwith open(inst_path, 'a') as instance_group:\n    port_list = []  #\u7aef\u53e3\u5217\u8868\n    sig_dir = {}    #\u4fe1\u53f7\u5d4c\u5957\u5b57\u5178\n    link_dic = {}   #\u81ea\u5b9a\u4e49\u4fe1\u53f7\u5b57\u5178\n    # \u4f8b\u5316\u6a21\u5757\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            with open(file_path, 'r',errors='ignore') as file_obj:\n                print('Starting Reading file: ' + file_path)\n                content = file_obj.read()\n                #\u6b63\u5219\u5339\u914d\u5220\u9664\u5355\u884c\u548c\u591a\u884c\u6ce8\u91ca\uff0c\u9632\u6b62\u5e72\u6270(\u4fe1\u53f7\u8fde\u63a5\u9664\u5916)\n                regex_note = re.compile(r'/\\*[^/]*\\*/\\n?|//(?!.*{.+}).*')   \n                match_string = re.findall(regex_note, content)\n                for k in range(len(match_string)):\n                    content = content.replace(match_string[k], '')\n                # \u81ea\u5b9a\u4e49\u6a21\u5757\u4fe1\u53f7\u8fde\u63a5\n                signal_link=re.compile(r'(.*{\\s*)(\\w+)(\\s*:\\s*)(\\w+)(\\s*}.*)')   \n                signal_dic=re.findall(signal_link, content)\n                for m in  range(len(signal_dic)):\n                    signal_from=signal_dic[m][1]\n                    signal_to=signal_dic[m][3] \n                    link_dic.update({signal_from:signal_to})\n                link_keys = link_dic.keys()  \n                link_values = list(link_dic.values() )\n\n                # \u6b63\u5219\u5339\u914d\u6a21\u5757\u540d\n                regex_module = re.compile(r'(module)(\\s+)(\\w+)(\\s*)')\n                module_obj = re.findall(regex_module, content)\n                if len(module_obj) == 0:\n                    print('Error: Cannot find any module')\n                if len(module_obj) &gt; 1:\n                    print('Error: ', len(module_obj), ' module have been found')\n                if len(module_obj) == 1:\n                    module_name = module_obj[0][2]\n                    print('Info: Found module: ', module_name)\n                # \u6b63\u5219\u5339\u914d\u7aef\u53e3\u540d\n                regex_ports = re.compile(r'(input|output|inout)(\\s+)(reg|wire)?(\\s+)?(\\[.*:.*\\]\\s+|\\[.*\\]\\s+)?(\\w+)')\n                #                                0\u8f93\u5165\u8f93\u51fa     1\u7a7a\u683c 2\u4fe1\u53f7\u7c7b\u578b  3\u7a7a\u683c     4[\u4f4d\u5bbd]               5\u4fe1\u53f7\u540d\n                groups_ports = re.findall(regex_ports, content)\n                print('Info: Found ports: ', len(groups_ports))\n\n                # \u4f8b\u5316\u6a21\u5757\n                if module_obj is not None:\n                    instance_group.write('\\n//instance module of ' + module_name)\n                    # \u6709\u53c2\u6570\u7684\u6a21\u5757                    \n                    regex_para = re.compile(r'(parameter)(\\s+)(\\w+)(\\s*)(=)(\\s*)(\\w+)')\n                    groups_para = re.findall(regex_para, content)\n                    instance_group.write('\\n' + module_name+' #(' ) if len(groups_para) &gt; 0 else ' '\n                    if len(groups_para) &gt; 0:                                 \n                        for j in range(len(groups_para)):\n                            para_name = groups_para[j][2]\n                            para_num = groups_para[j][6]\n                            if j == len(groups_para)-1:\n                                instance_group.write(' .'+ para_name+'(' + para_name+'))')\n                            else: \n                                instance_group.write(' .'+ para_name+'(' + para_name+'),')\n                    else:\n                        instance_group.write(' ')\n                    if len(groups_para) &gt; 0 :\n                        instance_group.write('\\n'  + 'u_' + module_name + ' (\\n') \n                    else :\n                        instance_group.write('\\n' + module_name + ' u_' + module_name + ' (\\n')  \n\n                    num = len(groups_ports)\n                    for i in range(num):\n                        port_name = groups_ports[i][5]\n                        port_width = groups_ports[i][4]\n                        port_type = groups_ports[i][0]\n                        port_regwire = groups_ports[i][2]\n                        if port_name not in port_list:\n                            sig_dir[port_name] = {}\n                            sig_dir[port_name]['input_inst'] = []\n                            sig_dir[port_name]['output_inst'] = []\n                            sig_dir[port_name]['inout_inst'] = []\n                            sig_dir[port_name]['input_num'] = 0\n                            sig_dir[port_name]['output_num'] = 0\n                            sig_dir[port_name]['inout_num'] = 0\n                            sig_dir[port_name]['link_num'] = 0\n                            sig_dir[port_name]['port_name'] = port_name\n                            sig_dir[port_name]['port_width'] = port_width\n                            sig_dir[port_name]['port_type'] = port_type\n                            sig_dir[port_name]['regwire'] = port_regwire\n                            sig_dir[port_name]['link_from'] = port_name if port_name in link_keys else ''\n                            sig_dir[port_name]['link_to'] = link_dic[port_name] if port_name in link_keys else ''\n                            port_list.append(port_name)\n\n                        if port_type == 'input':\n                            sig_dir[port_name]['input_num'] += 1 \n                            sig_dir[port_name]['input_inst'].append(module_name)                             \n                        elif port_type == 'output':\n                            sig_dir[port_name]['output_num'] += 1\n                            sig_dir[port_name]['output_inst'].append(module_name)                         \n                        else:\n                            sig_dir[port_name]['inout_num'] += 1\n                            sig_dir[port_name]['inout_inst'].append(module_name)\n\n                        if port_name in link_keys:\n                            sig_dir[port_name]['link_num'] += 1 \n\n                        if i == num - 1:\n                            if port_name in link_keys:                           \n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + link_dic[port_name] + ')')\n                                                    ,('\\t//' + port_type +' '+port_regwire +' '+ port_width + '\\n);\\n')))\n                            else:\n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + port_name + ')')\n                                                    ,('\\t//' + port_type +' '+port_regwire +' '+ port_width + '\\n);\\n')))                                \n                        else:\n                            if port_name in link_keys:                           \n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + link_dic[port_name] + '),')\n                                                ,('\\t//' + port_type +  ' '+port_regwire +' '+ port_width + '\\n'))) \n                            else:\n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + port_name + '),')\n                                                ,('\\t//' + port_type +  ' '+port_regwire +' '+ port_width + '\\n'))) \n\n    # \u9876\u5c42\u8f93\u5165\u8f93\u51fa\u4fe1\u53f7\u58f0\u660e\nwith open(top_path, 'a') as top_group:\n    top_group.write('/*------------------------------------------------------------------\\n')\n    top_group.write('//The design file is generated by gen_top.py\\n')\n    top_group.write('//The design file including:\\n')\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            top_group.write('//'+file_path+'\\n')\n    top_group.write('-------------------------------------------------------------------*/\\n')\n    # `include\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            with open(file_path, 'r',errors='ignore') as file_obj:\n                content = file_obj.read()\n                regex_include = re.compile(r'`include.+\"')   \n                include_string = re.findall(regex_include, content)\n                for m in range(len(include_string)):\n                    top_group.write(include_string[m]+'\\n') \n\n    top_group.write('module top (\\n')\n    num_port = 0\n    link_port = 0 \n    cmt_input = {}\n    cmt_output = {}\n    cmt_inout = {}\n    cmt_link1 = {}\n    cmt_link2 = {}\n    cmt_link = {}\n    cmt_sig = {}\n    port_sig = {}\n    wire_sig = {}\n    link_sig = {}\n    Info1 ={}\n    Info2 ={}\n    Info ={}\n    for i in sig_dir:\n        #\u6ce8\u91ca\n        cmt_input[i] = str('to: ' +str(sig_dir[i]['input_inst']) + '; ') if sig_dir[i]['input_num'] &gt; 0 else ''\n        cmt_output[i] = str('from: ' + str(sig_dir[i]['output_inst']) + '; ') if sig_dir[i]['output_num'] &gt; 0 else ''\n        cmt_inout[i] = str('connect: ' + str(sig_dir[i]['inout_inst']) + '; ') if sig_dir[i]['inout_num'] &gt; 0 else ''\n        cmt_sig[i] ='\\t//' + cmt_input[i] + cmt_output[i] + cmt_inout[i]\n\n        cmt_link1[i] = str('to: ' + str(sig_dir[i]['input_inst'])+':' +str(sig_dir[i]['link_from']) +'; ') if sig_dir[i]['input_num'] &gt; 0 else ''\n        cmt_link2[i] = str('from: ' + str(sig_dir[i]['output_inst'])+':' +str(sig_dir[i]['link_from'])) if sig_dir[i]['output_num'] &gt; 0 else ''\n        cmt_link[i] =  '\\t//' + cmt_link2[i] + cmt_link1[i]\n\n        port_sig[i] = str(align1.format(('\\t' + sig_dir[i]['port_type'] ),( '\\t'+ sig_dir[i]['regwire']  ),( sig_dir[i]['port_width']  ),( sig_dir[i]['port_name'])))\n        wire_sig[i] = str(align1.format(('\\t' +'wire' + '\\t' ),(' '),( sig_dir[i]['port_width'] ), (sig_dir[i]['port_name']))) \n        link_sig[i] = str(align1.format(('\\t' +'wire' + '\\t' ),(' '),( sig_dir[i]['port_width'] ), (sig_dir[i]['link_to'])))\n\n        Info1[i] =str(sig_dir[i]['input_inst'])if sig_dir[i]['input_num'] &gt; 0 else ''\n        Info2[i] =str(sig_dir[i]['output_inst'])if sig_dir[i]['output_num'] &gt; 0 else ''\n        Info[i] =Info1[i]+Info2[i]\n        #\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4e3a0\u4e5f\u5c31\u662f\u8bf4\u53ea\u8f93\u5165\u6216\u8005\u53ea\u8f93\u51fa\u5c31\u662f\u9876\u5c42\u7aef\u53e3\uff0c\u5426\u5219\u662f\u5185\u90e8\u4fe1\u53f7\n        if (sig_dir[i]['input_num'] == 0 or sig_dir[i]['output_num'] == 0 or sig_dir[i]['inout_num'] &gt; 0 ) and (sig_dir[i]['link_num'] == 0):\n            num_port = num_port + 1\n        # if sig_dir[i]['output_num'] &gt; 1:\n        #     print('Error: ' + i + ' have been multiple derived by ' + str(sig_dir[i]['output_inst']))\n        # if sig_dir[i]['input_num'] &gt; 1:\n        #     print('Info: ' + i + ' have been broadcast to ' + str(sig_dir[i]['input_inst'])+'\\n')\n    #\u9876\u5c42\u7aef\u53e3\u58f0\u660e\n    cnt_port = 0\n    for i in sig_dir:           \n        if (sig_dir[i]['input_num'] == 0 or sig_dir[i]['output_num'] == 0 or sig_dir[i]['inout_num'] &gt; 0) and (sig_dir[i]['link_num'] == 0):\n            if cnt_port == num_port - 1:\n                top_group.write(port_sig[i] + cmt_sig[i]+ '\\n);\\n\\n')\n            else:\n                top_group.write(port_sig[i] + ',' + cmt_sig[i]  + '\\n')\n            cnt_port = cnt_port + 1\n    #\u53c2\u6570\u58f0\u660e\n    top_group.write(\"//parameter declaration\\n\")\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            with open(file_path, 'r',errors='ignore') as file_obj:\n                content = file_obj.read()                  \n                regex_para = re.compile(r'(parameter)(\\s+)(\\w+)(\\s*)(=)(\\s*)(\\w+)')\n                groups_para = re.findall(regex_para, content)                               \n                for j in range(len(groups_para)):\n                    para_name = groups_para[j][2]\n                    para_num = groups_para[j][6]\n                    top_group.write(align5.format(('\\tlocalparam '),(' '),( '\\t'+para_name),('\\t=' + para_num),(' ;\\n')))\n    #\u4fe1\u53f7\u58f0\u660e \n    top_group.write(\" \\n\") \n    top_group.write(\"//signal declaration\\n\")  \n    for i in sig_dir:\n        if sig_dir[i]['input_num'] &gt; 0 and sig_dir[i]['output_num'] &gt; 0 and sig_dir[i]['inout_num'] == 0:\n            top_group.write(wire_sig[i] + ';' +cmt_sig[i] + '\\n')\n\n    # \u81ea\u5b9a\u4e49\u4fe1\u53f7\u58f0\u660e           \n        if sig_dir[i]['link_num'] &gt; 0:                   \n            top_group.write(link_sig[i] + ';' + '\\n')\n            print('Info: ' + Info[i]+':'+i + ' have been renamed as '  +str(sig_dir[i]['link_to']))\n\n# \u53bb\u9664\u91cd\u590d\u58f0\u660e\ndef remove_duplicate_lines(file_path):\n    lines_dict = {}\n    with open(file_path, 'r+') as file:\n        for line in file:\n            lines_dict[line] = None\n        file.truncate(0)\n    with open(file_path, 'w') as output_file:\n        for line in lines_dict.keys():\n            output_file.write(line)\nremove_duplicate_lines(top_path)                \n\n# \u5c06inst\u4e2d\u7684\u6a21\u5757\u4f8b\u5316\u5199\u5165top\nwith open(inst_path, 'r') as instance_group:\n    res = instance_group.read()\n    with open(top_path, 'a') as top_group:\n        top_group.write(res + '\\nendmodule\\n')#\u5206\u6587\u4ef6\u56e0\u4e3aendmodule\n\n# \u6e05\u9664inst\u6587\u4ef6\nif os.path.exists(directory + '/' + inst):\n    os.remove(directory + '/' + inst)\n    print('Info: ' + top + ' have been generated')\n    print('-----TOP Generator End---------')\n\n# ---------------------------------Testbench--------------------------------------------\nprint('\\n-----TB Generator-----')\nfile_tb   = 'tb_top.v'\npath = top_path\nwith open(path,'r') as file:\n  print('Read instance: '+path)\n  content_tb = file.read()\n  regex=re.compile(r'//.*')\n  match_string=re.findall(regex, content_tb)\n  for k in range(len(match_string)):\n    content_tb=content_tb.replace(match_string[k],'')\n  #\u6b63\u5219\u5339\u914d\u6a21\u5757\u540d\n  regex_module = re.compile(r'(module)(\\s+)(\\w+)(\\s+)')\n  module_obj = re.findall(regex_module, content_tb)\n  if len(module_obj)==0:\n    print('Error! Cannot find any module')\n  if len(module_obj)&gt;1:\n    print('Error! ',len(module_obj), ' module have been found')\n  if len(module_obj)==1:\n    print('Find module: ',module_obj[0][2]) \n  #\u6b63\u5219\u5339\u914d\u7aef\u53e3\n  regex_ports = re.compile(r'(input|output)(\\s+)(reg|wire)?(\\s+)?(\\[.*:.*\\]\\s+|\\[.*\\]\\s+)?(\\w+)');\n  groups_ports = re.findall(regex_ports, content_tb)\n  print('Find ports:',len(groups_ports))\n  ##\u5199TB\u6587\u4ef6\n  with open(directory+'/'+file_tb,'w') as file_obj2:\n    with open(path, 'r',errors='ignore') as file_obj3:\n        content = file_obj3.read()\n        regex_include = re.compile(r'`include.+\"')   \n        include_string = re.findall(regex_include, content)\n        for m in range(len(include_string)):\n            file_obj2.write(include_string[m]+'\\n') \n    file_obj2.write('''//This file is generated by scripts for simulation\n//The simulation is for smoking test\n//liuao\n`timescale 1ns/1ps\nmodule tb_top;\n    ''')\n    if module_obj is not None:\n      num = len(groups_ports)   \n#\u4fe1\u53f7\u58f0\u660e\n      file_obj2.write('\\n//Declaration DUT signals')\n      for i in range(num):\n        if groups_ports[i][0] == 'input':\n          file_obj2.write(align3.format(('\\n\\treg'),(groups_ports[i][4]),(groups_ports[i][5]+';')))\n        else:\n          file_obj2.write(align3.format(('\\n\\twire'),(groups_ports[i][4]),(groups_ports[i][5]+';')))\n#\u4f8b\u5316\u6a21\u5757\n      file_obj2.write('\\n\\n//Instance DUT module')\n      file_obj2.write('\\n'+module_obj[0][2]+' u_'+module_obj[0][2]+' (\\n')\n      for i in range(num):\n        if i == num-1:\n          file_obj2.write(align3.format(('\\t.'+groups_ports[i][5]),('('+groups_ports[i][5]+')'),('//'+groups_ports[i][0]+groups_ports[i][4]+'\\n);\\n')))\n        else:\n          file_obj2.write(align3.format(('\\t.'+groups_ports[i][5]),('('+groups_ports[i][5]+'),'),('//'+groups_ports[i][0]+groups_ports[i][4]+'\\n')))\n    #\u8f7d\u5165\u6a21\u677f\n    # with open(directory+'/'+'simulation.temp','r') as file_temp:\n    #   file_obj2.write(file_temp.read())\n    # file_obj2.write('\\nendmodule')\n#\u65f6\u949f\u548c\u590d\u4f4d\u4fe1\u53f7\n      file_obj2.write('''\\n//Generate clock at 1GHz\ninitial begin\n    clk = 0;\n    forever #0.5 clk = ~clk;\nend\n\n//Generate rst_n at 50ns\ninitial begin\n    rst_n = 0;\n    #50;\n    rst_n = 1;\nend''')\n#\u521d\u59cb\u5316\u4fe1\u53f7\n      file_obj2.write('\\n//Signals initialization\\ninitial begin\\n')\n      for i in range(num):\n          if groups_ports[i][0] == 'input'and groups_ports[i][5] !='rst_n' and  groups_ports[i][5] !='clk':\n            file_obj2.write(align4.format(('\\t'+groups_ports[i][5]),('=0;'+'\\n')))\n      file_obj2.write('end\\n')    \n#\u7b80\u5355\u6fc0\u52b1\u4fe1\u53f7     \n      file_obj2.write('\\n//Single Motivation\\nalways @(posedge clk or negedge rst_n)begin\\n\\tif(!rst_n)\\n')\n      for i in range(num):\n          if groups_ports[i][0] == 'input' and groups_ports[i][5] !='rst_n' and  groups_ports[i][5] !='clk':\n            file_obj2.write(align4.format(('\\t\\t'+groups_ports[i][5]),(\"&lt;= {$random}%2;\"+'\\n')))\n      file_obj2.write('\\telse\\n\\t\\t#10;\\n')      \n      for i in range(num):\n          if groups_ports[i][0] == 'input'and groups_ports[i][5] !='rst_n' and  groups_ports[i][5] !='clk':\n            file_obj2.write(align4.format(('\\t\\t'+groups_ports[i][5]),('&lt;= '+groups_ports[i][5] +\"+ 32'h1 ;\"+'\\n') ))\n      file_obj2.write('end\\n')              \n#\u6ce2\u5f62\u6587\u4ef6\u8f93\u51fa     \n      file_obj2.write('''\\n//Generate Verdi fsdb waveform for debug\ninitial begin\n  $display(\"###########SIM HAVE START##############\");\n  $fsdbDumpfile(\"tb_top.fsdb\");\n  $fsdbDumpvars(0,tb_top,\"+mda\");\n  #1000000000000;\n  $display(\"###########SIM HAVE DONE##############\");\n  $finish;\nend\n\nendmodule''')\n  print('tb_top.v have been generated!\\n----TB Generator End-----')\n# ---------------------------------Check--------------------------------------------\nprint('\\n------Check-------') \nwith open(top_path, 'a') as top_group:\n    for i in sig_dir:       \n        if sig_dir[i]['output_num'] &gt; 1:\n            print('Error: ' + i + ' have been multiple derived by ' + str(sig_dir[i]['output_inst']))\n        if sig_dir[i]['input_num'] &gt; 1:\n            print('Info: ' + i + ' have been broadcast to ' + str(sig_dir[i]['input_inst']))  \n\ndef get_include(verilog):\n    obj_include ={}\n    re_include = re.compile(r'`include\\s+\"(.+)\"') \n    re_define =  re.compile(r'`define\\s+(\\w+)\\s+(.+)')\n    with open(verilog,'r') as top:\n        lines = top.readlines()\n        for line in lines:\n            if re.search(re_include, line):\n                include=re.search(re_include, line).group(1)\n                with open(include,'r') as top_define:\n                    includes= top_define.readlines()\n                    for line in includes:\n                        if re.search(re_define, line):\n                            include_key=re.search(re_define, line).group(1)\n                            obj_include[include_key]=re.search(re_define, line).group(2)\n                            print('Info:',include_key,'was defined as',obj_include[include_key])\n    return obj_include\n\n#\u8fd4\u56de\u8f93\u5165\u8f93\u51fa\u7c7b\u578b\uff0c\u7aef\u53e3\u548c\u4fe1\u53f7\u5bbd\u5ea6\uff0c\u7aef\u53e3\u548c\u4fe1\u53f7\u6570\u91cf\uff0c\u4fe1\u53f7\u7c7b\u578b\uff0c\u4e00\u884c\u5185\u5bb9\ndef get_sigs(verilog,obj_include):\n    re_port = re.compile(r'^(input|output|inout)(reg|wire)?(\\[((\\d+|.+)?(:0)?)\\])?(\\w+)(,?)') #\u7aef\u53e3\n    re_wire = re.compile(r'\\.\\w+\\((\\w+)\\),?(\\/\\/(input|output))?(\\w+)?(\\[((\\d+|.+)?(:0)?)\\])?')#.abc(abd)\uff0c //input|output   [31:0]\n    # print(obj_include)\n    with open(verilog,'r') as top:\n        lines = top.readlines()\n        obj_dir  = {}\n        obj_wid  = {}\n        obj_cnt  = {}\n        obj_exp  = {}\n        obj_lin  = {}\n        for line in lines:\n            line = re.sub(r'\\s', '', line)#\u53bb\u6389\u7a7a\u767d\n            line = re.sub(r'^\\/\\/.*$', '', line)#\u53bb\u6389\u4ece\u5934\u5f00\u59cb\u7684\u6ce8\u91ca\n            line = re.sub(r'^(\\w+.*)?\\.\\w+\\(\\d+\\).*', '', line)#\u53bb\u6389\u76f4\u63a5\u8d4b\u503c\u7684\u4fe1\u53f7\n            line = re.sub(r'^.+#.*\\..*', '', line)\n            if re.search(re_port, line):\n                port_dir = re.search(re_port, line).group(1)# input|output|inout\n                port_rag = re.search(re_port, line).group(3)# \\[(\\d+):0\\]                \n                # \u6709\u4f4d\u5bbd\u5219d+1,\u5426\u52191\n                if port_rag:\n                    if re.search(re_port, line).group(5).isdigit():#\\d+\u4f4d\u5bbd\n                        port_wid = re.search(re_port, line).group(4)\n                    elif re.search(re_port, line).group(5).replace('`', '') in obj_include.keys():\n                        port_wid = obj_include[re.search(re_port, line).group(5).replace('`', '')]\n                    else:\n                        port_wid = re.search(re_port, line).group(4)\n                else:\n                    port_wid = 1\n                port_sig = re.search(re_port, line).group(7)#\\w+\u7aef\u53e3\u540d\u5b57\n                if port_sig not in obj_dir:\n                    obj_dir[port_sig] = port_dir\n                    obj_wid[port_sig] = port_wid\n                    obj_cnt[port_sig] = 1\n                    obj_exp[port_sig] = port_dir\n                    obj_lin[port_sig] = line\n                else:\n                    obj_cnt[port_sig] = 1 + obj_cnt[port_sig]\n            elif re.search(re_wire, line):\n                wire_dir = re.search(re_wire, line).group(3)#input|output\n                wire_rag = re.search(re_wire, line).group(5)#\\[(\\d+):0\\]\n                if wire_rag:\n                    if re.search(re_wire, line).group(7).isdigit():#\\d+\u4f4d\u5bbd\n                        wire_wid = re.search(re_wire, line).group(6) \n                    elif re.search(re_wire, line).group(7).replace('`', '') in obj_include.keys():\n                            wire_wid = obj_include[re.search(re_wire, line).group(6).replace('`', '')]\n                    else:\n                        wire_wid = re.search(re_wire, line).group(6)\n                else:\n                    wire_wid = 1\n                wire_sig = re.search(re_wire, line).group(1)#\\w+\u4fe1\u53f7\u540d\n                if wire_sig not in obj_dir:\n                    obj_dir[wire_sig] = wire_dir\n                    obj_wid[wire_sig] = wire_wid\n                    obj_cnt[wire_sig] = 1\n                    obj_exp[wire_sig] = 'wire'\n                    obj_lin[wire_sig] = line\n                else:\n                    obj_cnt[wire_sig] = 1 + obj_cnt[wire_sig]\n                    if wire_wid != obj_wid[wire_sig]:#\u76f8\u8fde\u4fe1\u53f7\u5bbd\u5ea6\u4e0d\u5339\u914d\n                        print('Error: width mismath -&gt; ', obj_lin[wire_sig], wire_sig)\n    return obj_dir, obj_wid, obj_cnt, obj_exp, obj_lin\n\n#  \u672a\u8fde\u63a5\u68c0\u67e5\ndef get_float(obj_wid, obj_exp):\n    for obj in sorted(obj_wid):\n        if obj_cnt[obj] == 1:\n            if 'wire'  in obj_exp[obj]:\n                print('Error: not connected wire -&gt; ', obj_lin[obj], obj_cnt[obj])\n    return True\n#  \u591a\u9a71\u52a8\u68c0\u67e5\ndef get_broadcast(obj_wid, obj_exp):\n    for obj in sorted(obj_wid):\n        if obj_cnt[obj] &gt; 3:\n            print('Info: multiple load wire -&gt; ', obj_lin[obj], obj_cnt[obj])\n    return True\n\nif __name__ == '__main__':\n    obj_include = get_include(top_path)\n    obj_dir, obj_wid, obj_cnt, obj_exp, obj_lin = get_sigs(top_path,obj_include)\n    get_float(obj_wid, obj_exp)\n    get_broadcast(obj_wid, obj_exp)   \n\nprint('------END-------') \n</code></pre>"},{"location":"Architecture/SystemC/","title":"Introduction","text":"<p>learnsystemc</p> <p>https://www.learnsystemc.com/</p> <p>SystemC\u5165\u95e8</p> <p>SystemC\u5165\u95e8</p>"},{"location":"Coprocessor/","title":"Getting Started","text":"<p>\u76ee\u524d\u5b66\u672f\u754c\u5f00\u6e90\u7684RISC-V\u534f\u5904\u7406\u5668\u9879\u76ee\u5305\u62ec\uff1aVicuna\u3001RISC-V2\u3001Hwacha\u3001Ara2\u3002</p> <p>Vicuna</p> <p>https://github.com/vproc/vicuna</p> <p>RISC-V2</p> <p>https://github.com/ic-lab-duth/RISC-V-Vector</p> <p>Hwacha</p> <p>https://github.com/ucb-bar/hwacha</p> <p>Ara2</p> <p>https://github.com/pulp-platform/ara</p>"},{"location":"Coprocessor/Introduction/","title":"Coprocessor Open Source Project","text":"<p>\u76ee\u524d\u5b66\u672f\u754c\u5f00\u6e90\u7684RISC-V\u534f\u5904\u7406\u5668\u9879\u76ee\u5305\u62ec\uff1aVicuna\u3001RISC-V2\u3001Hwacha\u3001Ara2\u3002 \u8fd9\u91cc\u4e3b\u8981\u7814\u7a76Ara2\u9879\u76ee\u3002</p> <p>Vicuna</p> <p>https://github.com/vproc/vicuna</p> <p>RISC-V2</p> <p>https://github.com/ic-lab-duth/RISC-V-Vector</p> <p>Hwacha</p> <p>https://github.com/ucb-bar/hwacha</p> <p>Ara2</p> <p>https://github.com/pulp-platform/ara</p>"},{"location":"Coprocessor/Ara2/CV6/","title":"CV6","text":"<p>\u4e2d\u6587\u53c2\u8003\u8d44\u6599</p> <p>https://zhuanlan.zhihu.com/p/444233485</p>"},{"location":"Coprocessor/Ara2/Introduction/","title":"Introduction","text":"<p>This is the introduction of the Ara2 coprocessor. </p>"},{"location":"Coprocessor/Ara2/Top/","title":"TOP","text":""},{"location":"Coprocessor/Ara2/Top/#arasv","title":"ara.sv","text":"<p>Ara's top-level, interfacing with Ariane.</p> <p>\u8be5\u6a21\u5757\u662f Ara \u5904\u7406\u5668\u7684\u9876\u5c42\u6a21\u5757\uff0c\u4e0ecva6\u5904\u7406\u5668\u63a5\u53e3\u3002\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a <code>\u53c2\u6570\u5b9a\u4e49</code>\uff1a\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u5305\u62ec\u5e76\u884c\u5411\u91cf\u901a\u9053\u6570\u3001\u5411\u91cf\u957f\u5ea6\u3001\u6d6e\u70b9\u652f\u6301\u3001\u56fa\u5b9a\u70b9\u652f\u6301\u7b49\u3002 <code>\u7aef\u53e3\u58f0\u660e</code>\uff1a\u58f0\u660e\u4e86\u65f6\u949f\u3001\u590d\u4f4d\u3001\u626b\u63cf\u94fe\u8f93\u5165\u8f93\u51fa\u3001\u4e0e Ariane \u7684\u63a5\u53e3\u3001AXI \u63a5\u53e3\u7b49\u7aef\u53e3\u3002 <code>\u5b9a\u4e49\u548c\u7c7b\u578b\u58f0\u660e</code>\uff1a\u5b9a\u4e49\u4e86\u591a\u4e2a\u7c7b\u578b\u548c\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e0d\u540c\u6a21\u5757\u4e4b\u95f4\u7684\u63a5\u53e3\u548c\u6570\u636e\u7ed3\u6784\u3002 <code>\u6a21\u5757\u5b9e\u4f8b\u5316</code>\uff1a\u5b9e\u4f8b\u5316\u4e86\u591a\u4e2a\u5b50\u6a21\u5757\uff0c\u5305\u62ec\u8c03\u5ea6\u5668\u3001\u5e8f\u5217\u5668\u3001\u901a\u9053\u3001\u5411\u91cf\u52a0\u8f7d\u5b58\u50a8\u5355\u5143\u3001\u6ed1\u52a8\u5355\u5143\u3001\u63a9\u7801\u5355\u5143\u3002 <code>\u65ad\u8a00</code>\uff1a\u5b9a\u4e49\u4e86\u591a\u4e2a\u65ad\u8a00\uff0c\u7528\u4e8e\u68c0\u67e5\u53c2\u6570\u7684\u5408\u6cd5\u6027\uff0c\u786e\u4fdd\u6a21\u5757\u5728\u6b63\u786e\u7684\u914d\u7f6e\u4e0b\u8fd0\u884c\u3002  </p> <pre><code>module ara import ara_pkg::*; #(\n    // RVV Parameters\n    parameter  int           unsigned NrLanes      = 0,                          // Number of parallel vector lanes.\n    parameter  int           unsigned VLEN         = 0,                          // VLEN [bit]\n    // Support for floating-point data types\n    parameter  fpu_support_e          FPUSupport   = FPUSupportHalfSingleDouble,\n    // External support for vfrec7, vfrsqrt7\n    parameter  fpext_support_e        FPExtSupport = FPExtSupportEnable,\n    // Support for fixed-point data types\n    parameter  fixpt_support_e        FixPtSupport = FixedPointEnable,\n    // AXI Interface\n    parameter  int           unsigned AxiDataWidth = 0,\n    parameter  int           unsigned AxiAddrWidth = 0,\n    parameter  type                   axi_ar_t     = logic,\n    parameter  type                   axi_r_t      = logic,\n    parameter  type                   axi_aw_t     = logic,\n    parameter  type                   axi_w_t      = logic,\n    parameter  type                   axi_b_t      = logic,\n    parameter  type                   axi_req_t    = logic,\n    parameter  type                   axi_resp_t   = logic,\n    // Dependant parameters. DO NOT CHANGE!\n    // Ara has NrLanes + 3 processing elements: each one of the lanes, the vector load unit, the\n    // vector store unit, the slide unit, and the mask unit.\n    localparam int           unsigned NrPEs        = NrLanes + 4,\n    localparam type                   vlen_t       = logic[$clog2(VLEN+1)-1:0],\n    localparam int           unsigned VLENB        = VLEN / 8\n  ) (\n    // Clock and Reset\n    input  logic              clk_i,\n    input  logic              rst_ni,\n    // Scan chain\n    input  logic              scan_enable_i,\n    input  logic              scan_data_i,\n    output logic              scan_data_o,\n\n    // Interface with Ariane\n    input  cva6_to_acc_t      acc_req_i,\n    output acc_to_cva6_t      acc_resp_o,\n    // AXI interface\n    output axi_req_t          axi_req_o,\n    input  axi_resp_t         axi_resp_i\n  );\n</code></pre>"},{"location":"Coprocessor/Ara2/Top/#ara_systemsv","title":"ara_system.sv","text":"<p>Ara's System, containing CV6 and Ara.</p> <pre><code>module ara import ara_pkg::*; #(\n    // RVV Parameters\n    parameter  int           unsigned NrLanes      = 0,                          // Number of parallel vector lanes.\n    parameter  int           unsigned VLEN         = 0,                          // VLEN [bit]\n    // Support for floating-point data types\n    parameter  fpu_support_e          FPUSupport   = FPUSupportHalfSingleDouble,\n    // External support for vfrec7, vfrsqrt7\n    parameter  fpext_support_e        FPExtSupport = FPExtSupportEnable,\n    // Support for fixed-point data types\n    parameter  fixpt_support_e        FixPtSupport = FixedPointEnable,\n    // AXI Interface\n    parameter  int           unsigned AxiDataWidth = 0,\n    parameter  int           unsigned AxiAddrWidth = 0,\n    parameter  type                   axi_ar_t     = logic,\n    parameter  type                   axi_r_t      = logic,\n    parameter  type                   axi_aw_t     = logic,\n    parameter  type                   axi_w_t      = logic,\n    parameter  type                   axi_b_t      = logic,\n    parameter  type                   axi_req_t    = logic,\n    parameter  type                   axi_resp_t   = logic,\n    // Dependant parameters. DO NOT CHANGE!\n    // Ara has NrLanes + 3 processing elements: each one of the lanes, the vector load unit, the\n    // vector store unit, the slide unit, and the mask unit.\n    localparam int           unsigned NrPEs        = NrLanes + 4,\n    localparam type                   vlen_t       = logic[$clog2(VLEN+1)-1:0],\n    localparam int           unsigned VLENB        = VLEN / 8\n  ) (\n    // Clock and Reset\n    input  logic              clk_i,\n    input  logic              rst_ni,\n    // Scan chain\n    input  logic              scan_enable_i,\n    input  logic              scan_data_i,\n    output logic              scan_data_o,\n\n    // Interface with Ariane\n    input  cva6_to_acc_t      acc_req_i,\n    output acc_to_cva6_t      acc_resp_o,\n    // AXI interface\n    output axi_req_t          axi_req_o,\n    input  axi_resp_t         axi_resp_i\n  );\n</code></pre>"},{"location":"Coprocessor/Ara2/Top/#ara_socsv","title":"ara_soc.sv","text":"<p>Ara's SoC, containing CVA6, Ara, and a L2 cache.</p> <p>ara_soc\u6a21\u5757\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53c2\u6570\u5316\u7684SoC\u7ec4\u4ef6\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5305\u542bCVA6\u3001Ara\u548cL2\u7f13\u5b58\u7684SoC\uff08\u7247\u4e0a\u7cfb\u7edf\uff09\u3002\u6a21\u5757\u901a\u8fc7AXI\u63a5\u53e3\u4e0e\u5916\u90e8\u8fdb\u884c\u901a\u4fe1\uff0c\u5e76\u652f\u6301\u5411\u91cf\u5904\u7406\u3001\u6d6e\u70b9\u8fd0\u7b97\u548c\u5b9a\u70b9\u8fd0\u7b97\u3002\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86UART APB\u63a5\u53e3\u7528\u4e8e\u4e32\u884c\u901a\u4fe1\uff0c\u5e76\u5305\u542b\u626b\u63cf\u94fe\u63a5\u53e3\u7528\u4e8e\u6d4b\u8bd5\u3002</p>"},{"location":"Coprocessor/Ara2/Top/#_1","title":"\u6a21\u5757\u58f0\u660e\u4e0e\u53c2\u6570\u5b9a\u4e49","text":"<ul> <li>\u6a21\u5757\u58f0\u660e\uff1a\u5b9a\u4e49\u4e86ara_soc\u6a21\u5757\uff0c\u5bfc\u5165axi_pkg\u548cara_pkg\u5305\u3002</li> <li>\u53c2\u6570\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u5305\u62ec\u5411\u91cf\u901a\u9053\u6570\u3001VLEN\u3001\u6d6e\u70b9\u652f\u6301\u3001\u5b9a\u70b9\u652f\u6301\u3001AXI\u63a5\u53e3\u53c2\u6570\u7b49\u3002</li> <li>\u7aef\u53e3\u58f0\u660e\uff1a\u5305\u62ec\u65f6\u949f\u3001\u590d\u4f4d\u3001\u626b\u63cf\u94fe\u3001UART APB\u63a5\u53e3\u7b49\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#_2","title":"\u5185\u5b58\u533a\u57df","text":"<ul> <li>AXI\u4e3b\u4ece\u7aef\u53e3\u6570\uff1a\u5b9a\u4e49\u4e86AXI\u4e3b\u4ece\u7aef\u53e3\u6570\u3002  </li> <li>\u5185\u5b58\u6620\u5c04\uff1a\u5b9a\u4e49\u4e86\u5404\u4e2a\u5185\u5b58\u533a\u57df\u7684\u957f\u5ea6\u548c\u57fa\u5730\u5740\uff0c\u4ee5\u4fbf\u8fdb\u884c\u5185\u5b58\u6620\u5c04\u548c\u5730\u5740\u5206\u914d\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#axi","title":"AXI","text":"<ul> <li>AXI\u6570\u636e\u5bbd\u5ea6\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86\u7a84\u548c\u5bbd\u6570\u636e\u5bbd\u5ea6\u3002  </li> <li>AXI ID\u5bbd\u5ea6\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86Soc\u548cCore\u7684ID\u5bbd\u5ea6\u3002  </li> <li>AXI\u7c7b\u578b\u5b9a\u4e49\uff1a\u4f7f\u7528\u5b8f\u5b9a\u4e49\u4e86\u591a\u79cdAXI\u7c7b\u578b<code>AXI_TYPEDEF_ALL</code>\u548c<code>AXI_LITE_TYPEDEF_ALL</code>\u3002  </li> <li>AXI\u603b\u7ebf\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86\u7cfb\u7edfAXI\u603b\u7ebf\u548c\u5916\u8bbeAXI\u603b\u7ebf\u3002  </li> <li>\u914d\u7f6ecrossbar\uff1a\u901a\u8fc7\u5b9a\u4e49XBarCfg\u7ed3\u6784\u4f53\uff0c\u8bbe\u7f6e\u4e86\u4ea4\u53c9\u5f00\u5173\u7684\u5404\u79cd\u53c2\u6570\uff0c\u5982\u7aef\u53e3\u6570\u91cf\u3001\u4f20\u8f93\u9650\u5236\u3001\u5730\u5740\u5bbd\u5ea6\u3001\u6570\u636e\u5bbd\u5ea6\u7b49\u3002  </li> <li>\u5b9a\u4e49\u8def\u7531\u89c4\u5219\uff1a\u901a\u8fc7routing_rules\u6570\u7ec4\uff0c\u5b9a\u4e49\u4e86\u4e0d\u540c\u8bbe\u5907\uff08\u5982CTRL\u3001UART\u3001L2MEM\uff09\u7684\u5730\u5740\u8303\u56f4\uff0c\u7528\u4e8e\u6570\u636e\u5305\u7684\u8def\u7531\u3002  </li> <li>\u5b9e\u4f8b\u5316crossbar\uff1a\u901a\u8fc7axi_xbar\u6a21\u5757\uff0c\u5c06\u914d\u7f6e\u548c\u8def\u7531\u89c4\u5219\u5e94\u7528\u5230\u5b9e\u9645\u7684\u786c\u4ef6\u6a21\u5757\u4e2d\uff0c\u5b9e\u73b0\u4e86\u4ece\u4e3b\u8bbe\u5907\u5230\u4ece\u8bbe\u5907\u7684\u6570\u636e\u4f20\u8f93\u63a7\u5236\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#l2-cache","title":"L2 Cache","text":"<ul> <li>L2\u7f13\u5b58\u914d\u7f6e\uff1a\u5b9a\u4e49\u4e86L2\u7f13\u5b58\u7684AXI\u539f\u5b50\u64cd\u4f5c\u8fc7\u6ee4\u5668<code>axi_atop_filter</code>\u3002  </li> <li>AXI\u5230\u5185\u5b58\u8f6c\u6362\uff1a\u5b9e\u4f8b\u5316\u4e86AXI\u5230\u5185\u5b58\u7684\u8f6c\u6362\u6a21\u5757<code>axi_to_mem</code>\u3002  </li> <li>SRAM\u5b9e\u4f8b\u5316\uff1a\u5b9e\u4f8b\u5316\u4e86SRAM\u6a21\u5757\uff0c\u7528\u4e8eL2\u7f13\u5b58<code>tc_sram</code>\u3002\u5728\u4eff\u771f\u73af\u5883\u4e2d\uff0c\u4f7f\u7528tc_sram\u6a21\u5757\u6a21\u62dfSRAM\u6216DRAM\uff1b\u5728\u5f62\u5f0f\u9a8c\u8bc1\u73af\u5883\u4e2d\uff0c\u5219\u7b80\u5355\u5730\u5c06l2_rdata\u8d4b\u503c\u4e3a0\u3002  </li> </ul>"},{"location":"Coprocessor/Ara2/Top/#uart","title":"UART","text":"<ul> <li>\u5b9a\u4e49AXI\u3001AXI-Lite\u548cAPB\u534f\u8bae\u7684\u7c7b\u578b\u3002  </li> <li>\u58f0\u660eUART\u6a21\u5757\u6240\u9700\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u4fe1\u53f7\u3002  </li> <li>\u5c06APB\u8bf7\u6c42\u4fe1\u53f7\u8fde\u63a5\u5230UART\u6a21\u5757\u7684\u8f93\u51fa\u7aef\u53e3\uff0c\u5e76\u5c06UART\u6a21\u5757\u7684\u8f93\u5165\u7aef\u53e3\u8fde\u63a5\u5230APB\u54cd\u5e94\u4fe1\u53f7\u3002  </li> <li>\u5b9a\u4e49APB\u5730\u5740\u6620\u5c04\u89c4\u5219\u3002  </li> <li>\u5b9e\u4f8b\u5316AXI-Lite\u5230APB\u7684\u8f6c\u6362\u6a21\u5757\uff0c\u5c06AXI-Lite\u534f\u8bae\u8f6c\u6362\u4e3aAPB\u534f\u8bae\u3002  </li> <li>\u5b9e\u4f8b\u5316AXI\u5230AXI-Lite\u7684\u8f6c\u6362\u6a21\u5757\uff0c\u5c06\u5b8c\u6574\u7684AXI\u534f\u8bae\u8f6c\u6362\u4e3aAXI-Lite\u534f\u8bae\u3002  </li> <li>\u5b9e\u4f8b\u5316AXI\u6570\u636e\u5bbd\u5ea6\u8f6c\u6362\u6a21\u5757\uff0c\u5c06\u5bbd\u6570\u636e\u5bbd\u5ea6\u7684AXI\u8bf7\u6c42\u8f6c\u6362\u4e3a\u7a84\u6570\u636e\u5bbd\u5ea6\u7684AXI\u8bf7\u6c42\u3002  </li> </ul>"},{"location":"Coprocessor/Ara2/Top/#csr","title":"CSR","text":""},{"location":"Coprocessor/Ara2/Top/#_3","title":"\u7cfb\u7edf","text":""},{"location":"Coprocessor/Ara2/Top/#_4","title":"\u65ad\u8a00","text":"<ul> <li>\u5b9a\u4e49\u591a\u4e2a\u65ad\u8a00\uff0c\u7528\u4e8e\u68c0\u67e5\u53c2\u6570\u7684\u5408\u6cd5\u6027\uff0c\u786e\u4fdd\u6a21\u5757\u5728\u6b63\u786e\u7684\u914d\u7f6e\u4e0b\u8fd0\u884c\u3002  </li> </ul> <pre><code>module ara_soc import axi_pkg::*; import ara_pkg::*; #(\n    // RVV Parameters\n    parameter  int           unsigned NrLanes      = 0,                          // Number of parallel vector lanes.\n    parameter  int           unsigned VLEN         = 0,                          // VLEN [bit]\n    // Support for floating-point data types\n    parameter  fpu_support_e          FPUSupport   = FPUSupportHalfSingleDouble,\n    // External support for vfrec7, vfrsqrt7\n    parameter  fpext_support_e        FPExtSupport = FPExtSupportEnable,\n    // Support for fixed-point data types\n    parameter  fixpt_support_e        FixPtSupport = FixedPointEnable,\n    // AXI Interface\n    parameter  int           unsigned AxiDataWidth = 32*NrLanes,\n    parameter  int           unsigned AxiAddrWidth = 64,\n    parameter  int           unsigned AxiUserWidth = 1,\n    parameter  int           unsigned AxiIdWidth   = 5,\n    // AXI Resp Delay [ps] for gate-level simulation\n    parameter  int           unsigned AxiRespDelay = 200,\n    // Main memory\n    parameter  int           unsigned L2NumWords   = 2**20,\n    // Dependant parameters. DO NOT CHANGE!\n    localparam type                   axi_data_t   = logic [AxiDataWidth-1:0],\n    localparam type                   axi_strb_t   = logic [AxiDataWidth/8-1:0],\n    localparam type                   axi_addr_t   = logic [AxiAddrWidth-1:0],\n    localparam type                   axi_user_t   = logic [AxiUserWidth-1:0],\n    localparam type                   axi_id_t     = logic [AxiIdWidth-1:0]\n  ) (\n    input  logic        clk_i,\n    input  logic        rst_ni,\n    output logic [63:0] exit_o,\n    output logic [63:0] hw_cnt_en_o,\n    // Scan chain\n    input  logic        scan_enable_i,\n    input  logic        scan_data_i,\n    output logic        scan_data_o,\n    // UART APB interface\n    output logic        uart_penable_o,\n    output logic        uart_pwrite_o,\n    output logic [31:0] uart_paddr_o,\n    output logic        uart_psel_o,\n    output logic [31:0] uart_pwdata_o,\n    input  logic [31:0] uart_prdata_i,\n    input  logic        uart_pready_i,\n    input  logic        uart_pslverr_i\n  );\n</code></pre>"},{"location":"Coprocessor/ISA/RV-Mareix/","title":"RISC-V Matrix","text":""},{"location":"Coprocessor/ISA/RV-Mareix/#introduction","title":"Introduction","text":"<p>\u76ee\u524dRISC-V\u56fd\u9645\u57fa\u91d1\u4f1a\u6b63\u5728\u79ef\u6781\u63a8\u52a8\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u6b63\u5f0f\u7248\u7684\u8fdb\u5c55\u3002\u73b0\u5728\u6709\u4e24\u79cd\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u7684\u601d\u8def\uff0c\u4e00\u79cd\u662f\u5728RVV\u7684\u57fa\u7840\u4e0a\uff0c\u590d\u7528\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u6765\u6269\u5c55\u77e9\u9635\u8fd0\u7b97\u7684\u80fd\u529b\uff0c\u53e6\u4e00\u79cd\u5219\u662f\u8bbe\u8ba1\u5168\u65b0\u7684\u77e9\u9635\u72b6\u6001\uff0c\u901a\u8fc7\u4e0e\u5411\u91cf\u8fdb\u884c\u89e3\u8026\u5f62\u6210\u4e00\u5957\u5b8c\u6574\u72ec\u7acb\u7684\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u3002\u76ee\u524d\u6765\u8bf4\uff0c\u672c\u65b9\u6848\u503e\u5411\u4e8e\u5236\u5b9a\u4e00\u5957\u5b8c\u6574\u72ec\u7acb\u7684\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\uff0c\u56e0\u4e3a\u5411\u91cf\u548c\u77e9\u9635\u7684\u5e94\u7528\u573a\u666f\u5e76\u4e0d\u91cd\u5408\uff0c\u5411\u91cf\u6269\u5c55\u53ef\u4ee5\u66f4\u597d\u5730\u89e3\u51b3\u4e0d\u89c4\u5219\u77e9\u9635\u8fd0\u7b97\uff0c\u800c\u77e9\u9635\u6269\u5c55\u53ef\u4ee5\u5728\u89c4\u5219\u7684\u77e9\u9635\u8fd0\u7b97\u4e2d\u5f97\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002\u72ec\u7acb\u7684\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u5bf9\u4e0d\u540c\u7684\u4eba\u5de5\u667a\u80fd\u573a\u666f\u4e5f\u4f1a\u6709\u4e0d\u540c\u7684\u5e94\u7528\u3002\u5229\u7528\u5411\u91cf\u6269\u5c55\u53ef\u4ee5\u66f4\u597d\u5730\u8fdb\u884c\u52a0\u89e3\u5bc6\u7684\u64cd\u4f5c\uff0c\u800c\u901a\u8fc7\u77e9\u9635\u6269\u5c55\u53ef\u4ee5\u8fdb\u884c\u4eba\u5de5\u667a\u80fd\u590d\u6742\u573a\u666f\u7684\u8fd0\u7b97\u3002\u5e76\u4e14\u72ec\u7acb\u7684\u77e9\u9635\u6269\u5c55\u5177\u5907\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u5411\u91cf\u6269\u5c55\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u9762\u5bf9\u4e0d\u540c\u7684\u4eba\u5de5\u667a\u80fd\u573a\u666f\u3002 \u5728\u6b64\uff0c\u7814\u7a76\u7384\u94c1\u56e2\u961f\u7684\u81ea\u5b9a\u4e49\u77e9\u9635\u6269\u5c55\u3002</p> <ul> <li> \u72ec\u7acb\u89e3\u8026\u7684\u77e9\u9635\u6269\u5c55</li> <li> \u8bbe\u8ba1\u77e9\u9635\u5bc4\u5b58\u5668\u7ec4\u53ca\u76f8\u5173\u6307\u4ee4\u96c6</li> <li> \u77e9\u9635\u6269\u5c55\u53ef\u4ee5\u8fdb\u884c\u4eba\u5de5\u667a\u80fd\u590d\u6742\u573a\u666f\u7684\u8fd0\u7b97</li> </ul>"},{"location":"Coprocessor/ISA/RV-Mareix/#matrix-register","title":"Matrix Register","text":""},{"location":"Coprocessor/ISA/RV-Mareix/#matrix-size","title":"Matrix Size","text":""},{"location":"Coprocessor/ISA/RV-Mareix/#matrix-isa","title":"Matrix ISA","text":"<p> XuantieSpec</p> <p>https://github.com/XUANTIE-RV/riscv-matrix-extension-spec</p>"},{"location":"Coprocessor/ISA/RV-Vector/","title":"RISC-V Vector","text":"<p>RISC-V\u6307\u4ee4\u96c6\u67b6\u6784\u4e2d\u7684\u5411\u91cf\u6307\u4ee4\u96c6\u6269\u5c55RVV\uff08RISC-V \u201cV\u201d Vector\uff09\uff0c\u5177\u6709\u5411\u91cf\u957f\u5ea6\u548c\u5411\u91cf\u4f4d\u5bbd\u7075\u6d3b\u53ef\u53d8\u3001\u63d0\u4f9b\u591a\u79cd\u5bfb\u5740\u6a21\u5f0f\u3001\u62e5\u6709\u7528\u4e8e\u652f\u6301\u6761\u4ef6\u6267\u884c\u7684\u63a9\u7801\u5bc4\u5b58\u5668\u7b49\u7279\u70b9\u3002\u76ee\u524dRVV\u6269\u5c55\u7684\u89c4\u683c\u6587\u6863\u5df2\u53d1\u5e03\u4e86\u7a33\u5b9a\u76841.0\u7248\u672c\uff0cRISC-V\u5411\u91cf\u52a0\u89e3\u5bc6\u6807\u51c6\u4e5f\u57282023\u5e7410\u6708\u53d1\u5e03\u4e861.0\u6b63\u5f0f\u7248\u3002</p> <p>RVV1.0 Spec</p> <p>https://github.com/riscv/riscv-v-spec</p> <p>RVV intrinsic</p> <p>https://github.com/riscv-non-isa/rvv-intrinsic-doc</p> <p>RVV Crypto Spec</p> <p>https://github.com/riscv/riscv-crypto</p> <p>\u4e2d\u6587\u53c2\u8003\u8d44\u6599</p> <p>https://www.cnblogs.com/lyc-seu/p/16999784.html</p>"},{"location":"GPGPU/","title":"Getting Started","text":"<p>\u76ee\u524d\u5b66\u672f\u754c\u5f00\u6e90\u7684GPGPU\u9879\u76ee\u4e3b\u8981\u6709\uff1a</p> <p>Tiny-gpu</p> <p>https://github.com/adam-maj/tiny-gpu</p> <p>Ventus</p> <p>https://opengpgpu.org.cn/</p> <p>Vortex</p> <p>https://github.com/vortexgpgpu</p>"},{"location":"GPGPU/Introduction/","title":"GPGPU","text":""},{"location":"GPGPU/Introduction/#introduction","title":"Introduction","text":"<p>GPGPU\uff08General-Purpose computing on Graphics Processing Units\uff09\u662f\u4e00\u79cd\u5229\u7528\u56fe\u5f62\u5904\u7406\u5355\u5143\uff08GPU\uff09\u6267\u884c\u4f20\u7edf\u4e0a\u7531\u4e2d\u592e\u5904\u7406\u5668\uff08CPU\uff09\u5904\u7406\u7684\u8ba1\u7b97\u4efb\u52a1\u7684\u6280\u672f\u3002GPU\u6700\u521d\u4e3b\u8981\u7528\u4e8e\u56fe\u5f62\u6e32\u67d3\uff0c\u4f46\u7531\u4e8e\u5176\u5f3a\u5927\u7684\u5e76\u884c\u5904\u7406\u80fd\u529b\uff0c\u9010\u6e10\u88ab\u5e94\u7528\u4e8e\u5e7f\u6cdb\u7684\u975e\u56fe\u5f62\u8ba1\u7b97\u9886\u57df\uff0c\u5982\u79d1\u5b66\u8ba1\u7b97\u3001\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u7b49\u3002\u968f\u7740GPU\u7684\u53d1\u5c55\uff0cGPGPU\u5c06\u4f1a\u6210\u4e3a\u672a\u6765\u8ba1\u7b97\u9886\u57df\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002</p>"},{"location":"GPGPU/Introduction/#simt","title":"SIMT","text":"<p>SIMD\u5229\u7528\u540c\u4e00\u6761\u6307\u4ee4\u5728\u4e0d\u540c\u6570\u636e\u4e0a\u6267\u884c\u76f8\u540c\u64cd\u4f5c\uff0c\u9700\u8981\u6570\u636e\u5728\u7a7a\u95f4\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u8fd8\u9700\u8981\u501f\u52a9\u5176\u4ed6\u6307\u4ee4\u5bf9\u6570\u636e\u8fdb\u884c\u91cd\u7ec4\u548c\u62c6\u5206\uff1b\u800cSIMT\u5229\u7528\u4e0d\u540c\u7ebf\u7a0b\u6267\u884c\u540c\u4e00\u6307\u4ee4\u6765\u5904\u7406\u4e0d\u540c\u6570\u636e\uff0c\u901a\u8fc7\u5404\u4e2a\u7ebf\u7a0b\u72ec\u7acb\u5bf9\u6570\u636e\u8fdb\u884c\u7075\u6d3b\u7d22\u5f15\uff0c\u964d\u4f4e\u7a7a\u95f4\u8fde\u7eed\u6027\u7684\u9700\u6c42\u3002 SIMD\u5f80\u5f80\u9700\u8981\u6307\u4ee4\u663e\u5f0f\u5730\u5bf9\u6d3b\u63a9\u7801\u5bc4\u5b58\u5668\u8fdb\u884c\u8bbe\u7f6e\uff0c\u4ee5\u63a7\u5236\u76f8\u5e94\u6570\u636e\u662f\u5426\u53c2\u4e0e\u8ba1\u7b97\uff1b\u800cSIMT\u5f80\u5f80\u901a\u8fc7\u786c\u4ef6\u81ea\u52a8\u5bf9\u8c13\u8bcd\u5bc4\u5b58\u5668\u8fdb\u884c\u7ba1\u7406\u3002SIMT\u8fd8\u5141\u8bb8\u7ebf\u7a0b\u5206\u652f\uff0c\u5b9e\u73b0\u591a\u6267\u884c\u8def\u5f84\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u95f4\u63a5\u652f\u6301MIMD\u6267\u884c\u6a21\u5f0f\u3002 SIMD\u6a21\u578b\u5728\u4e0d\u540c\u5e76\u884c\u5143\u7d20\u4e2a\u6570\u5f80\u5f80\u9700\u8981\u8bbe\u8ba1\u4e0d\u540c\u683c\u5f0f\u7684SIMD\u6307\u4ee4\uff0c\u9020\u6210\u6307\u4ee4\u89c4\u6a21\u7684\u81a8\u80c0\uff1b\u800cSIMT\u5bf9\u7ebf\u7a0b\u6570\u539f\u5219\u4e0a\u6ca1\u6709\u9650\u5236\uff0c\u786c\u4ef6\u7ba1\u7406\u65b9\u5f0f\u4e5f\u4f7f\u5f97SIMT\u4e0d\u9700\u8981\u8bbe\u8ba1\u65b0\u7684\u6307\u4ee4</p>"},{"location":"GPGPU/Introduction/#open-source-projects","title":"Open Source Projects","text":"<p>Tiny-gpu</p> <p>https://github.com/adam-maj/tiny-gpu</p> <p>Ventus</p> <p>https://opengpgpu.org.cn/</p> <p>Vortex</p> <p>https://github.com/vortexgpgpu</p>"},{"location":"GPGPU/Introduction/#note","title":"Note","text":"<p>\u901a\u7528\u56fe\u5f62\u5904\u7406\u5668\u8bbe\u8ba1</p> <p>https://blog.csdn.net/AHAHAya_/article/details/132180893?spm=1001.2014.3001.5502</p> <p>\u7b14\u8bb0</p> <p>https://arthurchiao.art/blog/gpu-advanced-notes-1-zh/</p>"},{"location":"GPGPU/Tiny-gpu/","title":"Tiny-gpu","text":""},{"location":"GPGPU/Tiny-gpu/#introduction","title":"Introduction","text":"<p>Tiny-gpu\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 GPU \u6a21\u578b\uff0c\u4e13\u4e3a\u5e2e\u52a9\u7528\u6237\u4ece\u5934\u5f00\u59cb\u7406\u89e3 GPU \u7684\u5de5\u4f5c\u539f\u7406\u800c\u8bbe\u8ba1\u3002\u8fd9\u662f\u6700\u7b80\u5355\u7684\u5f00\u6e90gpgpu\u9879\u76ee\uff0c\u9002\u5408gpu\u5165\u95e8\u5b66\u4e60\u3002</p> <p>\u9879\u76ee\u4e3b\u8981\u4fa7\u91cd\u4e8e\u63a2\u7d22\u4ee5\u4e0b\u65b9\u9762</p> <ul> <li>\u67b6\u6784 (Architecture)\uff1aGPU \u7684\u67b6\u6784\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u54ea\u4e9b\u5143\u7d20\u6700\u91cd\u8981?</li> <li>\u5e76\u884c\u5316 (Parallelization)\uff1a\u5982\u4f55\u5728\u786c\u4ef6\u4e2d\u5b9e\u73b0 SIMD \u7f16\u7a0b\u6a21\u578b\uff1f  </li> <li>\u5185\u5b58 (Memory)\uff1aGPU \u5982\u4f55\u5e94\u5bf9\u5185\u5b58\u5e26\u5bbd\u6709\u9650\u7684\u9650\u5236\uff1f</li> </ul> <p>Tiny-gpu\u7b80\u5316\u4e86\u6267\u884c\u6d41\u7a0b\uff0c\u4e00\u6b21\u4ec5\u5904\u7406\u4e00\u4e2a\u5185\u6838 (kernel)\u3002 \u542f\u52a8\u5185\u6838\u7684\u6b65\u9aa4\u5982\u4e0b</p> <ul> <li>\u52a0\u8f7d\u5168\u5c40\u7a0b\u5e8f\u5185\u5b58\uff1a\u5c06\u5185\u6838\u4ee3\u7801\u52a0\u8f7d\u5230\u5168\u5c40\u7a0b\u5e8f\u5185\u5b58\u4e2d\u3002</li> <li>\u52a0\u8f7d\u6570\u636e\u5185\u5b58\uff1a\u5c06\u5fc5\u9700\u7684\u6570\u636e\u52a0\u8f7d\u5230\u6570\u636e\u5185\u5b58\u4e2d\u3002</li> <li>\u6307\u5b9a\u7ebf\u7a0b\u6570\u91cf\uff1a\u5728\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668\u4e2d\u6307\u5b9a\u8981\u542f\u52a8\u7684\u7ebf\u7a0b\u6570\u91cf\u3002</li> <li>\u542f\u52a8\u5185\u6838\uff1a\u5c06\u542f\u52a8\u4fe1\u53f7\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\uff0c\u542f\u52a8\u5185\u6838\u6267\u884c\u3002</li> </ul>"},{"location":"GPGPU/Tiny-gpu/#architecture","title":"Architecture","text":"<p>Tiny-gpu \u672c\u8eab\u5305\u542b\u4ee5\u4e0b\u5355\u5143\uff1a</p> <ul> <li>\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668\uff1a\u7528\u4e8e\u5b58\u50a8\u7ebf\u7a0b\u6570\u91cf\u7b49\u63a7\u5236\u4fe1\u606f\u3002</li> <li>\u8c03\u5ea6\u5668 (Dispatcher)\uff1a\u8d1f\u8d23\u5c06\u4efb\u52a1\u5206\u914d\u7ed9\u5404\u4e2a\u8ba1\u7b97\u6838\u5fc3\u3002</li> <li>\u53ef\u53d8\u6570\u91cf\u7684\u8ba1\u7b97\u6838\u5fc3\uff1a\u6267\u884c\u5185\u6838\u4ee3\u7801\u7684\u5904\u7406\u5668\u5355\u5143\uff0c\u6570\u91cf\u53ef\u6839\u636e\u8bbe\u8ba1\u7075\u6d3b\u914d\u7f6e\u3002</li> <li>\u5185\u5b58\u63a7\u5236\u5668\uff1a\u5206\u522b\u7528\u4e8e\u63a7\u5236\u6570\u636e\u5185\u5b58\u548c\u7a0b\u5e8f\u5185\u5b58\u7684\u8bbf\u95ee\u3002</li> <li>\u7f13\u5b58 (Cache)\uff1a\u7528\u4e8e\u51cf\u5c11\u5bf9\u4e3b\u5185\u5b58\u7684\u8bbf\u95ee\u6b21\u6570\uff0c\u63d0\u9ad8\u6570\u636e\u8bfb\u53d6\u901f\u5ea6\uff08\u53ef\u80fd\u4e0d\u662f\u6240\u6709 tiny-gpu \u7248\u672c\u90fd\u5305\u542b\uff09\u3002</li> </ul>"},{"location":"GPGPU/Tiny-gpu/#_1","title":"\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668","text":"<p>\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u63cf\u8ff0\u5185\u6838\u6267\u884c\u65b9\u5f0f\u7684\u5143\u6570\u636e\u3002\u5728 tiny-gpu \u4e2d\uff0c\u5b83\u53ea\u5b58\u50a8\u4e00\u4e2a\u503c\uff1a\u7ebf\u7a0b\u6570\u91cf (thread_count)\uff0c\u5373\u5f85\u6fc0\u6d3b\u5185\u6838\u9700\u8981\u542f\u52a8\u7684\u7ebf\u7a0b\u603b\u6570\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_2","title":"\u8c03\u5ea6\u5668","text":"<p>\u5185\u6838\u542f\u52a8\u540e\uff0c\u8c03\u5ea6\u5668\u8d1f\u8d23\u5c06\u7ebf\u7a0b\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u8ba1\u7b97\u6838\u5fc3\u3002\u8c03\u5ea6\u5668\u4f1a\u5c06\u7ebf\u7a0b\u7ec4\u7ec7\u6210\u5757 (block)\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5757\u53ef\u4ee5\u5e76\u884c\u5730\u5728\u5355\u4e2a\u6838\u5fc3\u4e0a\u6267\u884c\u3002\u7136\u540e\uff0c\u8c03\u5ea6\u5668\u5c06\u7ebf\u7a0b\u5757\u53d1\u9001\u7ed9\u53ef\u7528\u7684\u8ba1\u7b97\u6838\u5fc3\u8fdb\u884c\u5904\u7406\u3002\u5f53\u6240\u6709\u7ebf\u7a0b\u5757\u5904\u7406\u5b8c\u6210\u540e\uff0c\u8c03\u5ea6\u5668\u4f1a\u62a5\u544a\u5185\u6838\u6267\u884c\u5b8c\u6bd5\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_3","title":"\u8ba1\u7b97\u6838\u5fc3","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u90fd\u5305\u542b\u4e00\u5b9a\u6570\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u901a\u5e38\u56f4\u7ed5\u7740\u5b83\u53ef\u4ee5\u652f\u6301\u7684\u7ebf\u7a0b\u6570\u91cf\u8fdb\u884c\u8bbe\u8ba1\u3002\u4e3a\u4e86\u6700\u5927\u5316\u5e76\u884c\u5316\uff0c\u9700\u8981\u6700\u4f73\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u4ee5\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 \u5728\u7b80\u5316\u540e\u7684 tiny-gpu \u4e2d\uff0c\u6bcf\u4e2a\u6838\u5fc3\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u7ebf\u7a0b\u5757 (block)\u3002\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\uff0c\u6838\u5fc3\u90fd\u914d\u5907\u4e86\u4e13\u7528\u7684 ALU\u3001LSU\u3001PC \u548c\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u6267\u884c\u7ebf\u7a0b\u6307\u4ee4\u662f GPU \u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u95ee\u9898\u4e4b\u4e00\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_4","title":"\u5185\u5b58\u63a7\u5236\u5668","text":"<p>\u5168\u5c40\u5185\u5b58\u5177\u6709\u56fa\u5b9a\u7684\u8bfb\u5199\u5e26\u5bbd\uff0c\u4f46\u662f\u6240\u6709\u8ba1\u7b97\u6838\u5fc3\u8bbf\u95ee\u5185\u5b58\u7684\u6570\u636e\u8bf7\u6c42\u53ef\u80fd\u4f1a\u8fdc\u8fdc\u8d85\u51fa\u5916\u90e8\u5185\u5b58\u7684\u5b9e\u9645\u5904\u7406\u80fd\u529b\u3002 \u5185\u5b58\u63a7\u5236\u5668\u8d1f\u8d23\u8ddf\u8e2a\u6765\u81ea\u8ba1\u7b97\u6838\u5fc3\u7684\u6240\u6709\u4f20\u51fa\u5185\u5b58\u8bf7\u6c42\uff0c\u6839\u636e\u5b9e\u9645\u5916\u90e8\u5185\u5b58\u5e26\u5bbd\u9650\u5236\u8bf7\u6c42\uff0c\u5e76\u5c06\u5916\u90e8\u5185\u5b58\u7684\u54cd\u5e94\u4f20\u9012\u56de\u76f8\u5e94\u7684\u8d44\u6e90\u3002 \u6bcf\u4e2a\u5185\u5b58\u63a7\u5236\u5668\u6839\u636e\u5168\u5c40\u5185\u5b58\u7684\u5e26\u5bbd\u914d\u7f6e\u4e86\u56fa\u5b9a\u6570\u91cf\u7684\u901a\u9053\u3002  </p>"},{"location":"GPGPU/Tiny-gpu/#_5","title":"\u7f13\u5b58","text":"<p>\u5168\u5c40\u5185\u5b58\u4e2d\u7684\u76f8\u540c\u6570\u636e\u7ecf\u5e38\u88ab\u591a\u4e2a\u8ba1\u7b97\u6838\u5fc3\u8bf7\u6c42\u3002\u53cd\u590d\u8bbf\u95ee\u5168\u5c40\u5185\u5b58\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u56e0\u4e3a\u6570\u636e\u5df2\u7ecf\u83b7\u53d6\u8fc7\u4e00\u6b21\uff0c\u6240\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u8bbe\u5907\u4e0a\u7684 SRAM \u4e2d\u4ee5\u4fbf\u7a0d\u540e\u66f4\u5feb\u5730\u68c0\u7d22\u4f1a\u66f4\u6709\u6548\u3002 \u8fd9\u5c31\u662f\u7f13\u5b58\u7684\u4f5c\u7528\u3002\u4ece\u5916\u90e8\u5185\u5b58\u68c0\u7d22\u5230\u7684\u6570\u636e\u4f1a\u5b58\u50a8\u5728\u7f13\u5b58\u4e2d\uff0c\u4ee5\u540e\u7684\u8bf7\u6c42\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4ece\u800c\u91ca\u653e\u5185\u5b58\u5e26\u5bbd\u7528\u4e8e\u5904\u7406\u65b0\u6570\u636e\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#core","title":"Core","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u90fd\u5305\u542b\u4e00\u5b9a\u6570\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u901a\u5e38\u56f4\u7ed5\u7740\u5b83\u53ef\u4ee5\u652f\u6301\u7684\u7ebf\u7a0b\u6570\u91cf\u8fdb\u884c\u8bbe\u8ba1\u3002\u4e3a\u4e86\u6700\u5927\u5316\u5e76\u884c\u5316\uff0c\u9700\u8981\u6700\u4f73\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u4ee5\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 \u5728\u7b80\u5316\u540e\u7684 tiny-gpu \u4e2d\uff0c\u6bcf\u4e2a\u6838\u5fc3\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u7ebf\u7a0b\u5757 (block)\u3002\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\uff0c\u6838\u5fc3\u90fd\u914d\u5907\u4e86\u4e13\u7528\u7684 ALU\u3001LSU\u3001PC \u548c\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u6267\u884c\u7ebf\u7a0b\u6307\u4ee4\u662f GPU \u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u95ee\u9898\u4e4b\u4e00\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#schedule","title":"Schedule","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u90fd\u6709\u4e00\u4e2a\u8c03\u5ea6\u5668\uff0c\u8d1f\u8d23\u7ba1\u7406\u7ebf\u7a0b\u7684\u6267\u884c\u3002 tiny-gpu \u7684\u8c03\u5ea6\u5668\u4f1a\u987a\u5e8f\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u6307\u4ee4\uff0c\u76f4\u5230\u5b8c\u6210\uff0c\u7136\u540e\u518d\u62fe\u53d6\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u5757\u3002\u5b83\u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u4f9d\u6b21\u6267\u884c\u6240\u6709\u7ebf\u7a0b\u7684\u6307\u4ee4\u3002 \u5728\u66f4\u9ad8\u7ea7\u7684\u8c03\u5ea6\u5668\u4e2d\uff0c\u4f1a\u4f7f\u7528\u6d41\u6c34\u7ebf (pipelining) \u7b49\u6280\u672f\u6765\u6d41\u5f0f\u6267\u884c\u540e\u7eed\u6307\u4ee4\uff0c\u5728\u5148\u524d\u6307\u4ee4\u5b8c\u5168\u5b8c\u6210\u4e4b\u524d\u6700\u5927\u5316\u8d44\u6e90\u5229\u7528\u7387\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6ce2\u5f62\u8c03\u5ea6 (warp scheduling) \u5e76\u884c\u6267\u884c\u7ebf\u7a0b\u5757\u5185\u7684\u591a\u4e2a\u7ebf\u7a0b\u6279\u6b21\u3002 \u8c03\u5ea6\u5668\u9700\u8981\u89e3\u51b3\u7684\u4e3b\u8981\u9650\u5236\u662f\u4e0e\u4ece\u5168\u5c40\u5185\u5b58\u52a0\u8f7d\u548c\u5b58\u50a8\u6570\u636e\u76f8\u5173\u7684\u5ef6\u8fdf\u3002\u867d\u7136\u5927\u591a\u6570\u6307\u4ee4\u53ef\u4ee5\u540c\u6b65\u6267\u884c\uff0c\u4f46\u8fd9\u4e9b\u52a0\u8f7d/\u5b58\u50a8\u64cd\u4f5c\u662f\u5f02\u6b65\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6307\u4ee4\u6267\u884c\u7684\u5176\u4f59\u90e8\u5206\u5fc5\u987b\u56f4\u7ed5\u8fd9\u4e9b\u8f83\u957f\u7684\u7b49\u5f85\u65f6\u95f4\u8fdb\u884c\u6784\u5efa\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#fetch","title":"Fetch","text":"<p>\u5f02\u6b65\u5730\u4ece\u7a0b\u5e8f\u5185\u5b58\u4e2d\u63d0\u53d6\u5f53\u524d\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u7684\u6307\u4ee4\uff08\u901a\u5e38\u5728\u6267\u884c\u5b8c\u4e00\u4e2a\u7ebf\u7a0b\u5757\u540e\u5e94\u8be5\u4ece\u7f13\u5b58\u4e2d\u63d0\u53d6\uff09\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#decode","title":"Decode","text":"<p>\u5c06\u63d0\u53d6\u7684\u6307\u4ee4\u89e3\u7801\u6210\u63a7\u5236\u7ebf\u7a0b\u6267\u884c\u7684\u63a7\u5236\u4fe1\u53f7\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#rf","title":"RF","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u4e13\u7528\u7684\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u5bc4\u5b58\u5668\u6587\u4ef6\u4fdd\u5b58\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u8ba1\u7b97\u7684\u6570\u636e\uff0c\u4ece\u800c\u5b9e\u73b0\u76f8\u540c\u6307\u4ee4\u591a\u6570\u636e (SIMD) \u6a21\u5f0f\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u6587\u4ef6\u90fd\u5305\u542b\u4e00\u4e9b\u53ea\u8bfb\u5bc4\u5b58\u5668\uff0c\u5176\u4e2d\u5b58\u50a8\u6709\u5173\u6b63\u5728\u5c40\u90e8\u6267\u884c\u7684\u5f53\u524d\u7ebf\u7a0b\u5757\u548c\u7ebf\u7a0b\u7684\u6570\u636e\uff0c\u4f7f\u5185\u6838\u80fd\u591f\u57fa\u4e8e\u5c40\u90e8\u7ebf\u7a0b ID \u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u6267\u884c\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#alu","title":"ALU","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u4e13\u7528\u7b97\u672f\u903b\u8f91\u5355\u5143\u7528\u4e8e\u6267\u884c\u8ba1\u7b97\u3002\u5904\u7406\u52a0\u6cd5 (ADD)\u3001\u51cf\u6cd5 (SUB)\u3001\u4e58\u6cd5 (MUL)\u3001\u9664\u6cd5 (DIV) \u7b49\u7b97\u672f\u6307\u4ee4\u3002 \u8fd8\u5904\u7406\u6bd4\u8f83\u6307\u4ee4 (CMP)\uff0c\u8be5\u6307\u4ee4\u5b9e\u9645\u4e0a\u8f93\u51fa\u4e24\u4e2a\u5bc4\u5b58\u5668\u5dee\u503c\u662f\u8d1f\u6570\u3001\u96f6\u8fd8\u662f\u6b63\u6570\u7684\u7ed3\u679c\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728 PC \u5355\u5143\u4e2d\u7684 NZP \u5bc4\u5b58\u5668\u4e2d\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#lsu","title":"LSU","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u4e13\u7528\u52a0\u8f7d\u5b58\u50a8\u5355\u5143\u7528\u4e8e\u8bbf\u95ee\u5168\u5c40\u6570\u636e\u5185\u5b58\u3002 \u5904\u7406\u52a0\u8f7d (LDR) \u548c\u5b58\u50a8 (STR) \u6307\u4ee4\uff0c\u5e76\u5904\u7406\u5185\u5b58\u8bf7\u6c42\u88ab\u5185\u5b58\u63a7\u5236\u5668\u5904\u7406\u548c\u4e2d\u7ee7\u7684\u5f02\u6b65\u7b49\u5f85\u65f6\u95f4\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#pc","title":"PC","text":"<p>\u6bcf\u4e2a\u5355\u5143\u7684\u4e13\u7528\u7a0b\u5e8f\u8ba1\u6570\u5668\u7528\u4e8e\u786e\u5b9a\u6bcf\u4e2a\u7ebf\u7a0b\u63a5\u4e0b\u6765\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPC \u5728\u6bcf\u4e2a\u6307\u4ee4\u540e\u9012\u589e 1\u3002 \u4f7f\u7528\u5206\u652f\u6307\u4ee4 (BRnzp)\uff0cNZP \u5bc4\u5b58\u5668\u4f1a\u68c0\u67e5 NZP \u5bc4\u5b58\u5668\uff08\u7531\u5148\u524d\u7684 CMP \u6307\u4ee4\u8bbe\u7f6e\uff09\u662f\u5426\u5339\u914d\u67d0\u4e9b\u60c5\u51b5 - \u5982\u679c\u5339\u914d\uff0c\u5b83\u5c06\u8df3\u8f6c\u5230\u7a0b\u5e8f\u5185\u5b58\u7684\u7279\u5b9a\u884c\u3002\u8fd9\u5c31\u662f\u5faa\u73af\u548c\u6761\u4ef6\u8bed\u53e5\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u7531\u4e8e\u7ebf\u7a0b\u5e76\u884c\u5904\u7406\uff0ctiny-gpu \u5047\u8bbe\u6240\u6709\u7ebf\u7a0b\u5728\u6bcf\u4e2a\u6307\u4ee4\u540e\u90fd\u201c\u6536\u655b\u201d\u5230\u76f8\u540c\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668 - \u8fd9\u4e3a\u4e86\u7b80\u5316\u8d77\u89c1\uff0c\u662f\u4e00\u4e2a\u8fd1\u4f3c\u5047\u8bbe\u3002 \u5728\u771f\u6b63\u7684GPU\u4e2d\uff0c\u5355\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e0d\u540c\u7684 PC\uff0c\u5bfc\u81f4\u5206\u652f\u5206\u6b67 (branch divergence)\uff0c\u5373\u6700\u521d\u4e00\u8d77\u5904\u7406\u7684\u4e00\u7ec4\u7ebf\u7a0b\u5fc5\u987b\u5206\u88c2\u6210\u5355\u72ec\u7684\u6267\u884c\u90e8\u5206\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#memory","title":"Memory","text":"<p>GPU \u901a\u5e38\u8fde\u63a5\u5916\u90e8\u5168\u5c40\u5185\u5b58\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\u3002\u4e3a\u4e86\u7b80\u5316\u8bbe\u8ba1\uff0ctiny-gpu \u5c06\u6570\u636e\u5185\u5b58\u548c\u7a0b\u5e8f\u5185\u5b58\u5206\u5f00\u5b58\u653e\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_6","title":"\u5168\u5c40\u5185\u5b58","text":"<p>tiny-gpu\u6570\u636e\u5185\u5b58\u5177\u6709\u4ee5\u4e0b\u89c4\u683c 8 \u4f4d\u5bfb\u5740 (\u603b\u5171256\u884c\u6570\u636e) 8 \u4f4d\u6570\u636e (\u6bcf\u884c\u5b58\u50a8\u5c0f\u4e8e 256 \u7684\u503c)</p> <p>tiny-gpu\u7a0b\u5e8f\u5185\u5b58\u5177\u6709\u4ee5\u4e0b\u89c4\u683c 8 \u4f4d\u5bfb\u5740 (256\u884c\u7a0b\u5e8f\u5185\u5b58) 16 \u4f4d\u6570\u636e (\u6839\u636e\u6307\u4ee4\u96c6\u89c4\u5b9a\uff0c\u6bcf\u6761\u6307\u4ee4\u4e3a 16 \u4f4d)</p>"},{"location":"GPGPU/Tiny-gpu/#_7","title":"\u63a7\u5236\u5668","text":"<p>\u5168\u5c40\u5185\u5b58\u5177\u6709\u56fa\u5b9a\u7684\u8bfb\u5199\u5e26\u5bbd\uff0c\u4f46\u662f\u6240\u6709\u8ba1\u7b97\u6838\u5fc3\u8bbf\u95ee\u5185\u5b58\u7684\u6570\u636e\u8bf7\u6c42\u53ef\u80fd\u4f1a\u8fdc\u8fdc\u8d85\u51fa\u5916\u90e8\u5185\u5b58\u7684\u5b9e\u9645\u5904\u7406\u80fd\u529b\u3002 \u5185\u5b58\u63a7\u5236\u5668\u8d1f\u8d23\u8ddf\u8e2a\u6765\u81ea\u8ba1\u7b97\u6838\u5fc3\u7684\u6240\u6709\u4f20\u51fa\u5185\u5b58\u8bf7\u6c42\uff0c\u6839\u636e\u5b9e\u9645\u5916\u90e8\u5185\u5b58\u5e26\u5bbd\u9650\u5236\u8bf7\u6c42\uff0c\u5e76\u5c06\u5916\u90e8\u5185\u5b58\u7684\u54cd\u5e94\u4f20\u9012\u56de\u76f8\u5e94\u7684\u8d44\u6e90\u3002 \u6bcf\u4e2a\u5185\u5b58\u63a7\u5236\u5668\u6839\u636e\u5168\u5c40\u5185\u5b58\u7684\u5e26\u5bbd\u914d\u7f6e\u4e86\u56fa\u5b9a\u6570\u91cf\u7684\u901a\u9053\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_8","title":"\u5b58\u50a8","text":"<p>\u5168\u5c40\u5185\u5b58\u4e2d\u7684\u76f8\u540c\u6570\u636e\u7ecf\u5e38\u88ab\u591a\u4e2a\u8ba1\u7b97\u6838\u5fc3\u8bf7\u6c42\u3002\u53cd\u590d\u8bbf\u95ee\u5168\u5c40\u5185\u5b58\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u56e0\u4e3a\u6570\u636e\u5df2\u7ecf\u83b7\u53d6\u8fc7\u4e00\u6b21\uff0c\u6240\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u8bbe\u5907\u4e0a\u7684 SRAM \u4e2d\u4ee5\u4fbf\u7a0d\u540e\u66f4\u5feb\u5730\u68c0\u7d22\u4f1a\u66f4\u6709\u6548\u3002 \u8fd9\u5c31\u662f\u7f13\u5b58\u7684\u4f5c\u7528\u3002\u4ece\u5916\u90e8\u5185\u5b58\u68c0\u7d22\u5230\u7684\u6570\u636e\u4f1a\u5b58\u50a8\u5728\u7f13\u5b58\u4e2d\uff0c\u4ee5\u540e\u7684\u8bf7\u6c42\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4ece\u800c\u91ca\u653e\u5185\u5b58\u5e26\u5bbd\u7528\u4e8e\u5904\u7406\u65b0\u6570\u636e\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#isa","title":"ISA","text":"<p>tiny-gpu \u5b9e\u73b0\u4e86\u4e00\u5957\u7b80\u5355\u7684 11 \u6761\u6307\u4ee4\u7684\u6307\u4ee4\u96c6\u67b6\u6784 (ISA)\uff0c\u5728\u652f\u6301\u7528\u4e8e\u6982\u5ff5\u9a8c\u8bc1\u7684\u7b80\u5355\u5185\u6838\uff0c\u4f8b\u5982\u77e9\u9635\u52a0\u6cd5\u548c\u77e9\u9635\u4e58\u6cd5\u3002</p> <p></p> <p>\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\uff0ctiny-gpu \u652f\u6301\u4ee5\u4e0b\u6307\u4ee4 <code>BRnzp (\u5206\u652f\u6307\u4ee4)</code> - \u5982\u679c NZP \u5bc4\u5b58\u5668\u503c\u6ee1\u8db3\u6307\u4ee4\u4e2d\u6307\u5b9a\u7684 nzp \u6761\u4ef6\uff0c\u5219\u8df3\u8f6c\u5230\u7a0b\u5e8f\u5185\u5b58\u4e2d\u7684\u53e6\u4e00\u884c\u3002</p> <p><code>CMP (\u6bd4\u8f83\u6307\u4ee4)</code> - \u6bd4\u8f83\u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728 NZP \u5bc4\u5b58\u5668\u4e2d\uff0c\u4f9b\u540e\u7eed\u7684 BRnzp \u6307\u4ee4\u4f7f\u7528\u3002</p> <p><code>ADD\u3001SUB\u3001MUL\u3001DIV (\u57fa\u672c\u7b97\u672f\u8fd0\u7b97)</code> - \u652f\u6301\u5f20\u91cf\u8fd0\u7b97\u7684\u57fa\u672c\u7b97\u672f\u64cd\u4f5c\u3002</p> <p><code>LDR (\u52a0\u8f7d\u6307\u4ee4)</code>- \u4ece\u5168\u5c40\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e\u3002</p> <p><code>STR (\u5b58\u50a8\u6307\u4ee4)</code> - \u5c06\u6570\u636e\u5b58\u50a8\u5230\u5168\u5c40\u5185\u5b58\u4e2d\u3002</p> <p><code>CONST (\u5e38\u91cf\u52a0\u8f7d\u6307\u4ee4)</code> - \u5c06\u5e38\u91cf\u503c\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\u3002</p> <p><code>RET (\u8fd4\u56de\u6307\u4ee4)</code> - \u8868\u793a\u5f53\u524d\u7ebf\u7a0b\u5df2\u6267\u884c\u5b8c\u6bd5\u3002</p> <p>\u6bcf\u4e2a\u5bc4\u5b58\u5668\u75314\u4f4d\u6307\u5b9a\uff0c\u610f\u5473\u7740\u5171\u670916\u4e2a\u5bc4\u5b58\u5668\u3002\u524d13\u4e2a\u5bc4\u5b58\u5668 R0-R12 \u662f\u53ef\u8bfb\u5199\u7684\u901a\u7528\u5bc4\u5b58\u5668\u3002\u6700\u540e 3 \u4e2a\u5bc4\u5b58\u5668\u662f\u7279\u6b8a\u7684\u53ea\u8bfb\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u63d0\u4f9b\u5bf9 SIMD \u5173\u952e\u7684 %blockIdx\u3001%blockDim \u548c %threadIdx \u503c\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#exe","title":"Exe","text":""},{"location":"GPGPU/Tiny-gpu/#_9","title":"\u542f\u52a8\u5185\u6838","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u9075\u5faa\u4ee5\u4e0b\u63a7\u5236\u6d41\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u9636\u6bb5\u6765\u6267\u884c\u6bcf\u4e2a\u6307\u4ee4\uff1a</p> <ol> <li> <p><code>\u83b7\u53d6 (FETCH)</code>\uff1a\u4ece\u7a0b\u5e8f\u5185\u5b58\u4e2d\u83b7\u53d6\u5f53\u524d\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u3002</p> </li> <li> <p><code>\u89e3\u7801 (DECODE)</code>\uff1a\u5c06\u6307\u4ee4\u89e3\u7801\u6210\u63a7\u5236\u4fe1\u53f7\u3002</p> </li> <li> <p><code>\u8bf7\u6c42 (REQUEST)</code>\uff1a\u5982\u679c\u662f\u52a0\u8f7d (LDR) \u6216\u5b58\u50a8 (STR) \u6307\u4ee4\uff0c\u5219\u9700\u8981\u4ece\u5168\u5c40\u5185\u5b58\u4e2d\u8bf7\u6c42\u6570\u636e\u3002</p> </li> <li> <p><code>\u7b49\u5f85 (WAIT)</code>\uff1a\u5982\u679c\u9002\u7528\uff0c\u7b49\u5f85\u6765\u81ea\u5168\u5c40\u5185\u5b58\u7684\u6570\u636e\u3002</p> </li> <li> <p><code>\u6267\u884c (EXECUTE)</code>\uff1a\u5bf9\u6570\u636e\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\u3002</p> </li> <li> <p><code>\u66f4\u65b0 (UPDATE)</code>\uff1a\u66f4\u65b0\u5bc4\u5b58\u5668\u6587\u4ef6\u548c NZP \u5bc4\u5b58\u5668\u3002</p> </li> </ol> <p>\u7b80\u5316\u7406\u89e3\uff0c\u63a7\u5236\u6d41\u7a0b\u88ab\u8fd9\u6837\u5212\u5206\u5f00\u6765\u3002 \u5b9e\u9645\u4e0a\uff0c\u4e3a\u4e86\u4f18\u5316\u5904\u7406\u65f6\u95f4\uff0c\u5176\u4e2d\u51e0\u4e2a\u6b65\u9aa4\u53ef\u4ee5\u88ab\u538b\u7f29\u3002GPU \u8fd8\u53ef\u4ee5\u4f7f\u7528\u6d41\u6c34\u7ebf (pipelining) \u6280\u672f\u5728\u6838\u5fc3\u8d44\u6e90\u4e0a\u6d41\u5f0f\u534f\u8c03\u6267\u884c\u8bb8\u591a\u6307\u4ee4\uff0c\u800c\u65e0\u9700\u7b49\u5f85\u5148\u524d\u6307\u4ee4\u5b8c\u6210\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_10","title":"\u7ebf\u7a0b\u6267\u884c","text":"<p>\u5728\u6bcf\u4e2a\u6838\u5fc3\u5185\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u9075\u5faa\u4e0a\u8ff0\u6267\u884c\u8def\u5f84\uff0c\u5bf9\u5176\u4e13\u7528\u5bc4\u5b58\u5668\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u6267\u884c\u8ba1\u7b97\u3002 \u8fd9\u7c7b\u4f3c\u4e8e\u6807\u51c6\u7684 CPU \u67b6\u6784\u56fe\uff0c\u5728\u529f\u80fd\u4e0a\u4e5f\u76f8\u5f53\u76f8\u4f3c\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u53ea\u8bfb\u5bc4\u5b58\u5668\u4e2d\u5305\u542b %blockIdx\u3001%blockDim \u548c %threadIdx \u503c\uff0c\u4ece\u800c\u5b9e\u73b0 SIMD \u529f\u80fd\u3002 </p>"},{"location":"GPGPU/Tiny-gpu/#simulation","title":"Simulation","text":"<p>tiny-gpu \u53ef\u4ee5\u6a21\u62df\u4e0a\u8ff0\u4e24\u79cd\u5185\u6838\u7684\u6267\u884c\u3002\u5728\u8fdb\u884c\u6a21\u62df\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u5b89\u88c5 iverilog \u548c cocotb\u3002 \u5b89\u88c5\u5b8c\u5148\u51b3\u6761\u4ef6\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 make test_matadd \u548c make test_matmul \u8fd0\u884c\u5185\u6838\u6a21\u62df\u3002 \u6267\u884c\u6a21\u62df\u5c06\u5728 test/logs \u4e2d\u8f93\u51fa\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u521d\u59cb\u6570\u636e\u5185\u5b58\u72b6\u6001\u3001\u5185\u6838\u7684\u5b8c\u6574\u6267\u884c\u8ddf\u8e2a\u4ee5\u53ca\u6700\u7ec8\u6570\u636e\u5185\u5b58\u72b6\u6001\u3002 \u5982\u679c\u60a8\u67e5\u770b\u6bcf\u4e2a\u65e5\u5fd7\u6587\u4ef6\u5f00\u5934\u8bb0\u5f55\u7684\u521d\u59cb\u6570\u636e\u5185\u5b58\u72b6\u6001\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u7528\u4e8e\u8ba1\u7b97\u7684\u4e24\u4e2a\u8d77\u59cb\u77e9\u9635\uff0c\u5e76\u4e14\u5728\u6587\u4ef6\u672b\u5c3e\u7684\u6700\u7ec8\u6570\u636e\u5185\u5b58\u4e2d\uff0c\u60a8\u8fd8\u5e94\u8be5\u4f1a\u770b\u5230\u7ed3\u679c\u77e9\u9635\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#to-do","title":"To do","text":"<p>tiny-gpu \u7701\u7565\u4e86\u8bb8\u591a\u73b0\u4ee3 GPU \u4e2d\u5b9e\u73b0\u7684\u989d\u5916\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6027\u80fd\u548c\u529f\u80fd\u3002\u672c\u8282\u5c06\u8ba8\u8bba\u5176\u4e2d\u4e00\u4e9b\u6700\u5173\u952e\u7684\u7279\u6027\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_11","title":"\u591a\u7ea7\u7f13\u5b58\u548c\u5171\u4eab\u5185\u5b58","text":"<p>\u5728\u73b0\u4ee3 GPU \u4e2d\uff0c\u4f7f\u7528\u591a\u4e2a\u4e0d\u540c\u7ea7\u522b\u7684\u7f13\u5b58\u6765\u6700\u5c0f\u5316\u9700\u8981\u4ece\u5168\u5c40\u5185\u5b58\u8bbf\u95ee\u7684\u6570\u636e\u91cf\u3002tiny-gpu \u53ea\u5728\u8bf7\u6c42\u5185\u5b58\u7684\u5355\u4e2a\u8ba1\u7b97\u5355\u5143\u548c\u5b58\u50a8\u6700\u8fd1\u7f13\u5b58\u6570\u636e\u7684\u5185\u5b58\u63a7\u5236\u5668\u4e4b\u95f4\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7f13\u5b58\u5c42\u3002</p> <p>\u5b9e\u73b0\u591a\u7ea7\u7f13\u5b58\u5141\u8bb8\u5c06\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u66f4\u672c\u5730\u5730\u7f13\u5b58\u5230\u5176\u4f7f\u7528\u4f4d\u7f6e\uff08\u67d0\u4e9b\u7f13\u5b58\u4f4d\u4e8e\u5355\u4e2a\u8ba1\u7b97\u6838\u5fc3\u5185\uff09\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u6b64\u6570\u636e\u7684\u52a0\u8f7d\u65f6\u95f4\u3002\u4e0d\u540c\u7684\u7f13\u5b58\u7b97\u6cd5\u7528\u4e8e\u6700\u5927\u5316\u7f13\u5b58\u547d\u4e2d\u7387 - \u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6765\u6539\u5584\u7684\u5173\u952e\u65b9\u9762\u3002</p> <p>\u6b64\u5916\uff0cGPU \u7ecf\u5e38\u4f7f\u7528\u5171\u4eab\u5185\u5b58\uff0c\u4f7f\u540c\u4e00\u5757\u4e2d\u7684\u7ebf\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u5355\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u8be5\u7a7a\u95f4\u53ef\u4ee5\u7528\u6765\u4e0e\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u7ed3\u679c\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_12","title":"\u5185\u5b58\u5408\u5e76","text":"<p>GPU \u4f7f\u7528\u7684\u53e6\u4e00\u4e2a\u5173\u952e\u5185\u5b58\u4f18\u5316\u662f\u5185\u5b58\u5408\u5e76\u3002\u5e76\u884c\u8fd0\u884c\u7684\u591a\u4e2a\u7ebf\u7a0b\u901a\u5e38\u9700\u8981\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u8fde\u7eed\u5730\u5740\uff08\u4f8b\u5982\uff0c\u4e00\u7ec4\u7ebf\u7a0b\u8bbf\u95ee\u77e9\u9635\u4e2d\u7684\u76f8\u90bb\u5143\u7d20\uff09\uff0c\u4f46\u662f\u6bcf\u4e2a\u5185\u5b58\u8bf7\u6c42\u90fd\u5355\u72ec\u63d0\u4ea4\u3002</p> <p>\u5185\u5b58\u5408\u5e76\u7528\u4e8e\u5206\u6790\u6392\u961f\u7684\u5185\u5b58\u8bf7\u6c42\u5e76\u5c06\u76f8\u90bb\u8bf7\u6c42\u5408\u5e76\u6210\u5355\u4e2a\u4e8b\u52a1\uff0c\u4ece\u800c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5bfb\u5740\u65f6\u95f4\u5e76\u4e00\u8d77\u53d1\u51fa\u6240\u6709\u8bf7\u6c42\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_13","title":"\u6d41\u6c34\u7ebf","text":"<p>\u5728 tiny-gpu \u7684\u63a7\u5236\u6d41\u4e2d\uff0c\u5185\u6838\u4f1a\u5728\u5bf9\u4e00\u7ec4\u7ebf\u7a0b\u6267\u884c\u4e00\u6761\u6307\u4ee4\u540e\u624d\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u6761\u6307\u4ee4\u3002</p> <p>\u73b0\u4ee3 GPU \u4f7f\u7528\u6d41\u6c34\u7ebf\u6765\u4e00\u6b21\u6d41\u5f0f\u6267\u884c\u591a\u4e2a\u987a\u5e8f\u6307\u4ee4\uff0c\u540c\u65f6\u786e\u4fdd\u76f8\u4e92\u4f9d\u8d56\u7684\u6307\u4ee4\u4ecd\u7136\u6309\u987a\u5e8f\u6267\u884c\u3002\u8fd9\u6709\u52a9\u4e8e\u6700\u5927\u5316\u5185\u6838\u5185\u7684\u8d44\u6e90\u5229\u7528\u7387\uff0c\u56e0\u4e3a\u8d44\u6e90\u4e0d\u4f1a\u5728\u7b49\u5f85\u65f6\u95f2\u7f6e\uff08\u4f8b\u5982\uff1a\u5f02\u6b65\u5185\u5b58\u8bf7\u6c42\u671f\u95f4\uff09\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_14","title":"\u6ce2\u5f62\u8c03\u5ea6","text":"<p>\u53e6\u4e00\u79cd\u7528\u4e8e\u6700\u5927\u5316\u8d44\u6e90\u5229\u7528\u7387\u7684\u7b56\u7565\u662f\u6ce2\u5f62\u8c03\u5ea6\u3002\u8fd9\u79cd\u65b9\u6cd5\u6d89\u53ca\u5c06\u5757\u5206\u89e3\u6210\u53ef\u4ee5\u4e00\u8d77\u6267\u884c\u7684\u5355\u72ec\u7ebf\u7a0b\u6279\u5904\u7406\u3002\u53ef\u4ee5\u5728\u5355\u4e2a\u6838\u5fc3\u4e0a\u540c\u65f6\u6267\u884c\u591a\u4e2a\u6ce2\u5f62\uff0c\u65b9\u6cd5\u662f\u5728\u4e00\u4e2a\u6ce2\u5f62\u7b49\u5f85\u65f6\u4ece\u53e6\u4e00\u4e2a\u6ce2\u5f62\u6267\u884c\u6307\u4ee4\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u6d41\u6c34\u7ebf\uff0c\u4f46\u5904\u7406\u6765\u81ea\u4e0d\u540c\u7ebf\u7a0b\u7684\u6307\u4ee4\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_15","title":"\u5206\u652f\u5206\u6b67","text":"<p>tiny-gpu \u5047\u8bbe\u5355\u4e2a\u6279\u5904\u7406\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u5728\u6bcf\u4e2a\u6307\u4ee4\u540e\u90fd\u6700\u7ec8\u4f4d\u4e8e\u76f8\u540c\u7684 PC \u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u7ebf\u7a0b\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u5176\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u5355\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u76f8\u4e92\u5206\u6b67\u5e76\u6839\u636e\u5176\u6570\u636e\u5206\u652f\u5230\u4e0d\u540c\u7684\u884c\u3002\u4f7f\u7528\u4e0d\u540c\u7684 PC\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u9700\u8981\u62c6\u5206\u6210\u672c\u8d28\u4e0a\u4e0d\u540c\u7684\u6267\u884c\u7ebf\u8def\uff0c\u8fd9\u9700\u8981\u7ba1\u7406\u53d1\u6563\u7684\u7ebf\u7a0b\u5e76\u6ce8\u610f\u7ebf\u7a0b\u4f55\u65f6\u518d\u6b21\u6536\u655b\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_16","title":"\u540c\u6b65\u548c\u5c4f\u969c","text":"<p>\u73b0\u4ee3 GPU \u7684\u53e6\u4e00\u4e2a\u6838\u5fc3\u529f\u80fd\u662f\u80fd\u591f\u8bbe\u7f6e\u5c4f\u969c\uff0c\u4ee5\u4fbf\u5757\u4e2d\u7684\u7ebf\u7a0b\u7ec4\u53ef\u4ee5\u540c\u6b65\u5e76\u7b49\u5f85\u540c\u4e00\u5757\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u7ebf\u7a0b\u5230\u8fbe\u67d0\u4e2a\u70b9\u7136\u540e\u518d\u7ee7\u7eed\u6267\u884c\u3002 \u8fd9\u5bf9\u4e8e\u7ebf\u7a0b\u9700\u8981\u76f8\u4e92\u4ea4\u6362\u5171\u4eab\u6570\u636e\u7684\u60c5\u51b5\u5f88\u6709\u7528\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u786e\u4fdd\u6570\u636e\u5df2\u5b8c\u5168\u5904\u7406\u3002</p>"},{"location":"GPGPU/Ventus/","title":"Introduction","text":"<p>\u627f\u5f71GPGPU\u662f\u4e00\u6b3e\u91c7\u7528\u5f00\u6e90\u6307\u4ee4\u96c6RISC-V\u53ca\u5176Vector\u6269\u5c55\u6307\u4ee4\u96c6\u8bbe\u8ba1\u7684\u4e00\u6b3eSIMT\u67b6\u6784\u7684GPGPU\uff0c\u4e5f\u662f\u4e16\u754c\u9996\u6b3e\u57fa\u4e8eRVV\u7684GPGPU\u3002\u76ee\u524d\u5df2\u7ecf\u5f00\u6e90\u53d1\u5e03\uff0c\u5f00\u6e90\u4ee3\u7801\u5305\u62ec\u627f\u5f71GPGPU\u6e90\u7801\uff0cgcc\u5de5\u5177\u94fe\u548cspike\u4eff\u771f\u5668\u3002 \u627f\u5f71GPGPU\u65e2\u4fdd\u6301\u4e86RISC-V Vector\u6307\u4ee4\u96c6\u7684\u4f18\u52bf\uff0c\u53c8\u5229\u7528\u4e86SIMT\u67b6\u6784\u6269\u5c55\u6027\u597d\u7684\u7279\u70b9\uff0c\u5b9e\u73b0\u4e86\u5f00\u6e90\u6307\u4ee4\u96c6\u9ad8\u6027\u80fdGPGPU\u7684\u8bbe\u8ba1\uff0cChisel\u8bed\u8a00\u7f16\u5199\u3002 </p> <p>Github</p> <p>https://github.com/THU-DSP-LAB</p> <p>Gitee</p> <p>https://gitee.com/tsinghua-sh</p> <p>\u5b98\u7f51</p> <p>https://opengpgpu.org.cn/</p>"},{"location":"GPGPU/Vortex/Architecture/","title":"Vortex","text":""},{"location":"GPGPU/Vortex/Architecture/#architecture","title":"Architecture","text":""},{"location":"GPGPU/Vortex/Architecture/#isa","title":"ISA","text":""},{"location":"GPGPU/Vortex/Introduction/","title":"Introduction","text":"<p>Vortex \u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u7801\u7684\u901a\u7528\u5e76\u884c\u8ba1\u7b97\uff08GPGPU\uff09\u6846\u67b6\uff0c\u4e13\u4e3a\u9ad8\u6548\u5229\u7528\u73b0\u4ee3\u56fe\u5f62\u5904\u7406\u5668\u7684\u8ba1\u7b97\u80fd\u529b\u800c\u8bbe\u8ba1\u3002\u5b83\u91c7\u7528C++\u63a5\u53e3\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u6613\u4e8e\u4f7f\u7528\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u65e8\u5728\u7b80\u5316GPU\u7f16\u7a0b\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u66f4\u4fbf\u6377\u5730\u5b9e\u73b0\u9ad8\u6027\u80fd\u8ba1\u7b97\u4efb\u52a1\u3002  Vortex \u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aVerilog</li> <li>\u5f00\u6e90\u534f\u8bae\uff1aApache-2.0 license\uff08\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u4fee\u6539\u4ee3\u7801\u6765\u6ee1\u8db3\u9700\u8981\u5e76\u4f5c\u4e3a\u5f00\u6e90\u6216\u5546\u4e1a\u4ea7\u54c1\u53d1\u5e03/\u9500\u552e\uff09</li> <li>\u6307\u4ee4\u96c6\u67b6\u6784\uff1aRISC-V RV32IMAF\uff0c RV64IMAFD</li> <li>\u7b97\u529b\uff1a\u53ef\u4ee5\u5728FPGA\u4e0a\u6269\u5c55\u523032\u6838\uff0c\u5728200 Mhz\u65f6\u7684\u5cf0\u503c\u6027\u80fd\u4e3a25.6 GFlops</li> <li>\u8f6f\u4ef6\uff1a\u652f\u6301OpenCL</li> <li>\u652f\u6301\u7684FPGA\uff1a Altera Arria 10\uff0cAltera Stratix 10\uff0cXilinx Alveo U50, U250, U280\uff0cXilinx Versal VCK5000</li> <li>\u6307\u4ee4\uff1a\u6dfb\u52a0\u4e866\u6761\u81ea\u5b9a\u4e49\u6307\u4ee4\u652f\u6301GPGPU</li> </ul> <p>\u53c2\u8003\u8d44\u6599</p> <p>https://blog.csdn.net/u014756627/article/details/132591618?spm=1001.2014.3001.5502 https://blog.csdn.net/wwzzwwzzjjjj/article/details/123388551</p>"},{"location":"blog/","title":"Blog","text":"<p>Entry</p>"},{"location":"blog/Archive/1/","title":"Hello world","text":"<p>\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u65e5\u5fd7\u3002\u5efa\u7acb\u9759\u6001\u7f51\u7ad9\u7684\u8fc7\u7a0b\u5f88\u6709\u8da3\uff01</p> <p>Reference</p> <p>https://wdk-docs.github.io/mkdocs-material-docs/</p> <p>Reference</p> <p>https://squidfunk.github.io/mkdocs-material/</p>"},{"location":"gem5/","title":"Getting Started","text":"<p>gem5\u662f\u4e00\u4e2a\u5f00\u6e90\u8ba1\u7b97\u673a\u67b6\u6784\u6a21\u62df\u5668\uff0c\u5305\u62ec\u7cfb\u7edf\u7ea7\u67b6\u6784\u4ee5\u53ca\u5904\u7406\u5668\u5fae\u67b6\u6784\u3002</p> <p>learning_gem5</p> <p>https://www.gem5.org/documentation/learning_gem5/part1/extending_configs</p> <p>general_docs</p> <p>https://www.gem5.org/documentation/general_docs/cpu_models/minor_cpu</p> <p>\u4e2d\u6587\u5b66\u4e60\u8d44\u6599</p> <p>https://zhuanlan.zhihu.com/p/530336703 https://zybzzz.github.io/ybsite/notes/sim/gem5/cpu_model.html#minorcpu https://blog.csdn.net/zhenz0729/article/details/135464175?spm=1001.2014.3001.5502 https://blog.csdn.net/qq_34898487?type=blog</p>"},{"location":"gem5/Introduction/","title":"gem5","text":""},{"location":"gem5/Introduction/#introduction","title":"Introduction","text":"<p>gem5\u662f\u4e00\u4e2a\u5f00\u6e90\u8ba1\u7b97\u673a\u67b6\u6784\u6a21\u62df\u5668\uff0c\u5305\u62ec\u7cfb\u7edf\u7ea7\u67b6\u6784\u4ee5\u53ca\u5904\u7406\u5668\u5fae\u67b6\u6784\u3002gem5\u7684\u524d\u8eab\u4e3a\u5bc6\u6b47\u6839\u5927\u5b66\u7684m5\u9879\u76ee\u4e0e\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u7684GEMS\u9879\u76ee\u30022011\u5e74m5\u4e0eGEMS\u5408\u5e76\u4e3agem5\uff0c\u76ee\u524d\u88ab\u5e7f\u6cdb\u7528\u4e8e\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u3002\u901a\u8fc7\u8c37\u6b4c\u5b66\u672f\u53ef\u4ee5\u770b\u5230\uff0cgem5\u76ee\u524d\u88ab\u5f15\u7528\u8d85\u8fc75000\u6b21\uff0c\u5927\u91cf\u8bba\u6587\u91c7\u7528gem5\u4f5c\u4e3a\u7814\u7a76\u5de5\u5177\u3002\u540c\u65f6\u4e5f\u88ab\u8bb8\u591a\u5de5\u4e1a\u754c\u516c\u53f8\u4f7f\u7528\uff0c\u5305\u62ecARM\u3001AMD\u3001Google\u3001Micron\u3001Metempsy\u3001HP\u3001Samsung\u7b49\u3002\u8bb8\u591a\u516c\u53f8\u4e5f\u79ef\u6781\u4e3agem5\u6dfb\u52a0\u4e86\u65b0\u529f\u80fd\u6216\u6539\u8fdb\u4e86\u73b0\u6709\u529f\u80fd\u3002\u8fd1\u5e74\u6765\uff0cgem5\u793e\u533a\u4ecd\u5728\u79ef\u6781\u66f4\u65b0\u4e0e\u5f00\u53d1\uff0c\u4ee5\u652f\u6301\u672a\u676515\u5e74\u7684\u8ba1\u7b97\u673a\u67b6\u6784\u7814\u7a76\u3002</p> <p>gem5\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u79bb\u6563\u4e8b\u4ef6\u9a71\u52a8\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u6a21\u62df\u5668\u5e73\u53f0\u3002\u8fd9\u610f\u5473\u7740\uff0c\u67b6\u6784\u7814\u7a76\u4eba\u5458\u5728\u7814\u7a76\u65b0\u67b6\u6784\u65f6\uff0c\u53ea\u9700\u6dfb\u52a0\u6216\u4fee\u6539\u7279\u5b9a\u4e8e\u76ee\u6807\u7684\u529f\u80fd\u6a21\u5757\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u6a21\u62df\u5668\u7684\u65b9\u65b9\u9762\u9762\u3002\u540c\u65f6\uff0c\u4e5f\u4f7f\u5f97gem5\u5bb9\u6613\u4e0e\u5176\u4ed6\u6a21\u62df\u5668\u8054\u5408\u4eff\u771f\uff0c\u6784\u5efa\u8054\u5408\u6a21\u62df\u5668\u5e73\u53f0\u6216\u642d\u5efa\u81ea\u5df1\u7684\u6a21\u62df\u7cfb\u7edf\uff0c\u76ee\u524d\u5df2\u6709\u8bb8\u591a\u5de5\u4f5c\u57fa\u4e8egem5\u5f00\u53d1\u4e86\u6a21\u62df\u5e73\u53f0\u3002</p> <p>gem5\u4e3b\u8981\u7531C++\u548cpython\u7f16\u5199\u7684\u3002\u5176\u4e2dC++\u5360\u7edd\u5927\u591a\u6570\uff0c\u4e3b\u8981\u8d1f\u8d23\u5e95\u5c42\u67b6\u6784\u7684\u5177\u4f53\u5b9e\u73b0\u7b49\uff0cpython\u5219\u8d1f\u8d23\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u3001\u914d\u7f6e\u548c\u6a21\u62df\u63a7\u5236\u7b49\u3002\u53e6\u5916\u5305\u542b\u4e86\u4e24\u4e2a\u9886\u57df\u7279\u5b9a\u8bed\u8a00DSL\uff0c\u5176\u4e2dISADSL\u8d1f\u8d23\u7edf\u4e00\u4e8c\u8fdb\u5236\u6307\u4ee4\u7684\u89e3\u7801\u548c\u8bed\u4e49\u89c4\u8303\uff0cSLICC\u7528\u4e8e\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p> <p>gem5\u7684\u4e3b\u8981\u7279\u6027\u5305\u62ec\uff1a</p> <ol> <li> <p>\u6a21\u62df\u5668\u67b6\u6784\u6a21\u5757\u5316\uff1agem5\u7684\u67b6\u6784\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u4f7f\u5f97\u67b6\u6784\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u53ea\u6dfb\u52a0\u6216\u4fee\u6539\u7279\u5b9a\u4e8e\u76ee\u6807\u7684\u529f\u80fd\u6a21\u5757\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u6a21\u62df\u5668\u7684\u65b9\u65b9\u9762\u9762\u3002</p> </li> <li> <p>\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\u652f\u6301\uff1agem5\u652f\u6301\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\uff0c\u5305\u62ecARM\u3001MIPS\u3001PowerPC\u3001x86\u3001SPARC\u3001Alpha\u3001M68K\u3001HPPA\u3001SystemZ\u7b49\u3002</p> </li> <li> <p>\u591a\u79cd\u7cfb\u7edf\u7ea7\u67b6\u6784\u652f\u6301\uff1agem5\u652f\u6301\u591a\u79cd\u7cfb\u7edf\u7ea7\u67b6\u6784\uff0c\u5305\u62ec\u5fae\u63a7\u5236\u5668\u3001\u7cfb\u7edf\u7ea7\u7f13\u5b58\u3001\u7f51\u7edc\u3001\u5b58\u50a8\u3001\u5904\u7406\u5668\u3001\u5185\u5b58\u7b49\u3002</p> </li> <li> <p>\u591a\u79cd\u5904\u7406\u5668\u5fae\u67b6\u6784\u652f\u6301\uff1agem5\u652f\u6301\u591a\u79cd\u5904\u7406\u5668\u5fae\u67b6\u6784\uff0c\u5305\u62ecRISC-V\u3001ARM\u3001MIPS\u3001PowerPC\u3001x86\u3001SPARC\u3001Alpha\u3001M68K\u3001HPPA\u3001SystemZ\u7b49\u3002</p> </li> <li> <p>\u7edf\u4e00\u7684\u6307\u4ee4\u96c6\u63cf\u8ff0\u8bed\u8a00\uff1agem5\u5305\u542b\u4e24\u4e2a\u9886\u57df\u7279\u5b9a\u8bed\u8a00DSL\uff0c\u5176\u4e2dISADSL\u8d1f\u8d23\u7edf\u4e00\u4e8c\u8fdb\u5236\u6307\u4ee4\u7684\u89e3\u7801\u548c\u8bed\u4e49\u89c4\u8303\uff0cSLICC\u7528\u4e8e\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p> </li> <li> <p>\u9ad8\u6027\u80fd\uff1agem5\u7684\u6027\u80fd\u4e0e\u5904\u7406\u5668\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u5904\u7406\u5668\u6570\u91cf\u8d8a\u591a\uff0c\u6027\u80fd\u8d8a\u9ad8\u3002</p> </li> <li> <p>\u6613\u4e8e\u4f7f\u7528\uff1agem5\u7684\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7b80\u5355\u5730\u914d\u7f6e\u4e00\u4e0b\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u6a21\u62df\u5668\uff0c\u5e76\u83b7\u53d6\u6a21\u62df\u7ed3\u679c\u3002</p> </li> <li> <p>\u5f00\u6e90\uff1agem5\u662f\u5f00\u6e90\u9879\u76ee\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\u3001\u4f7f\u7528\u3001\u4fee\u6539\u3001\u6269\u5c55\u3001\u7814\u7a76\u3002</p> </li> </ol>"},{"location":"gem5/Introduction/#download-and-install","title":"Download and Install","text":"<p>gem5\u7684\u4e0b\u8f7d\u4e0e\u5b89\u88c5\u8bf7\u53c2\u8003https://www.gem5.org/documentation/general_docs/building\u3002</p>"},{"location":"gem5/Introduction/#quick-start","title":"Quick Start","text":"<p>gem5\u7684\u5feb\u901f\u5165\u95e8\u8bf7\u53c2\u8003https://www.gem5.org/documentation/learning_gem5/part1/\u3002</p>"},{"location":"gem5/Introduction/#community","title":"Community","text":"<p>gem5\u7684\u793e\u533a\u5305\u62ec\u90ae\u4ef6\u5217\u8868\u3001IRC\u9891\u9053\u3001\u8bba\u575b\u3001wiki\u7b49\u3002</p> <ul> <li>\u90ae\u4ef6\u5217\u8868\uff1ahttps://gem5.groups.io/g/main</li> <li>IRC\u9891\u9053\uff1airc.freenode.net #gem5</li> <li>\u8bba\u575b\uff1ahttps://gem5.atlassian.net/wiki/spaces/GEM5/overview</li> <li>wiki\uff1ahttps://gem5.atlassian.net/wiki</li> </ul>"},{"location":"gem5/Introduction/#license","title":"License","text":"<p>gem5\u4f7f\u7528Apache 2.0\u8bb8\u53ef\u8bc1\u3002</p>"},{"location":"gem5/Introduction/#documents","title":"Documents","text":"<p>learning_gem5</p> <p>https://www.gem5.org/documentation/learning_gem5/part1/extending_configs</p> <p>general_docs</p> <p>https://www.gem5.org/documentation/general_docs/cpu_models/minor_cpu</p> <p>\u4e2d\u6587\u5b66\u4e60\u8d44\u6599</p> <p>https://zhuanlan.zhihu.com/p/530336703 https://zybzzz.github.io/ybsite/notes/sim/gem5/cpu_model.html#minorcpu https://blog.csdn.net/zhenz0729/article/details/135464175?spm=1001.2014.3001.5502 https://blog.csdn.net/qq_34898487?type=blog</p>"},{"location":"gem5/CPU%20models/AtomicSimpleCPU/","title":"AtomicSimpleCPU","text":"<p>AtomicSimpleCPU \u4e00\u822c\u662f\u7528\u6765\u8fdb\u884c\u9a8c\u8bc1\u529f\u80fd\u6216\u8005\u52a0\u901f\u5168\u7cfb\u7edf\u4eff\u771f\u7528\u7684\uff0c AtomicSimpleCPU\u662f\u4f7f\u7528\u539f\u5b50\u5185\u5b58\u8bbf\u95ee\u7684SimpleCPU\u7248\u672c\u3002\u5b83\u4f7f\u7528\u539f\u5b50\u8bbf\u95ee\u7684\u5ef6\u8fdf\u4f30\u8ba1\u6765\u4f30\u8ba1\u603b\u4f53\u7f13\u5b58\u8bbf\u95ee\u65f6\u95f4\u3002AtomicSimpleCPU\u6d3e\u751f\u81eaBaseSimpleCPU\uff0c\u5e76\u5b9e\u73b0\u4e86\u8bfb\u53d6\u548c\u5199\u5165\u5185\u5b58\u7684\u51fd\u6570\uff0c\u4ee5\u53catick\u51fd\u6570\uff0c\u5b83\u5b9a\u4e49\u4e86\u6bcf\u4e2aCPU\u5468\u671f\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5b83\u5b9a\u4e49\u4e86\u7528\u4e8e\u8fde\u63a5\u5230\u5185\u5b58\u7684\u7aef\u53e3\uff0c\u5e76\u5c06CPU\u8fde\u63a5\u5230\u7f13\u5b58\u3002  AtomicSimpleCPU\u6ca1\u6709CPU\u6d41\u6c34\u7ebf\uff0c\u56e0\u6b64\u6a21\u62df\u8fc7\u7a0b\u76f8\u5bf9\u7b80\u5355\u3002\u5176\u5185\u5b58\u8bbf\u95ee\u6a21\u578b\u662f\u539f\u5b50\u6027\u7684\uff0c\u5373\u5185\u5b58\u8bf7\u6c42\u7acb\u5373\u5b8c\u6210\uff0c\u4e0d\u8003\u8651\u5b9e\u9645\u7684\u5185\u5b58\u8bbf\u95ee\u5ef6\u8fdf\u3002\u7531\u4e8e\u5176\u7b80\u5355\u6027\u548c\u5feb\u901f\u6027\uff0cAtomicSimpleCPU\u4e3b\u8981\u7528\u4e8e\u5feb\u901f\u529f\u80fd\u6a21\u62df\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u5feb\u901f\u542f\u52a8Linux\u7b49\u64cd\u4f5c\u7cfb\u7edf\u65f6\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u7528\u4f5c\u68c0\u67e5\u70b9\uff0c\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u5207\u6362\u5230\u66f4\u8be6\u7ec6\u7684CPU\u6a21\u578b\u3002</p>"},{"location":"gem5/CPU%20models/BaseCPU/","title":"\u6e90\u4ee3\u7801\u89e3\u8bfb","text":"<p>\u5904\u4e8e cpu \u7ee7\u627f\u6811\u7684\u9876\u5c42\uff0cBaseCPU \u662f\u6240\u6709\u540e\u7eed cpu \u7684\u7236\u7c7b\uff0c\u5b83\u62bd\u8c61\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 cpu \u6a21\u578b\uff0c\u628a\u540e\u7eed\u6240\u6709 cpu \u9700\u8981\u7528\u5230\u7684\u516c\u5171\u529f\u80fd\u5c01\u88c5\u5230\u4e86\u8fd9\u4e2a BaseCPU \u4e2d\u3002  </p>"},{"location":"gem5/CPU%20models/BaseCPU/#basehh","title":"base.hh","text":"<p>\u8be5\u4ee3\u7801\u662fbase.cc\u7684\u58f0\u660e\u3002\u5177\u4f53\u5b9e\u73b0\u5728base.cc\u4e2d\u3002</p>"},{"location":"gem5/CPU%20models/BaseCPU/#basecc","title":"base.cc","text":"<p>\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2aCPU\u7684\u57fa\u7c7bBaseCPU\uff0c\u63d0\u4f9b\u4e86CPU\u7684\u57fa\u672c\u529f\u80fd\u548c\u7ba1\u7406\u673a\u5236\uff0c\u5305\u62ec\uff1aCPU\u72b6\u6001\u7ba1\u7406\uff1a\u521d\u59cb\u5316\u3001\u542f\u52a8\u3001\u6302\u8d77\u3001\u6fc0\u6d3b\u548c\u505c\u6b62CPU\uff1b\u6ce8\u518c\u3001\u67e5\u627e\u3001\u6fc0\u6d3b\u548c\u6302\u8d77\u7ebf\u7a0b\u4e0a\u4e0b\u6587\uff1b\u5904\u7406\u4e2d\u65ad\u5e76\u5524\u9192\u7ebf\u7a0b\uff1b\u8bbe\u7f6e\u548c\u5904\u7406\u5185\u5b58\u76d1\u89c6\u5668\uff1b\u7ba1\u7406\u7535\u6e90\u72b6\u6001\u548c\u7535\u6e90\u95e8\u63a7\u4e8b\u4ef6\uff1b\u6536\u96c6\u548c\u62a5\u544aCPU\u7684\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982IPC\u3001CPI\u7b49\uff1b\u4fdd\u5b58\u548c\u6062\u590dCPU\u72b6\u6001;\u8c03\u5ea6\u5404\u79cd\u4e8b\u4ef6\uff0c\u5982\u8fdb\u5ea6\u4e8b\u4ef6\u3001\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u7b49\u3002 \u901a\u8fc7\u8fd9\u4e9b\u529f\u80fd\uff0cBaseCPU\u7c7b\u4e3a\u66f4\u590d\u6742\u7684CPU\u6a21\u578b\u63d0\u4f9b\u4e86\u57fa\u7840\uff0c\u4f7f\u5f97\u6a21\u62df\u5668\u80fd\u591f\u6a21\u62df\u548c\u5206\u6790CPU\u7684\u884c\u4e3a\u548c\u6027\u80fd\u3002  </p> <p>1.\u7248\u6743\u58f0\u660e\u548c\u5305\u542b\u7684\u5934\u6587\u4ef6  </p> <p>\u4ee3\u7801\u5f00\u59cb\u90e8\u5206\u662f\u7248\u6743\u58f0\u660e\uff0c\u63a5\u7740\u662f\u5305\u542b\u7684\u5934\u6587\u4ef6\u3002\u8fd9\u4e9b\u5934\u6587\u4ef6\u5305\u62ec\u4e86\u5404\u79cd\u5e93\u548c\u6a21\u5757\uff0c\u5982cpu/base.hh\u3001iostream\u3001sstream\u3001string\u7b49\uff0c\u8fd9\u4e9b\u5934\u6587\u4ef6\u4e3a\u540e\u7eed\u7684\u4ee3\u7801\u63d0\u4f9b\u4e86\u5fc5\u8981\u7684\u529f\u80fd\u548c\u5b9a\u4e49\u3002  </p> <p>2.\u547d\u540d\u7a7a\u95f4\u548c\u5168\u5c40\u53d8\u91cf  </p> <p>\u4ee3\u7801\u8fdb\u5165\u4e86gem5\u547d\u540d\u7a7a\u95f4\uff0c\u5e76\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u5982BaseCPU::globalStats\u548cBaseCPU::cpuList\uff0c\u8fd9\u4e9b\u53d8\u91cf\u7528\u4e8e\u7ba1\u7406\u548c\u8ddf\u8e2aCPU\u7684\u72b6\u6001\u548c\u7edf\u8ba1\u4fe1\u606f\u3002  </p> <p>3.CPUProgressEvent\u7c7b  </p> <p>CPUProgressEvent\u7c7b\u7528\u4e8e\u5b9a\u671f\u62a5\u544aCPU\u7684\u8fdb\u5ea6\u3002\u5b83\u7ee7\u627f\u81eaEvent\u7c7b\uff0c\u5e76\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5b9a\u671f\u4e8b\u4ef6\uff0c\u7528\u4e8e\u5728\u6bcf\u4e2a\u65f6\u95f4\u95f4\u9694\u540e\u8c03\u7528process\u65b9\u6cd5\u3002process\u65b9\u6cd5\u8ba1\u7b97\u5e76\u6253\u5370\u51faCPU\u7684IPC\uff08\u6bcf\u65f6\u949f\u5468\u671f\u7684\u6307\u4ee4\u6570\uff09\u3002  </p> <p>4.BaseCPU\u7c7b  </p> <p>BaseCPU\u7c7b\u662fCPU\u7684\u57fa\u7c7b\uff0c\u5305\u542b\u4e86\u8bb8\u591a\u91cd\u8981\u7684\u65b9\u6cd5\u548c\u6210\u5458\u53d8\u91cf\uff0c\u7528\u4e8e\u7ba1\u7406CPU\u7684\u72b6\u6001\u3001\u7ebf\u7a0b\u3001\u4e2d\u65ad\u3001\u7edf\u8ba1\u4fe1\u606f\u7b49\u3002 <code>\u6784\u9020\u51fd\u6570</code>\uff1a\u521d\u59cb\u5316CPU\u7684\u5404\u79cd\u5c5e\u6027\uff0c\u5982CPU ID\u3001\u7ebf\u7a0b\u6570\u3001\u7f13\u5b58\u884c\u5927\u5c0f\u7b49\u3002\u8fd8\u8bbe\u7f6e\u4e86\u51fd\u6570\u8ddf\u8e2a\u548c\u7edf\u8ba1\u4fe1\u606f\u3002 <code>enableFunctionTrace</code>\uff1a\u542f\u7528\u51fd\u6570\u8ddf\u8e2a\u3002 <code>postInterrupt</code>\uff1a\u5904\u7406\u4e2d\u65ad\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u5524\u9192\u7ebf\u7a0b\u3002 <code>armMonitor</code>\uff1a\u8bbe\u7f6e\u76d1\u89c6\u5668\uff0c\u7528\u4e8e\u76d1\u89c6\u7279\u5b9a\u7684\u5185\u5b58\u5730\u5740\u3002 <code>mwait</code>\uff1a\u5904\u7406mwait\u6307\u4ee4\uff0c\u7528\u4e8e\u7b49\u5f85\u67d0\u4e2a\u5185\u5b58\u5730\u5740\u7684\u53d8\u5316\u3002 <code>mwaitAtomic</code>\uff1a\u539f\u5b50\u5730\u5904\u7406mwait\u6307\u4ee4\u3002 <code>init</code>\uff1a\u521d\u59cb\u5316CPU\uff0c\u8bbe\u7f6e\u6307\u4ee4\u8ba1\u6570\u7ec8\u6b62\u4e8b\u4ef6\u7b49\u3002 <code>startup</code>\uff1a\u542f\u52a8CPU\uff0c\u8bbe\u7f6e\u8fdb\u5ea6\u4e8b\u4ef6\u548c\u7535\u6e90\u72b6\u6001\u3002 <code>regProbePoints</code>\uff1a\u6ce8\u518c\u63a2\u9488\u70b9\uff0c\u7528\u4e8e\u6027\u80fd\u76d1\u63a7\u3002 <code>probeInstCommit</code>\uff1a\u5904\u7406\u6307\u4ee4\u63d0\u4ea4\u4e8b\u4ef6\uff0c\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\u3002 <code>regStats</code>\uff1a\u6ce8\u518c\u7edf\u8ba1\u4fe1\u606f\u3002 <code>getPort</code>\uff1a\u6839\u636e\u540d\u79f0\u83b7\u53d6\u7aef\u53e3\u3002 <code>registerThreadContexts</code>\uff1a\u6ce8\u518c\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>deschedulePowerGatingEvent</code>\uff1a\u53d6\u6d88\u7535\u6e90\u95e8\u63a7\u4e8b\u4ef6\u3002 <code>schedulePowerGatingEvent</code>\uff1a\u8c03\u5ea6\u7535\u6e90\u95e8\u63a7\u4e8b\u4ef6\u3002 <code>findContext</code>\uff1a\u67e5\u627e\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>activateContext</code>\uff1a\u6fc0\u6d3b\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>suspendContext</code>\uff1a\u6302\u8d77\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>haltContext</code>\uff1a\u505c\u6b62\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>enterPwrGating</code>\uff1a\u8fdb\u5165\u7535\u6e90\u95e8\u63a7\u72b6\u6001\u3002 <code>switchOut</code>\uff1a\u5207\u6362\u51faCPU\u3002 <code>takeOverFrom</code>\uff1a\u4ece\u53e6\u4e00\u4e2aCPU\u63a5\u7ba1\u72b6\u6001\u3002 <code>setReset</code>\uff1a\u8bbe\u7f6e\u91cd\u7f6e\u72b6\u6001\u3002 <code>flushTLBs</code>\uff1a\u5237\u65b0TLB\u3002 <code>serialize</code>\uff1a\u5e8f\u5217\u5316CPU\u72b6\u6001\u3002 <code>unserialize</code>\uff1a\u53cd\u5e8f\u5217\u5316CPU\u72b6\u6001\u3002 <code>scheduleInstStop</code>\uff1a\u8c03\u5ea6\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u3002 <code>getCurrentInstCount</code>\uff1a\u83b7\u53d6\u5f53\u524d\u6307\u4ee4\u8ba1\u6570\u3002 <code>traceFunctionsInternal</code>\uff1a\u8ddf\u8e2a\u51fd\u6570\u8c03\u7528\u3002 <code>scheduleSimpointsInstStop</code>\uff1a\u8c03\u5ea6SimPoints\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u3002 <code>scheduleInstStopAnyThread</code>\uff1a\u8c03\u5ea6\u4efb\u610f\u7ebf\u7a0b\u7684\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u3002  </p> <p>5.BaseCPUStats\u7c7b  </p> <p>BaseCPUStats\u7c7b\u7528\u4e8e\u6536\u96c6\u548c\u62a5\u544aCPU\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u5468\u671f\u6570\u3001IPC\u3001CPI\u7b49\u3002 FetchCPUStats\u3001ExecuteCPUStats\u3001CommitCPUStats\u7c7b \u8fd9\u4e9b\u7c7b\u5206\u522b\u7528\u4e8e\u6536\u96c6\u548c\u62a5\u544a\u53d6\u6307\u3001\u6267\u884c\u548c\u63d0\u4ea4\u9636\u6bb5\u7684\u7edf\u8ba1\u4fe1\u606f\u3002  </p>"},{"location":"gem5/CPU%20models/BaseSimpleCPU/","title":"BaseSimpleCPU","text":"<p>\u5b9e\u73b0\u4e86\u51e0\u4e2a\u529f\u80fd\uff1a</p> <p>\u4fdd\u5b58\u4f53\u7cfb\u7ed3\u6784\u72b6\u6001\uff0c\u5728SimpleCPU\u6a21\u578b\u4e2d\u901a\u7528\u7684\u72b6\u6001\u3002 \u5b9a\u4e49\u4e86\u68c0\u67e5\u4e2d\u65ad\u3001\u8bbe\u7f6e\u83b7\u53d6\u8bf7\u6c42\u3001\u5904\u7406\u9884\u6267\u884c\u8bbe\u7f6e\u3001\u5904\u7406\u540e\u6267\u884c\u64cd\u4f5c\u4ee5\u53ca\u5c06PC\u63a8\u8fdb\u5230\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u5728SimpleCPU\u6a21\u578b\u4e2d\u4e5f\u5f88\u5e38\u89c1\u3002 \u5b9e\u73b0ExecContext\u63a5\u53e3\u3002</p> <p>BaseSimpleCPU\u4e0d\u80fd\u5355\u72ec\u8fd0\u884c\uff0c\u5fc5\u987b\u4f7f\u7528\u4eceBaseSimpleCPU\u7ee7\u627f\u7684\u7c7b\u4e4b\u4e00\uff0cAtomicSimpleCPU\u6216TimingSimpleCPU\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/","title":"MinorCPU","text":""},{"location":"gem5/CPU%20models/MinorCPU/#introduction","title":"Introduction","text":"<p>Minor \u662f\u4e00\u79cd\u6709\u5e8f\u5904\u7406\u5668\u6a21\u578b\uff0c\u5177\u6709\u56fa\u5b9a\u7684\u6d41\u6c34\u7ebf\uff0c\u4f46\u53ef\u914d\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u548c\u6267\u884c\u884c\u4e3a\u3002\u5b83\u65e8\u5728\u7528\u4e8e\u5bf9\u5177\u6709\u4e25\u683c\u987a\u5e8f\u6267\u884c\u884c\u4e3a\u7684\u5904\u7406\u5668\u8fdb\u884c\u5efa\u6a21\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7 MinorTrace/minorview.py \u683c\u5f0f/\u5de5\u5177\u53ef\u89c6\u5316\u6307\u4ee4\u5728\u6d41\u6c34\u7ebf\u4e2d\u7684\u4f4d\u7f6e\u3002\u5176\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a\u6846\u67b6\uff0c\u7528\u4e8e\u5728\u5fae\u67b6\u6784\u4e0a\u5c06\u6a21\u578b\u4e0e\u5177\u6709\u7c7b\u4f3c\u529f\u80fd\u7684\u7279\u5b9a\u9009\u5b9a\u5904\u7406\u5668\u76f8\u5173\u8054\u3002</p>"},{"location":"gem5/CPU%20models/TimingSimpleCPU/","title":"TimingSimpleCPU","text":"<p>TimingSimpleCPU\u662f\u4f7f\u7528\u8ba1\u65f6\u5185\u5b58\u8bbf\u95ee\u7684SimpleCPU\u7248\u672c\u3002\u5b83\u5728\u8bbf\u95ee\u9ad8\u901f\u7f13\u5b58\u65f6\u505c\u6b62\uff0c\u5e76\u5728\u7ee7\u7eed\u4e4b\u524d\u7b49\u5f85\u5185\u5b58\u7cfb\u7edf\u7684\u54cd\u5e94\u3002\u4e0eAtomicSimpleCPU\u4e00\u6837\uff0cTimingSimpleCPU\u4e5f\u6d3e\u751f\u81eaBaseSimpleCPU\uff0c\u5e76\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u4e00\u7ec4\u51fd\u6570\u3002\u5b83\u5b9a\u4e49\u4e86\u7528\u4e8e\u8fde\u63a5\u5230\u5185\u5b58\u7684\u7aef\u53e3\uff0c\u5e76\u5c06CPU\u8fde\u63a5\u5230\u7f13\u5b58\u3002\u5b83\u8fd8\u5b9a\u4e49\u4e86\u5904\u7406\u4ece\u5185\u5b58\u5230\u53d1\u51fa\u8bbf\u95ee\u7684\u54cd\u5e94\u6240\u9700\u7684\u51fd\u6570\u3002 TimingSimpleCPU \u7684\u6307\u4ee4\u6267\u884c\u6d41\u7a0b\u7531\u4e0b\u56fe\u7ed9\u51fa\uff1a  \u4e0eAtomicSimpleCPU\u4e0d\u540c\uff0cTimingSimpleCPU\u5728\u6a21\u62df\u4e2d\u4f1a\u8003\u8651\u5185\u5b58\u8bbf\u95ee\u7684\u5b9e\u9645\u5ef6\u8fdf\u3002\u5f53CPU\u53d1\u51fa\u5185\u5b58\u8bf7\u6c42\u65f6\uff0c\u5b83\u4f1a\u7b49\u5f85\u5185\u5b58\u7cfb\u7edf\u8fd4\u56de\u54cd\u5e94\uff0c\u800c\u4e0d\u662f\u7acb\u5373\u5b8c\u6210\u3002\u5c3d\u7ba1\u8003\u8651\u4e86\u5185\u5b58\u65f6\u5e8f\uff0c\u4f46TimingSimpleCPU\u4ecd\u7136\u4e0d\u4f7f\u7528CPU\u6d41\u6c34\u7ebf\u6280\u672f\uff0c\u56e0\u6b64\u5176\u6a21\u62df\u8fc7\u7a0b\u4ecd\u7136\u76f8\u5bf9\u7b80\u5355\u3002</p>"}]}