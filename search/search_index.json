{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"about/","title":"This is leo's site","text":"<p>Nec amor nec tussis celatur  </p>"},{"location":"Algorithm/","title":"Getting Started","text":"<ul> <li> HEFT</li> <li> LSTM</li> </ul>"},{"location":"Algorithm/HEFT/","title":"Github","text":"<p>heft.cpp</p> <p>https://github.com/samanjate/heft</p> <p>heft.cpp</p> <p>https://github.com/hackerkid/HEFT-Scheduling</p> <p>heft.cpp</p> <p>https://github.com/VanillaBase1lb/HEFT</p> <p>heft.cpp</p> <p>https://github.com/spharish/HEFT-Algorithm</p> <p>heft.cpp</p> <p>https://github.com/yuqingtang/heft-algorithm</p> <p>heft.cpp</p> <p>https://github.com/mehtaharsh53/HEFT.cpp</p> <p>heft.py</p> <p>https://github.com/mrocklin/heft</p> <p>heft.py</p> <p>https://github.com/sina33/heft</p> <p>heft.c</p> <p>https://github.com/0x333333/HEFT</p> <p>heft.c</p> <p>https://github.com/royitbhu/HEFT-Task-Scheduling</p>"},{"location":"Algorithm/LSTM/","title":"LSTM","text":"<p>LSTM</p> <p>https://blog.csdn.net/Cyril_KI/article/details/122569775?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22122569775%22%2C%22source%22%3A%22Adam__W%22%7D&amp;fromshare=blogdetail</p>"},{"location":"Architecture/","title":"Getting Started","text":"<p>\u5173\u4e8e\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u548c\u7535\u5b50\u7cfb\u7edf\u7ea7\u8bbe\u8ba1\u7684\u5b66\u4e60</p> <p>\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 ETH-CA 2023</p> <p>https://www.bilibili.com/video/BV18i421a7NZ</p> <p>learnsystemc</p> <p>https://www.learnsystemc.com/</p>"},{"location":"Architecture/CA/","title":"Computer Architecture","text":"<p>\u770b\u8fc7\u7684\u7ecf\u5178\u8bfe\u7a0b\u53ca\u4e66\u7c4d</p> <p>\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 ETH-CA 2023</p> <p>https://www.bilibili.com/video/BV18i421a7NZ</p> <p>\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1</p> <p>https://github.com/zhangyachen/ComputerArchitectureAndCppBooks</p> <p>\u91cf\u5316\u7814\u7a76\u65b9\u6cd5</p> <p>https://github.com/zhangyachen/ComputerArchitectureAndCppBooks</p>"},{"location":"Architecture/ESL/","title":"ESL","text":"<p>ESL\uff1aElectronic System Level Design\uff0c\u7535\u5b50\u7cfb\u7edf\u7ea7\u8bbe\u8ba1</p> <p>ESL\u5229\u7528C/C++\u7b49\u9ad8\u7ea7\u8bed\u8a00\u901a\u8fc7\u8f6f\u4ef6\u6a21\u578b\u6765\u6a21\u62df\u786c\u4ef6\u884c\u4e3a\uff0c\u4e3aSoC\u7cfb\u7edf\u63d0\u4f9b\u5404\u79cd\u7ea7\u522b\u7684\u8f6f\u4ef6\u6a21\u62df\u5e73\u53f0\uff0c\u4e3aSoC\u7cfb\u7edf\u67b6\u6784\u9a8c\u8bc1\u548c\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u5f00\u53d1\u63d0\u4f9b\u4e00\u79cd\u53ef\u8fd0\u884c\u7684\u9a8c\u8bc1\u73af\u5883\uff0c\u6709\u6548\u652f\u6491SoC\u7cfb\u7edf\u7684\u8fed\u4ee3\u5f00\u53d1\u3002</p> <p></p>"},{"location":"Architecture/Script/","title":"\u81ea\u52a8\u5316\u811a\u672c","text":"<pre><code>import re\nimport os\nimport sys\nprint('-----TOP Generator -------')\n# \u6253\u5f00\u8bbe\u8ba1\u6587\u4ef6\ntry:\n    top = sys.argv[1]\n    file_group = sys.argv[2]\nexcept Exception:\n    raise (\"Error: gen_top.py need some design.v \")\n# \u683c\u5f0f\u5bf9\u9f50\nalign1 = \"{:&lt;20}\\t{:&lt;10}\\t{:&lt;20}\\t{:&lt;25}\"\nalign2 = \"{:&lt;20}\\t{:&lt;10}\\t{:&lt;20}\\t{:&lt;25}{:&lt;5}\"\nalign3 = \"{:&lt;20}{:&lt;30}\\t{:&lt;5}\"\nalign4 = \"{:&lt;20}{:&lt;4}\"\nalign5 = \"{:&lt;20}\\t{:&lt;10}\\t{:&lt;20}\\t{:&lt;25}{:&lt;1}\"\n# \u5b9a\u4e49\u8def\u5f84\ninst = 'inst.tmp'\ndirectory = os.getcwd()\ninst_path = directory + '/' + inst\ntop_path = directory + '/' + top\n# \u79fb\u9664tmp\u6587\u4ef6\nif os.path.exists(inst_path):\n    os.remove(inst_path)\nif os.path.exists(top_path):\n    os.remove(top_path)\n\nwith open(inst_path, 'a') as instance_group:\n    port_list = []  #\u7aef\u53e3\u5217\u8868\n    sig_dir = {}    #\u4fe1\u53f7\u5d4c\u5957\u5b57\u5178\n    link_dic = {}   #\u81ea\u5b9a\u4e49\u4fe1\u53f7\u5b57\u5178\n    # \u4f8b\u5316\u6a21\u5757\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            with open(file_path, 'r',errors='ignore') as file_obj:\n                print('Starting Reading file: ' + file_path)\n                content = file_obj.read()\n                #\u6b63\u5219\u5339\u914d\u5220\u9664\u5355\u884c\u548c\u591a\u884c\u6ce8\u91ca\uff0c\u9632\u6b62\u5e72\u6270(\u4fe1\u53f7\u8fde\u63a5\u9664\u5916)\n                regex_note = re.compile(r'/\\*[^/]*\\*/\\n?|//(?!.*{.+}).*')   \n                match_string = re.findall(regex_note, content)\n                for k in range(len(match_string)):\n                    content = content.replace(match_string[k], '')\n                # \u81ea\u5b9a\u4e49\u6a21\u5757\u4fe1\u53f7\u8fde\u63a5\n                signal_link=re.compile(r'(.*{\\s*)(\\w+)(\\s*:\\s*)(\\w+)(\\s*}.*)')   \n                signal_dic=re.findall(signal_link, content)\n                for m in  range(len(signal_dic)):\n                    signal_from=signal_dic[m][1]\n                    signal_to=signal_dic[m][3] \n                    link_dic.update({signal_from:signal_to})\n                link_keys = link_dic.keys()  \n                link_values = list(link_dic.values() )\n\n                # \u6b63\u5219\u5339\u914d\u6a21\u5757\u540d\n                regex_module = re.compile(r'(module)(\\s+)(\\w+)(\\s*)')\n                module_obj = re.findall(regex_module, content)\n                if len(module_obj) == 0:\n                    print('Error: Cannot find any module')\n                if len(module_obj) &gt; 1:\n                    print('Error: ', len(module_obj), ' module have been found')\n                if len(module_obj) == 1:\n                    module_name = module_obj[0][2]\n                    print('Info: Found module: ', module_name)\n                # \u6b63\u5219\u5339\u914d\u7aef\u53e3\u540d\n                regex_ports = re.compile(r'(input|output|inout)(\\s+)(reg|wire)?(\\s+)?(\\[.*:.*\\]\\s+|\\[.*\\]\\s+)?(\\w+)')\n                #                                0\u8f93\u5165\u8f93\u51fa     1\u7a7a\u683c 2\u4fe1\u53f7\u7c7b\u578b  3\u7a7a\u683c     4[\u4f4d\u5bbd]               5\u4fe1\u53f7\u540d\n                groups_ports = re.findall(regex_ports, content)\n                print('Info: Found ports: ', len(groups_ports))\n\n                # \u4f8b\u5316\u6a21\u5757\n                if module_obj is not None:\n                    instance_group.write('\\n//instance module of ' + module_name)\n                    # \u6709\u53c2\u6570\u7684\u6a21\u5757                    \n                    regex_para = re.compile(r'(parameter)(\\s+)(\\w+)(\\s*)(=)(\\s*)(\\w+)')\n                    groups_para = re.findall(regex_para, content)\n                    instance_group.write('\\n' + module_name+' #(' ) if len(groups_para) &gt; 0 else ' '\n                    if len(groups_para) &gt; 0:                                 \n                        for j in range(len(groups_para)):\n                            para_name = groups_para[j][2]\n                            para_num = groups_para[j][6]\n                            if j == len(groups_para)-1:\n                                instance_group.write(' .'+ para_name+'(' + para_name+'))')\n                            else: \n                                instance_group.write(' .'+ para_name+'(' + para_name+'),')\n                    else:\n                        instance_group.write(' ')\n                    if len(groups_para) &gt; 0 :\n                        instance_group.write('\\n'  + 'u_' + module_name + ' (\\n') \n                    else :\n                        instance_group.write('\\n' + module_name + ' u_' + module_name + ' (\\n')  \n\n                    num = len(groups_ports)\n                    for i in range(num):\n                        port_name = groups_ports[i][5]\n                        port_width = groups_ports[i][4]\n                        port_type = groups_ports[i][0]\n                        port_regwire = groups_ports[i][2]\n                        if port_name not in port_list:\n                            sig_dir[port_name] = {}\n                            sig_dir[port_name]['input_inst'] = []\n                            sig_dir[port_name]['output_inst'] = []\n                            sig_dir[port_name]['inout_inst'] = []\n                            sig_dir[port_name]['input_num'] = 0\n                            sig_dir[port_name]['output_num'] = 0\n                            sig_dir[port_name]['inout_num'] = 0\n                            sig_dir[port_name]['link_num'] = 0\n                            sig_dir[port_name]['port_name'] = port_name\n                            sig_dir[port_name]['port_width'] = port_width\n                            sig_dir[port_name]['port_type'] = port_type\n                            sig_dir[port_name]['regwire'] = port_regwire\n                            sig_dir[port_name]['link_from'] = port_name if port_name in link_keys else ''\n                            sig_dir[port_name]['link_to'] = link_dic[port_name] if port_name in link_keys else ''\n                            port_list.append(port_name)\n\n                        if port_type == 'input':\n                            sig_dir[port_name]['input_num'] += 1 \n                            sig_dir[port_name]['input_inst'].append(module_name)                             \n                        elif port_type == 'output':\n                            sig_dir[port_name]['output_num'] += 1\n                            sig_dir[port_name]['output_inst'].append(module_name)                         \n                        else:\n                            sig_dir[port_name]['inout_num'] += 1\n                            sig_dir[port_name]['inout_inst'].append(module_name)\n\n                        if port_name in link_keys:\n                            sig_dir[port_name]['link_num'] += 1 \n\n                        if i == num - 1:\n                            if port_name in link_keys:                           \n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + link_dic[port_name] + ')')\n                                                    ,('\\t//' + port_type +' '+port_regwire +' '+ port_width + '\\n);\\n')))\n                            else:\n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + port_name + ')')\n                                                    ,('\\t//' + port_type +' '+port_regwire +' '+ port_width + '\\n);\\n')))                                \n                        else:\n                            if port_name in link_keys:                           \n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + link_dic[port_name] + '),')\n                                                ,('\\t//' + port_type +  ' '+port_regwire +' '+ port_width + '\\n'))) \n                            else:\n                                instance_group.write(align2.format(('\\t.' + port_name),(' '),(' '),('\\t(' + port_name + '),')\n                                                ,('\\t//' + port_type +  ' '+port_regwire +' '+ port_width + '\\n'))) \n\n    # \u9876\u5c42\u8f93\u5165\u8f93\u51fa\u4fe1\u53f7\u58f0\u660e\nwith open(top_path, 'a') as top_group:\n    top_group.write('/*------------------------------------------------------------------\\n')\n    top_group.write('//The design file is generated by gen_top.py\\n')\n    top_group.write('//The design file including:\\n')\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            top_group.write('//'+file_path+'\\n')\n    top_group.write('-------------------------------------------------------------------*/\\n')\n    # `include\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            with open(file_path, 'r',errors='ignore') as file_obj:\n                content = file_obj.read()\n                regex_include = re.compile(r'`include.+\"')   \n                include_string = re.findall(regex_include, content)\n                for m in range(len(include_string)):\n                    top_group.write(include_string[m]+'\\n') \n\n    top_group.write('module top (\\n')\n    num_port = 0\n    link_port = 0 \n    cmt_input = {}\n    cmt_output = {}\n    cmt_inout = {}\n    cmt_link1 = {}\n    cmt_link2 = {}\n    cmt_link = {}\n    cmt_sig = {}\n    port_sig = {}\n    wire_sig = {}\n    link_sig = {}\n    Info1 ={}\n    Info2 ={}\n    Info ={}\n    for i in sig_dir:\n        #\u6ce8\u91ca\n        cmt_input[i] = str('to: ' +str(sig_dir[i]['input_inst']) + '; ') if sig_dir[i]['input_num'] &gt; 0 else ''\n        cmt_output[i] = str('from: ' + str(sig_dir[i]['output_inst']) + '; ') if sig_dir[i]['output_num'] &gt; 0 else ''\n        cmt_inout[i] = str('connect: ' + str(sig_dir[i]['inout_inst']) + '; ') if sig_dir[i]['inout_num'] &gt; 0 else ''\n        cmt_sig[i] ='\\t//' + cmt_input[i] + cmt_output[i] + cmt_inout[i]\n\n        cmt_link1[i] = str('to: ' + str(sig_dir[i]['input_inst'])+':' +str(sig_dir[i]['link_from']) +'; ') if sig_dir[i]['input_num'] &gt; 0 else ''\n        cmt_link2[i] = str('from: ' + str(sig_dir[i]['output_inst'])+':' +str(sig_dir[i]['link_from'])) if sig_dir[i]['output_num'] &gt; 0 else ''\n        cmt_link[i] =  '\\t//' + cmt_link2[i] + cmt_link1[i]\n\n        port_sig[i] = str(align1.format(('\\t' + sig_dir[i]['port_type'] ),( '\\t'+ sig_dir[i]['regwire']  ),( sig_dir[i]['port_width']  ),( sig_dir[i]['port_name'])))\n        wire_sig[i] = str(align1.format(('\\t' +'wire' + '\\t' ),(' '),( sig_dir[i]['port_width'] ), (sig_dir[i]['port_name']))) \n        link_sig[i] = str(align1.format(('\\t' +'wire' + '\\t' ),(' '),( sig_dir[i]['port_width'] ), (sig_dir[i]['link_to'])))\n\n        Info1[i] =str(sig_dir[i]['input_inst'])if sig_dir[i]['input_num'] &gt; 0 else ''\n        Info2[i] =str(sig_dir[i]['output_inst'])if sig_dir[i]['output_num'] &gt; 0 else ''\n        Info[i] =Info1[i]+Info2[i]\n        #\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4e3a0\u4e5f\u5c31\u662f\u8bf4\u53ea\u8f93\u5165\u6216\u8005\u53ea\u8f93\u51fa\u5c31\u662f\u9876\u5c42\u7aef\u53e3\uff0c\u5426\u5219\u662f\u5185\u90e8\u4fe1\u53f7\n        if (sig_dir[i]['input_num'] == 0 or sig_dir[i]['output_num'] == 0 or sig_dir[i]['inout_num'] &gt; 0 ) and (sig_dir[i]['link_num'] == 0):\n            num_port = num_port + 1\n        # if sig_dir[i]['output_num'] &gt; 1:\n        #     print('Error: ' + i + ' have been multiple derived by ' + str(sig_dir[i]['output_inst']))\n        # if sig_dir[i]['input_num'] &gt; 1:\n        #     print('Info: ' + i + ' have been broadcast to ' + str(sig_dir[i]['input_inst'])+'\\n')\n    #\u9876\u5c42\u7aef\u53e3\u58f0\u660e\n    cnt_port = 0\n    for i in sig_dir:           \n        if (sig_dir[i]['input_num'] == 0 or sig_dir[i]['output_num'] == 0 or sig_dir[i]['inout_num'] &gt; 0) and (sig_dir[i]['link_num'] == 0):\n            if cnt_port == num_port - 1:\n                top_group.write(port_sig[i] + cmt_sig[i]+ '\\n);\\n\\n')\n            else:\n                top_group.write(port_sig[i] + ',' + cmt_sig[i]  + '\\n')\n            cnt_port = cnt_port + 1\n    #\u53c2\u6570\u58f0\u660e\n    top_group.write(\"//parameter declaration\\n\")\n    for filepath, dirnames, filenames in os.walk(str(file_group)):\n        for filename in filenames:\n            file_path = os.path.join(filepath, filename)\n            with open(file_path, 'r',errors='ignore') as file_obj:\n                content = file_obj.read()                  \n                regex_para = re.compile(r'(parameter)(\\s+)(\\w+)(\\s*)(=)(\\s*)(\\w+)')\n                groups_para = re.findall(regex_para, content)                               \n                for j in range(len(groups_para)):\n                    para_name = groups_para[j][2]\n                    para_num = groups_para[j][6]\n                    top_group.write(align5.format(('\\tlocalparam '),(' '),( '\\t'+para_name),('\\t=' + para_num),(' ;\\n')))\n    #\u4fe1\u53f7\u58f0\u660e \n    top_group.write(\" \\n\") \n    top_group.write(\"//signal declaration\\n\")  \n    for i in sig_dir:\n        if sig_dir[i]['input_num'] &gt; 0 and sig_dir[i]['output_num'] &gt; 0 and sig_dir[i]['inout_num'] == 0:\n            top_group.write(wire_sig[i] + ';' +cmt_sig[i] + '\\n')\n\n    # \u81ea\u5b9a\u4e49\u4fe1\u53f7\u58f0\u660e           \n        if sig_dir[i]['link_num'] &gt; 0:                   \n            top_group.write(link_sig[i] + ';' + '\\n')\n            print('Info: ' + Info[i]+':'+i + ' have been renamed as '  +str(sig_dir[i]['link_to']))\n\n# \u53bb\u9664\u91cd\u590d\u58f0\u660e\ndef remove_duplicate_lines(file_path):\n    lines_dict = {}\n    with open(file_path, 'r+') as file:\n        for line in file:\n            lines_dict[line] = None\n        file.truncate(0)\n    with open(file_path, 'w') as output_file:\n        for line in lines_dict.keys():\n            output_file.write(line)\nremove_duplicate_lines(top_path)                \n\n# \u5c06inst\u4e2d\u7684\u6a21\u5757\u4f8b\u5316\u5199\u5165top\nwith open(inst_path, 'r') as instance_group:\n    res = instance_group.read()\n    with open(top_path, 'a') as top_group:\n        top_group.write(res + '\\nendmodule\\n')#\u5206\u6587\u4ef6\u56e0\u4e3aendmodule\n\n# \u6e05\u9664inst\u6587\u4ef6\nif os.path.exists(directory + '/' + inst):\n    os.remove(directory + '/' + inst)\n    print('Info: ' + top + ' have been generated')\n    print('-----TOP Generator End---------')\n\n# ---------------------------------Testbench--------------------------------------------\nprint('\\n-----TB Generator-----')\nfile_tb   = 'tb_top.v'\npath = top_path\nwith open(path,'r') as file:\n  print('Read instance: '+path)\n  content_tb = file.read()\n  regex=re.compile(r'//.*')\n  match_string=re.findall(regex, content_tb)\n  for k in range(len(match_string)):\n    content_tb=content_tb.replace(match_string[k],'')\n  #\u6b63\u5219\u5339\u914d\u6a21\u5757\u540d\n  regex_module = re.compile(r'(module)(\\s+)(\\w+)(\\s+)')\n  module_obj = re.findall(regex_module, content_tb)\n  if len(module_obj)==0:\n    print('Error! Cannot find any module')\n  if len(module_obj)&gt;1:\n    print('Error! ',len(module_obj), ' module have been found')\n  if len(module_obj)==1:\n    print('Find module: ',module_obj[0][2]) \n  #\u6b63\u5219\u5339\u914d\u7aef\u53e3\n  regex_ports = re.compile(r'(input|output)(\\s+)(reg|wire)?(\\s+)?(\\[.*:.*\\]\\s+|\\[.*\\]\\s+)?(\\w+)');\n  groups_ports = re.findall(regex_ports, content_tb)\n  print('Find ports:',len(groups_ports))\n  ##\u5199TB\u6587\u4ef6\n  with open(directory+'/'+file_tb,'w') as file_obj2:\n    with open(path, 'r',errors='ignore') as file_obj3:\n        content = file_obj3.read()\n        regex_include = re.compile(r'`include.+\"')   \n        include_string = re.findall(regex_include, content)\n        for m in range(len(include_string)):\n            file_obj2.write(include_string[m]+'\\n') \n    file_obj2.write('''//This file is generated by scripts for simulation\n//The simulation is for smoking test\n//liuao\n`timescale 1ns/1ps\nmodule tb_top;\n    ''')\n    if module_obj is not None:\n      num = len(groups_ports)   \n#\u4fe1\u53f7\u58f0\u660e\n      file_obj2.write('\\n//Declaration DUT signals')\n      for i in range(num):\n        if groups_ports[i][0] == 'input':\n          file_obj2.write(align3.format(('\\n\\treg'),(groups_ports[i][4]),(groups_ports[i][5]+';')))\n        else:\n          file_obj2.write(align3.format(('\\n\\twire'),(groups_ports[i][4]),(groups_ports[i][5]+';')))\n#\u4f8b\u5316\u6a21\u5757\n      file_obj2.write('\\n\\n//Instance DUT module')\n      file_obj2.write('\\n'+module_obj[0][2]+' u_'+module_obj[0][2]+' (\\n')\n      for i in range(num):\n        if i == num-1:\n          file_obj2.write(align3.format(('\\t.'+groups_ports[i][5]),('('+groups_ports[i][5]+')'),('//'+groups_ports[i][0]+groups_ports[i][4]+'\\n);\\n')))\n        else:\n          file_obj2.write(align3.format(('\\t.'+groups_ports[i][5]),('('+groups_ports[i][5]+'),'),('//'+groups_ports[i][0]+groups_ports[i][4]+'\\n')))\n    #\u8f7d\u5165\u6a21\u677f\n    # with open(directory+'/'+'simulation.temp','r') as file_temp:\n    #   file_obj2.write(file_temp.read())\n    # file_obj2.write('\\nendmodule')\n#\u65f6\u949f\u548c\u590d\u4f4d\u4fe1\u53f7\n      file_obj2.write('''\\n//Generate clock at 1GHz\ninitial begin\n    clk = 0;\n    forever #0.5 clk = ~clk;\nend\n\n//Generate rst_n at 50ns\ninitial begin\n    rst_n = 0;\n    #50;\n    rst_n = 1;\nend''')\n#\u521d\u59cb\u5316\u4fe1\u53f7\n      file_obj2.write('\\n//Signals initialization\\ninitial begin\\n')\n      for i in range(num):\n          if groups_ports[i][0] == 'input'and groups_ports[i][5] !='rst_n' and  groups_ports[i][5] !='clk':\n            file_obj2.write(align4.format(('\\t'+groups_ports[i][5]),('=0;'+'\\n')))\n      file_obj2.write('end\\n')    \n#\u7b80\u5355\u6fc0\u52b1\u4fe1\u53f7     \n      file_obj2.write('\\n//Single Motivation\\nalways @(posedge clk or negedge rst_n)begin\\n\\tif(!rst_n)\\n')\n      for i in range(num):\n          if groups_ports[i][0] == 'input' and groups_ports[i][5] !='rst_n' and  groups_ports[i][5] !='clk':\n            file_obj2.write(align4.format(('\\t\\t'+groups_ports[i][5]),(\"&lt;= {$random}%2;\"+'\\n')))\n      file_obj2.write('\\telse\\n\\t\\t#10;\\n')      \n      for i in range(num):\n          if groups_ports[i][0] == 'input'and groups_ports[i][5] !='rst_n' and  groups_ports[i][5] !='clk':\n            file_obj2.write(align4.format(('\\t\\t'+groups_ports[i][5]),('&lt;= '+groups_ports[i][5] +\"+ 32'h1 ;\"+'\\n') ))\n      file_obj2.write('end\\n')              \n#\u6ce2\u5f62\u6587\u4ef6\u8f93\u51fa     \n      file_obj2.write('''\\n//Generate Verdi fsdb waveform for debug\ninitial begin\n  $display(\"###########SIM HAVE START##############\");\n  $fsdbDumpfile(\"tb_top.fsdb\");\n  $fsdbDumpvars(0,tb_top,\"+mda\");\n  #1000000000000;\n  $display(\"###########SIM HAVE DONE##############\");\n  $finish;\nend\n\nendmodule''')\n  print('tb_top.v have been generated!\\n----TB Generator End-----')\n# ---------------------------------Check--------------------------------------------\nprint('\\n------Check-------') \nwith open(top_path, 'a') as top_group:\n    for i in sig_dir:       \n        if sig_dir[i]['output_num'] &gt; 1:\n            print('Error: ' + i + ' have been multiple derived by ' + str(sig_dir[i]['output_inst']))\n        if sig_dir[i]['input_num'] &gt; 1:\n            print('Info: ' + i + ' have been broadcast to ' + str(sig_dir[i]['input_inst']))  \n\ndef get_include(verilog):\n    obj_include ={}\n    re_include = re.compile(r'`include\\s+\"(.+)\"') \n    re_define =  re.compile(r'`define\\s+(\\w+)\\s+(.+)')\n    with open(verilog,'r') as top:\n        lines = top.readlines()\n        for line in lines:\n            if re.search(re_include, line):\n                include=re.search(re_include, line).group(1)\n                with open(include,'r') as top_define:\n                    includes= top_define.readlines()\n                    for line in includes:\n                        if re.search(re_define, line):\n                            include_key=re.search(re_define, line).group(1)\n                            obj_include[include_key]=re.search(re_define, line).group(2)\n                            print('Info:',include_key,'was defined as',obj_include[include_key])\n    return obj_include\n\n#\u8fd4\u56de\u8f93\u5165\u8f93\u51fa\u7c7b\u578b\uff0c\u7aef\u53e3\u548c\u4fe1\u53f7\u5bbd\u5ea6\uff0c\u7aef\u53e3\u548c\u4fe1\u53f7\u6570\u91cf\uff0c\u4fe1\u53f7\u7c7b\u578b\uff0c\u4e00\u884c\u5185\u5bb9\ndef get_sigs(verilog,obj_include):\n    re_port = re.compile(r'^(input|output|inout)(reg|wire)?(\\[((\\d+|.+)?(:0)?)\\])?(\\w+)(,?)') #\u7aef\u53e3\n    re_wire = re.compile(r'\\.\\w+\\((\\w+)\\),?(\\/\\/(input|output))?(\\w+)?(\\[((\\d+|.+)?(:0)?)\\])?')#.abc(abd)\uff0c //input|output   [31:0]\n    # print(obj_include)\n    with open(verilog,'r') as top:\n        lines = top.readlines()\n        obj_dir  = {}\n        obj_wid  = {}\n        obj_cnt  = {}\n        obj_exp  = {}\n        obj_lin  = {}\n        for line in lines:\n            line = re.sub(r'\\s', '', line)#\u53bb\u6389\u7a7a\u767d\n            line = re.sub(r'^\\/\\/.*$', '', line)#\u53bb\u6389\u4ece\u5934\u5f00\u59cb\u7684\u6ce8\u91ca\n            line = re.sub(r'^(\\w+.*)?\\.\\w+\\(\\d+\\).*', '', line)#\u53bb\u6389\u76f4\u63a5\u8d4b\u503c\u7684\u4fe1\u53f7\n            line = re.sub(r'^.+#.*\\..*', '', line)\n            if re.search(re_port, line):\n                port_dir = re.search(re_port, line).group(1)# input|output|inout\n                port_rag = re.search(re_port, line).group(3)# \\[(\\d+):0\\]                \n                # \u6709\u4f4d\u5bbd\u5219d+1,\u5426\u52191\n                if port_rag:\n                    if re.search(re_port, line).group(5).isdigit():#\\d+\u4f4d\u5bbd\n                        port_wid = re.search(re_port, line).group(4)\n                    elif re.search(re_port, line).group(5).replace('`', '') in obj_include.keys():\n                        port_wid = obj_include[re.search(re_port, line).group(5).replace('`', '')]\n                    else:\n                        port_wid = re.search(re_port, line).group(4)\n                else:\n                    port_wid = 1\n                port_sig = re.search(re_port, line).group(7)#\\w+\u7aef\u53e3\u540d\u5b57\n                if port_sig not in obj_dir:\n                    obj_dir[port_sig] = port_dir\n                    obj_wid[port_sig] = port_wid\n                    obj_cnt[port_sig] = 1\n                    obj_exp[port_sig] = port_dir\n                    obj_lin[port_sig] = line\n                else:\n                    obj_cnt[port_sig] = 1 + obj_cnt[port_sig]\n            elif re.search(re_wire, line):\n                wire_dir = re.search(re_wire, line).group(3)#input|output\n                wire_rag = re.search(re_wire, line).group(5)#\\[(\\d+):0\\]\n                if wire_rag:\n                    if re.search(re_wire, line).group(7).isdigit():#\\d+\u4f4d\u5bbd\n                        wire_wid = re.search(re_wire, line).group(6) \n                    elif re.search(re_wire, line).group(7).replace('`', '') in obj_include.keys():\n                            wire_wid = obj_include[re.search(re_wire, line).group(6).replace('`', '')]\n                    else:\n                        wire_wid = re.search(re_wire, line).group(6)\n                else:\n                    wire_wid = 1\n                wire_sig = re.search(re_wire, line).group(1)#\\w+\u4fe1\u53f7\u540d\n                if wire_sig not in obj_dir:\n                    obj_dir[wire_sig] = wire_dir\n                    obj_wid[wire_sig] = wire_wid\n                    obj_cnt[wire_sig] = 1\n                    obj_exp[wire_sig] = 'wire'\n                    obj_lin[wire_sig] = line\n                else:\n                    obj_cnt[wire_sig] = 1 + obj_cnt[wire_sig]\n                    if wire_wid != obj_wid[wire_sig]:#\u76f8\u8fde\u4fe1\u53f7\u5bbd\u5ea6\u4e0d\u5339\u914d\n                        print('Error: width mismath -&gt; ', obj_lin[wire_sig], wire_sig)\n    return obj_dir, obj_wid, obj_cnt, obj_exp, obj_lin\n\n#  \u672a\u8fde\u63a5\u68c0\u67e5\ndef get_float(obj_wid, obj_exp):\n    for obj in sorted(obj_wid):\n        if obj_cnt[obj] == 1:\n            if 'wire'  in obj_exp[obj]:\n                print('Error: not connected wire -&gt; ', obj_lin[obj], obj_cnt[obj])\n    return True\n#  \u591a\u9a71\u52a8\u68c0\u67e5\ndef get_broadcast(obj_wid, obj_exp):\n    for obj in sorted(obj_wid):\n        if obj_cnt[obj] &gt; 3:\n            print('Info: multiple load wire -&gt; ', obj_lin[obj], obj_cnt[obj])\n    return True\n\nif __name__ == '__main__':\n    obj_include = get_include(top_path)\n    obj_dir, obj_wid, obj_cnt, obj_exp, obj_lin = get_sigs(top_path,obj_include)\n    get_float(obj_wid, obj_exp)\n    get_broadcast(obj_wid, obj_exp)   \n\nprint('------END-------') \n</code></pre>"},{"location":"Architecture/SystemC/","title":"Introduction","text":"<p>learnsystemc</p> <p>https://www.learnsystemc.com/</p> <p>SystemC\u5165\u95e8</p> <p>SystemC\u5165\u95e8</p>"},{"location":"Coprocessor/","title":"Getting Started","text":"<p>\u76ee\u524d\u5b66\u672f\u754c\u5f00\u6e90\u7684RISC-V\u534f\u5904\u7406\u5668\u9879\u76ee\u5305\u62ec\uff1aVicuna\u3001RISC-V2\u3001Hwacha\u3001Ara2\u3002</p> <p>Vicuna</p> <p>https://github.com/vproc/vicuna</p> <p>RISC-V2</p> <p>https://github.com/ic-lab-duth/RISC-V-Vector</p> <p>Hwacha</p> <p>https://github.com/ucb-bar/hwacha</p> <p>Ara2</p> <p>https://github.com/pulp-platform/ara</p>"},{"location":"Coprocessor/Introduction/","title":"Coprocessor Open Source Project","text":"<p>\u76ee\u524d\u5b66\u672f\u754c\u5f00\u6e90\u7684RISC-V\u534f\u5904\u7406\u5668\u9879\u76ee\u5305\u62ec\uff1aVicuna\u3001RISC-V2\u3001Hwacha\u3001Ara2\u3002 \u8fd9\u91cc\u4e3b\u8981\u7814\u7a76Ara2\u9879\u76ee\u3002</p> <p>Vicuna</p> <p>https://github.com/vproc/vicuna</p> <p>RISC-V2</p> <p>https://github.com/ic-lab-duth/RISC-V-Vector</p> <p>Hwacha</p> <p>https://github.com/ucb-bar/hwacha</p> <p>Ara2</p> <p>https://github.com/pulp-platform/ara</p>"},{"location":"Coprocessor/Ara2/CV6/","title":"CV6","text":"<p>\u4e2d\u6587\u53c2\u8003\u8d44\u6599</p> <p>https://zhuanlan.zhihu.com/p/444233485</p>"},{"location":"Coprocessor/Ara2/Dispatcher/","title":"ara_dispatcher","text":"<p>Ara's dispatcher interfaces Ariane's requests with the vector lanes. It also acknowledges instructions back to Ariane, perhaps with a response or an error message.</p>"},{"location":"Coprocessor/Ara2/Dispatcher/#csrs","title":"CSRs","text":"<p>\u5411\u91cf\u6269\u5c55\u4e3a\u57fa\u672c\u7684\u6807\u91cfRISC-V ISA\u6dfb\u52a0\u4e8632\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u548c\u4e03\u4e2a\u975e\u7279\u6743\u63a7\u5236\u4e0e\u72b6\u6001\u5bc4\u5b58\u5668CSR\uff08vstart\u3001vxsat\u3001vxrm\u3001vcsr\u3001vtype\u3001vl\u3001vlenb\uff09</p> \u5730\u5740 \u6743\u9650 \u540d\u79f0 \u63cf\u8ff0 0x008 URW vstart \u5411\u91cf\u8d77\u59cb\u4f4d\u7f6e 0x009 URW vxsat \u5b9a\u70b9\u9971\u548c\u6807\u5fd7 0x00A URW vxrm \u5b9a\u70b9\u820d\u5165\u6a21\u5f0f 0x00F URW vcsr \u5411\u91cf\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 0xC20 URO vl \u5411\u91cf\u4e2a\u6570 0xC21 URO vtype \u5411\u91cf\u6570\u636e\u7c7b\u578b 0xC22 URO vlenb VLEN/8"},{"location":"Coprocessor/Ara2/Dispatcher/#backend-interface","title":"Backend interface","text":"<pre><code>ara_req_t ara_req_d;\n  logic     ara_req_valid_d;\n\n  always_ff @(posedge clk_i or negedge rst_ni) begin\n    if (!rst_ni) begin\n      ara_req_o       &lt;= '0;\n      ara_req_valid_o &lt;= 1'b0;\n    end else begin\n      if (ara_req_ready_i) begin\n        ara_req_o       &lt;= ara_req_d;\n        ara_req_valid_o &lt;= ara_req_valid_d;\n      end\n    end\n  end\n</code></pre>"},{"location":"Coprocessor/Ara2/Dispatcher/#state","title":"State","text":"<p>\u540e\u7aef\uff08backend\uff09\u53ef\u4ee5\u5904\u4e8e\u4e09\u79cd\u72b6\u6001\u4e4b\u4e00\uff1a</p> <ul> <li><code>NORMAL_OPERATION</code>\uff1a\u6b63\u5e38\u6267\u884c\u64cd\u4f5c\u3002</li> <li><code>WAIT_IDLE</code>\uff1a\u7b49\u5f85Ara\u7a7a\u95f2\uff0c\u4ee5\u4fbf\u53d1\u51fa\u65b0\u7684\u64cd\u4f5c\u3002</li> <li><code>RESHUFFLE</code>\uff1a\u6ce8\u5165\u4e00\u4e2a\u91cd\u6392\u7684\u5fae\u64cd\u4f5c\uff08uop\uff09\u3002</li> </ul> <p>\u5904\u7406\u591a\u79cd\u64cd\u4f5c\u6a21\u5f0f\uff0c\u5305\u62ec\u91cd\u65b0\u6392\u5217\u5411\u91cf\u5143\u7d20<code>RESHUFFLE</code>\uff0c\u540c\u65f6\u8ddf\u8e2a\u6bcf\u4e2a\u5411\u91cf\u7684<code>EEW</code>\u548c<code>LMUL</code>\uff0c\u4ee5\u53ca\u5904\u7406\u4e0e\u52a0\u8f7d\u548c\u5b58\u50a8\u64cd\u4f5c\u76f8\u5173\u7684\u7279\u6b8a\u60c5\u51b5<code>ignore_zero_vl_check</code>\u3002\u4e0d\u8fc7\uff0c\u5bf9\u4e8e<code>is_stride_np2</code>\u7684\u5b9e\u73b0\uff0c\u5b58\u5728\u903b\u8f91\u4e0a\u7684\u4e0d\u51c6\u786e\u4e4b\u5904?</p>"},{"location":"Coprocessor/Ara2/Dispatcher/#decoder","title":"Decoder","text":"<p>\u5904\u7406\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u91cd\u6392\u64cd\u4f5c<code>RESHUFFLE</code>\u3002\u4e5f\u5c31\u662f\u6ed1\u52a8\u6307\u4ee4\uff1f\u7531SLDU\u6267\u884c\uff0c\u8fd9\u91cc\u5e94\u8be5\u662f\u63a7\u5236\u72b6\u6001</p> <p>\u5728<code>NORMAL_OPERATION</code>\u4e0b\uff0c\u5bf9\u6307\u4ee4\u8fdb\u884c\u89e3\u7801\uff1a</p>"},{"location":"Coprocessor/Ara2/Dispatcher/#_1","title":"\u914d\u7f6e\u548c\u7b97\u6570\u6307\u4ee4","text":"<ul> <li>OPCFG\uff1a\u66f4\u65b0vtype\u548cvl</li> <li>OPIVV</li> <li>OPIVX</li> <li>OPIVI</li> <li>OPMVV</li> <li>OPMVX</li> <li>OPFVV</li> <li>OPFVF</li> </ul>"},{"location":"Coprocessor/Ara2/Dispatcher/#_2","title":"\u52a0\u8f7d\u6307\u4ee4","text":"<ul> <li>\u5143\u7d20\u4f4d\u5bbd</li> <li>\u5bfb\u5740\u6a21\u5f0f</li> <li>EMUL\u5408\u6cd5\u6027\u5224\u65ad</li> </ul> <pre><code>  // For memory operations: EMUL = LMUL * (EEW / SEW)\n  // EEW is encoded in the instruction\n  ara_req_d.emul = vlmul_e'(csr_vtype_q.vlmul + (ara_req_d.vtype.vsew - csr_vtype_q.vsew));\n  // Exception if EMUL &gt; 8 or &lt; 1/8\n  //\u5de7\u5999\uff0c SEW\u7ffb\u500d\u5c31\u5bf9\u5e94sew\u7684\u7f16\u7801\u52a0\u4e00\n  //lmul \u7ffb\u500d\u5c31\u5bf9\u5e94sew\u7684\u7f16\u7801\u52a0\u4e00\n  //lmul[2]=0,\u8bf4\u660elmul\u5927\u4e8e\u7b49\u4e8e1\n  //lmul[2]=1,\u8bf4\u660elmul\u5c0f\u4e8e\u7b49\u4e8e1\n  unique case ({csr_vtype_q.vlmul[2], ara_req_d.emul[2]})\n    // The new emul is lower than the previous lmul\n    2'b01: begin\n      // But the new eew is greater than vsew EMUL &gt; 8 \n      if (signed'(ara_req_d.vtype.vsew - csr_vtype_q.vsew) &gt; 0) begin\n        illegal_insn_load     = 1'b1;\n      end\n    end\n    // The new emul is greater than the previous lmul\n    2'b10: begin\n      // But the new eew is lower than vsew EMUL  &lt; 1/8\n      if (signed'(ara_req_d.vtype.vsew - csr_vtype_q.vsew) &lt; 0) begin\n        illegal_insn_load     = 1'b1;\n      end\n    end\n    default:;\n  endcase\n</code></pre> <ul> <li>\u52a0\u8f7d\u5168\u90e8\u5bc4\u5b58\u5668</li> </ul>"},{"location":"Coprocessor/Ara2/Dispatcher/#_3","title":"\u5b58\u50a8\u6307\u4ee4","text":"<p>\u540c\u52a0\u8f7d\u6307\u4ee4</p>"},{"location":"Coprocessor/Ara2/Dispatcher/#csr","title":"CSR\u8bfb\u5199","text":"<p>CSR\u8bfb\u5199\u6d89\u53ca\u5230 The RISC-V Instruction Set Manual: Volume I Unprivileged Architecture??</p> <ul> <li>csrrw <code>Atomic Read/Write CSR</code></li> <li>csrrs <code>Atomic Read and Set Bits in CSR</code></li> <li>csrrc <code>Atomic Read and Clear Bits in CSR</code></li> <li>csrrwi</li> <li>csrrsi</li> <li>csrrci</li> </ul>"},{"location":"Coprocessor/Ara2/Introduction/","title":"Introduction","text":"<p>This is the introduction of the Ara2 coprocessor. </p>"},{"location":"Coprocessor/Ara2/Lane/","title":"Lane","text":""},{"location":"Coprocessor/Ara2/Lane/#lanesv","title":"lane.sv","text":"<p>lane\u7684\u9876\u5c42\u6a21\u5757\uff0c\u4f8b\u5316\u4e86lane\u7684\u5404\u4e2a\u5b50\u6a21\u5757\uff0c\u5982lane_sequencer\u3001operand_requester\u3001VRF\u3001Operand queues\u3001Vector Functional Units\u7b49\u3002</p>"},{"location":"Coprocessor/Ara2/Lane/#lane_sequencer","title":"lane_sequencer","text":""},{"location":"Coprocessor/Ara2/Lane/#_1","title":"\u6a21\u5757\u58f0\u660e","text":"<p>lane_sequencer \u6a21\u5757\u901a\u8fc7\u5bfc\u5165\u4e0d\u540c\u7684\u5305\uff08\u5982 ara_pkg \u548c rvv_pkg\uff09\u6765\u83b7\u5f97\u9700\u8981\u7684\u7c7b\u578b\u548c\u5b9a\u4e49\u3002\u5b9a\u4e49\u4e86\u4e00\u4e9b\u53c2\u6570\uff08\u5982 NrLanes\uff09\u548c\u8f93\u5165\u8f93\u51fa\u7aef\u53e3\u3002</p>"},{"location":"Coprocessor/Ara2/Lane/#_2","title":"\u8bf7\u6c42\u6ce8\u518c","text":"<p>\u4f7f\u7528\u4e86\u5bc4\u5b58\u5668\u5904\u7406\u6307\u4ee4\u7684\u8bf7\u6c42\uff0c\u786e\u4fdd\u4e0d\u4f1a\u91cd\u590d\u91c7\u6837\u76f8\u540c\u6307\u4ee4\u3002\u901a\u8fc7 last_id\u5b58\u50a8\u4e0a\u4e00\u4e2a\u6307\u4ee4\u7684ID\u3002</p>"},{"location":"Coprocessor/Ara2/Lane/#_3","title":"\u64cd\u4f5c\u8bf7\u6c42\u547d\u4ee4\u961f\u5217","text":"<p>\u7ef4\u62a4\u6307\u4ee4\u6267\u884c\u6240\u9700\u7684\u64cd\u4f5c\u6570\u8bf7\u6c42\uff0c\u7531\u4e8e\u6307\u4ee4\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u6b64\u9700\u8981\u8c28\u614e\u5904\u7406\u8bf7\u6c42\u3002</p>"},{"location":"Coprocessor/Ara2/Lane/#vfu","title":"VFU\u64cd\u4f5c\u63a7\u5236","text":"<ul> <li>\u5411\u91cf\u6307\u4ee4\u7684\u6267\u884c\u72b6\u6001\u8ddf\u8e2a\uff0c\u901a\u8fc7<code>vinsn_done_d</code>\u548c<code>vinsn_running_d</code>\u6570\u7ec4\u6765\u8ddf\u8e2a\u54ea\u4e9b\u6307\u4ee4\u5df2\u5b8c\u6210\u6216\u6b63\u5728\u6267\u884c\u3002</li> <li>\u5411\u91cf\u529f\u80fd\u5355\u5143\uff08VFU\uff09\u64cd\u4f5c\u7684\u51c6\u5907,<code>vfu_operation_d</code>\u7ed3\u6784\u4f53\u5305\u542b\u4e86\u5373\u5c06\u53d1\u9001\u5230VFU\u7684\u64cd\u4f5c\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u6307\u4ee4ID\u3001\u64cd\u4f5c\u7c7b\u578b\u3001\u5411\u91cf\u63a9\u7801\u7b49\u3002</li> <li>6\u4e2aVFU: VFU_Alu\u3001VFU_MFpu\u3001VFU_LoadUnit\u3001VFU_SlideUnit\u3001VFU_StoreUnit\u3001VFU_MaskUnit</li> <li>9\u4e2a\u64cd\u4f5c\u6570\u961f\u5217\uff1a<code>ara_pkg</code>: AluA, AluB, MulFPUA, MulFPUB, MulFPUC, MaskB, MaskM, StA, SlideAddrGenA</li> <li>\u6761\u4ef6\u6267\u884c\uff1a\u6839\u636eVFU\u7684\u51c6\u5907\u60c5\u51b5\u3001\u64cd\u4f5c\u8bf7\u6c42\u8005\u7684\u72b6\u6001\u4ee5\u53ca\u6307\u4ee4\u7684\u7279\u6027\uff08\u5982vl\u4e3a\u96f6\uff0cmask\u7684vl\u7279\u6b8a<code>vl: (pe_req.vl / NrLanes / 8) &gt;&gt; unsigned(pe_req.vtype.vsew)</code>\uff09\u6765\u51b3\u5b9a\u662f\u5426\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002</li> </ul> <pre><code>    if (pe_req_valid) begin\n      unique case (pe_req.vfu)\n        VFU_Alu : begin\n          pe_req_ready = !(operand_request_valid_o[AluA] ||\n            operand_request_valid_o[AluB ] ||\n            operand_request_valid_o[MaskM]);\n        end\n        VFU_MFpu : begin\n          pe_req_ready = !(operand_request_valid_o[MulFPUA] ||\n            operand_request_valid_o[MulFPUB] ||\n            operand_request_valid_o[MulFPUC] ||\n            operand_request_valid_o[MaskM]);\n        end\n        VFU_LoadUnit : pe_req_ready = !(operand_request_valid_o[MaskM] ||\n            (pe_req_i.op == VLXE &amp;&amp; operand_request_valid_o[SlideAddrGenA]));\n\n        VFU_SlideUnit: pe_req_ready = !(operand_request_valid_o[SlideAddrGenA]);\n\n        VFU_StoreUnit: begin\n          pe_req_ready = !(operand_request_valid_o[StA] ||\n            operand_request_valid_o[MaskM] ||\n            (pe_req_i.op == VSXE &amp;&amp; operand_request_valid_o[SlideAddrGenA]));\n        end\n        VFU_MaskUnit : begin\n          pe_req_ready = !(operand_request_valid_o[AluA] ||\n            operand_request_valid_o [AluB] ||\n            operand_request_valid_o [MulFPUA] ||\n            operand_request_valid_o [MulFPUB] ||\n            operand_request_valid_o[MaskB] ||\n            operand_request_valid_o[MaskM]);\n        end\n        VFU_None : begin\n          pe_req_ready = !(operand_request_valid_o[MaskB]);\n        end\n        default:;\n      endcase\n    end\n</code></pre> <ul> <li>vstart/vl</li> </ul> <pre><code>\u00a0 for element index x\n\u00a0 prestart(x) = (0 &lt;= x &lt; vstart)\n\u00a0 body(x) = (vstart &lt;= x &lt; vl)\n\u00a0 tail(x) = (vl &lt;= x &lt; max(VLMAX,VLEN/SEW))\n\u00a0 mask(x) = unmasked || v0.mask[x] == 1\n\u00a0 active(x) = body(x) &amp;&amp; mask(x)\n\u00a0 inactive(x) = body(x) &amp;&amp; !mask(x)\n</code></pre>"},{"location":"Coprocessor/Ara2/Lane/#_4","title":"\u5904\u7406\u6307\u4ee4","text":"<p>always_comb \u548c always_ff \u5757\u7528\u4e8e\u5b9e\u73b0\u7ec4\u5408\u903b\u8f91\u548c\u65f6\u5e8f\u903b\u8f91\uff0c\u5904\u7406\u8bf7\u6c42\u7684\u6709\u6548\u6027\u3001\u6307\u4ee4\u7684\u8c03\u5ea6\u548c\u6267\u884c\u3002 \u6839\u636e\u6307\u4ee4\u7684\u7c7b\u578b\uff08VFU\u7c7b\u578b\uff09\uff0c\u505a\u51fa\u4e0d\u540c\u7684\u64cd\u4f5c\u6570\u8bf7\u6c42\u3002</p>"},{"location":"Coprocessor/Ara2/Lane/#vfu_1","title":"VFU\u64cd\u4f5c\u548c\u8bf7\u6c42\u7684\u5177\u4f53\u5b9e\u73b0","text":"<p>\u6839\u636e\u64cd\u4f5c\u7684\u4e0d\u540c\uff08\u5982 ALU\u3001MFPU\u3001Load\u3001Store\uff09\uff0c\u8bbe\u7f6e\u76f8\u5e94\u7684\u64cd\u4f5c\u6570\u8bf7\u6c42\uff0c\u786e\u4fdd\u6b63\u786e\u4f20\u9012\u4fe1\u606f\u3002</p>"},{"location":"Coprocessor/Ara2/Lane/#operand_requester","title":"operand_requester","text":""},{"location":"Coprocessor/Ara2/Lane/#vrf","title":"VRF","text":""},{"location":"Coprocessor/Ara2/Lane/#operand-queues","title":"Operand queues","text":""},{"location":"Coprocessor/Ara2/Lane/#vector-functional-units","title":"Vector Functional Units","text":""},{"location":"Coprocessor/Ara2/Physical/","title":"\u540e\u7aef","text":""},{"location":"Coprocessor/Ara2/Physical/#tt-freq","title":"TT Freq","text":"<ul> <li>2\u30014\u30018\u8f66\u9053\u5747\u4e3a1.35 GHz</li> <li>16\u8f66\u9053\uff1a1.08 GHz\uff08\u4e0b\u964d0.8x\uff09</li> <li>16\u8f66\u9053\uff08\u65e0\u5b9a\u70b9\uff09\uff1a1.26 GHz\uff0816\u8f66\u9053*\uff0c\u4e0b\u964d0.9x\uff09</li> </ul>"},{"location":"Coprocessor/Ara2/Physical/#diearea","title":"\u82af\u7247\u9762\u79ef\uff08DieArea\uff09","text":"<ul> <li>2\u8f66\u9053\uff1a0.59 mm\u00b2</li> <li>4\u8f66\u9053\uff1a0.95 mm\u00b2\uff08\u589e\u957f1.6x\uff09</li> <li>8\u8f66\u9053\uff1a1.88 mm\u00b2\uff08\u589e\u957f2.0x\uff09</li> <li>16\u8f66\u9053\uff1a4.47 mm\u00b2\uff08\u589e\u957f2.4x\uff09</li> <li>16\u8f66\u9053\uff08\u65e0\u5b9a\u70b9\uff09\uff1a4.47 mm\u00b2\uff08\u589e\u957f2.4x\uff09</li> </ul> <p>\u5206\u6790\uff1a\u82af\u7247\u9762\u79ef\u968f\u7740\u8f66\u9053\u6570\u7684\u589e\u52a0\u800c\u663e\u8457\u589e\u52a0\uff0c\u5448\u73b0\u51fa\u8fd1\u4f3c\u7ebf\u6027\u7684\u589e\u957f\u8d8b\u52bf\u3002</p>"},{"location":"Coprocessor/Ara2/Physical/#macro-areacell-area","title":"\u5b8f\u5355\u5143\u533a\u57df\uff08Macro Area\uff09\u548c\u7ec6\u80de\u533a\u57df\uff08Cell Area\uff09","text":"<ul> <li>\u5b8f\u5355\u5143\u533a\u57dfkGE\uff08kilogate\uff09\uff1a\u968f\u7740\u8f66\u9053\u6570\u7684\u589e\u52a0\uff0ckGE\u9010\u6e10\u589e\u52a0\uff0c\u4f46\u589e\u957f\u5e45\u5ea6\u9010\u6e10\u653e\u7f13\u3002</li> <li> <p>\u7ec6\u80de\u533a\u57dfkGE\uff08kilogate\uff09\uff1a\u540c\u6837\u968f\u7740\u8f66\u9053\u6570\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u4e14\u589e\u957f\u5e45\u5ea6\u76f8\u5bf9\u8f83\u5927\u3002</p> </li> <li> <p>2\u8f66\u9053\uff1a2291</p> </li> <li>4\u8f66\u9053\uff1a3688 (1.6\u00d7)</li> <li>8\u8f66\u9053\uff1a6768 (1.8\u00d7)</li> <li>16\u8f66\u9053\uff1a14773 (2.2\u00d7)</li> <li>16\u8f66\u9053\uff08\u65e0\u5b9a\u70b9\uff09\uff1a12864 (1.9\u00d7)</li> </ul>"},{"location":"Coprocessor/Ara2/Physical/#en-eff","title":"\u6bcf\u74e6\u7279\u6d6e\u70b9\u8fd0\u7b97\u80fd\u529b\uff08En. Eff.*\uff09","text":"<ul> <li>2\u8f66\u9053\uff1a34.1 FLOPSDp/W</li> <li>4\u8f66\u9053\uff1a37.8 FLOPSDp/W\uff08\u63d0\u53471.1x\uff09</li> <li>8\u8f66\u9053\uff1a35.7 FLOPSDp/W\uff08\u7565\u4f4e\u4e8e4\u8f66\u9053\uff0c\u63d0\u53470.9x\uff09</li> <li>16\u8f66\u9053\uff1a\u65e0</li> <li>16\u8f66\u9053\uff08\u65e0\u5b9a\u70b9\uff09\uff1a30.3 FLOPSDp/W</li> </ul> <p>\u5206\u6790\uff1a\u6bcf\u74e6\u7279\u6d6e\u70b9\u8fd0\u7b97\u80fd\u529b\u57284\u8f66\u9053\u65f6\u8fbe\u5230\u6700\u9ad8\uff0c\u968f\u540e\u57288\u8f66\u9053\u65f6\u7565\u6709\u4e0b\u964d\uff0c\u800c\u572816\u8f66\u9053\u65f6\u5219\u65e0\u6cd5\u652f\u6301\u56fa\u5b9a\u70b9\u8ba1\u7b97\u3002</p>"},{"location":"Coprocessor/Ara2/Physical/#4-lane","title":"\u6027\u80fd\u3001\u529f\u7387\u548c\u80fd\u6548(4 lane)","text":"<ul> <li>\u6027\u80fd\uff1a\u6700\u9ad883.5 GOPS</li> <li>\u529f\u7387\uff1a\u5e73\u5747200 mW\u5de6\u53f3\uff0c\u5cf0\u503c272 mW</li> <li>\u80fd\u6548\uff1a\u6700\u9ad8376 GOPS/W</li> </ul>"},{"location":"Coprocessor/Ara2/Sequencer/","title":"Sequencer","text":"<p>\u4e3b\u8981\u529f\u80fd\u662f\u7ba1\u7406\u548c\u63a7\u5236\u5e76\u884c\u5411\u91cf\u8ba1\u7b97\u4e2d\u7684\u6307\u4ee4\u6267\u884c\u987a\u5e8f\u548c\u4f9d\u8d56\u5173\u7cfb\uff0c\u786e\u4fdd\u4e0eAra\u8ba1\u7b97\u67b6\u6784\u4e2d\u5404\u529f\u80fd\u5355\u5143\u7684\u63a5\u53e3\u534f\u8c03\u5de5\u4f5c\u3002\u5b83\u901a\u8fc7\u8bb0\u5f55\u548c\u5206\u6790\u6307\u4ee4\u72b6\u6001\u3001\u51b2\u7a81\u60c5\u51b5\uff0c\u4f18\u5316\u8ba1\u7b97\u8d44\u6e90\u7684\u5206\u914d\u548c\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002\u540c\u65f6\uff0c\u6a21\u5757\u5b9e\u73b0\u4e86\u5bf9\u672a\u5b8c\u6210\u6307\u4ee4\u7684\u7b49\u5f85\u4e0e\u5904\u7406\u673a\u5236\uff0c\u4ee5\u786e\u4fdd\u5728\u590d\u6742\u6570\u636e\u8def\u5f84\u4e2d\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"Coprocessor/Ara2/Sequencer/#_1","title":"\u5173\u952e\u5b9a\u4e49","text":"<p>VFU\uff1a\u5411\u91cf\u8fd0\u7b97\u5355\u5143</p> <pre><code>function automatic vfu_e vfu(ara_op_e op = VADD);\n  unique case (op) inside\n    [VADD:VWREDSUM]      : vfu = VFU_Alu;\n    [VMUL:VFWREDOSUM]    : vfu = VFU_MFpu;\n    [VMFEQ:VMXNOR]       : vfu = VFU_MaskUnit;\n    [VLE:VLXE]           : vfu = VFU_LoadUnit;\n    [VSE:VSXE]           : vfu = VFU_StoreUnit;\n    [VSLIDEUP:VSLIDEDOWN]: vfu = VFU_SlideUnit;\n    [VMVXS:VFMVFS]       : vfu = VFU_None;\n    default              : vfu = VFU_None;\n  endcase\nendfunction : vfu\n</code></pre> <p>PE\uff1aAra has NrLanes + 3 processing elements: each one of the lanes, the vector load unit, the vector store unit, the slide unit, and the mask unit</p>"},{"location":"Coprocessor/Ara2/Sequencer/#_2","title":"\u8fd0\u884c\u4e2d\u5411\u91cf\u6307\u4ee4","text":"<ul> <li>\u8fd0\u884c\u4e2d\u7684\u5411\u91cf\u6307\u4ee4\u7ba1\u7406\uff1a\u7ef4\u62a4\u4e00\u4e2a\u77e9\u9635pe_vinsn_running_d\u548cpe_vinsn_running_q\uff0c\u8868\u793a\u6bcf\u4e2a\u5904\u7406\u5355\u5143\u4e0a\u8fd0\u884c\u7684\u5411\u91cf\u6307\u4ee4\u3002</li> </ul> \u8f6c\u7f6e\u524d\u8f6c\u7f6e\u540e <pre><code>logic [NrPEs-1:0][NrVInsn-1:0] pe_vinsn_running_d, pe_vinsn_running_q;\n/*\n    INS0  INS1  INS2  ...  INSn-1\nPE0  \nPE1\nPE2\nPE3\nPE4\nPE5\nPE6\nPE7\nPE8\n...\n*/\n</code></pre> <pre><code>logic [NrVInsn-1:0][NrPEs-1:0] pe_vinsn_running_q_trns;\n/*\n    PE0  PE1  PE2  ...  PEn-1\nINS0  \nINS1\nINS2\nINS3\nINS4\nINS5\nINS6\nINS7\nINS8\n...\nPEn-1\n*/\n</code></pre> <ul> <li>\u67e5\u627e\u4e0b\u4e00\u4e2aID\uff1a\u4f7f\u7528<code>lzc\u6a21\u5757</code>\u67e5\u627e\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u6307\u4ee4ID\u3002</li> <li>\u66f4\u65b0\u8fd0\u884c\u4e2d\u7684\u5411\u91cf\u6307\u4ee4\uff1a\u5728\u65f6\u949f\u4e0a\u5347\u6cbf\u66f4\u65b0\u8fd0\u884c\u4e2d\u7684\u5411\u91cf\u6307\u4ee4\u72b6\u6001\u3002</li> <li>\u901a\u9053\u540c\u6b65\u505c\u6ede\uff1a\u68c0\u6d4b\u5e76\u5904\u7406\u901a\u9053\u4e0d\u540c\u6b65\u7684\u60c5\u51b5\u3002</li> </ul> <pre><code>  for (genvar i = 0; i &lt; NrVInsn; i++) begin : gen_stall_lane_desynch\n    assign stall_lanes_desynch_vec[i] = ~pe_vinsn_running_q[0][i] &amp; |pe_vinsn_running_q_trns[i][NrLanes-1:1];\n  end\n  assign stall_lanes_desynch = |stall_lanes_desynch_vec;\n //\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u8f66\u9053\uff08\u9664\u4e86\u8f66\u90530\uff09\u8fd8\u5728\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u5219\u7ed3\u679c\u4e3a1\u3002\n //\u53ea\u6709\u5f53\u8f66\u90530\u5df2\u5b8c\u6210\u8be5\u64cd\u4f5c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u5176\u4ed6\u8f66\u9053\u8fd8\u5728\u6267\u884c\u65f6\uff0c\u7ed3\u679c\u624d\u4e3a1\uff0c\u8868\u793a\u8f66\u9053\u95f4\u51fa\u73b0\u4e86\u4e0d\u540c\u6b65\u3002\n</code></pre>"},{"location":"Coprocessor/Ara2/Sequencer/#_3","title":"\u5168\u5c40\u51b2\u7a81\u8868","text":"<p>\u5982\u679cInsn N\u5728\u67d0\u4e00\u5217\uff08\u5047\u8bbe\u4e3aInsn M\u5217\uff09\u7684\u503c\u4e3a1\uff0c\u5219\u610f\u5473\u7740Insn N\u4f9d\u8d56\u4e8eInsn M\u7684\u7ed3\u679c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cInsn N\u4e0d\u80fd\u5728Insn M\u6267\u884c\u5b8c\u6210\u5e76\u5f97\u5230\u7ed3\u679c\u4e4b\u524d\u5f00\u59cb\u6267\u884c\u3002</p> <p>\u8fd9\u91cc\u7528\u5230\u4e86SV\u7684\u5408\u5e76\u6570\u7ec4\uff0c\u65e2\u53ef\u4ee5\u88ab\u5f53\u505a\u6570\u7ec4\u4e5f\u53ef\u4ee5\u5f53\u6210\u5355\u72ec\u6570\u636e\uff0c<code>logic[NrVInsn-1:0][NrVInsn-1:0] global_hazard_table_d;</code>\u3002</p> <pre><code>  // Global table of the dependencies between instructions\n  //\n  // The row at index N is the hazard vector belonging to instruction N\n  // It indicates all the instruction on which instruction N depends\n  //\n  // For example, with the following table, instruction 3 depends on\n  // instruction 0 and instruction 2\n  //\n  // +--------+--------+--------+--------+--------+\n  // |   -    | Insn 0 | Insn 1 | Insn 2 | Insn 3 |\n  // +--------+--------+--------+--------+--------+\n  // | Insn 0 |      0 |      0 |      0 |      0 |\n  // | Insn 1 |      1 |      0 |      0 |      0 |\n  // | Insn 2 |      0 |      0 |      0 |      0 |\n  // | Insn 3 |      1 |      0 |      1 |      0 |\n  // +--------+--------+--------+--------+--------+\n  //\n  // This information is forwarded to the operand requesters of each lane\n</code></pre>"},{"location":"Coprocessor/Ara2/Sequencer/#_4","title":"\u5f00\u59cb\u548c\u7ed3\u675f\u901a\u9053","text":"<p>\u6839\u636e\u5411\u91cf\u6307\u4ee4\u7684\u8d77\u59cb\u4f4d\u7f6e\u548c\u957f\u5ea6\uff0c\u4ee5\u53ca\u5411\u91cf\u5143\u7d20\u5bbd\u5ea6\uff0c\u8ba1\u7b97\u51fa\u8d77\u59cb\u8f66\u9053\u548c\u7ed3\u675f\u8f66\u9053\u7684\u7d22\u5f15\u3002</p> <p>\u8ba1\u7b97\u5355\u6b21\u83b7\u53d6\u7684\u5143\u7d20\u6570\u91cf\uff1a\u6839\u636e\u5411\u91cf\u5143\u7d20\u5bbd\u5ea6\uff08vsew\uff09\u548c\u8f66\u9053\u6570\u91cf\uff08NrLanes\uff09\u8ba1\u7b97\u51fa\u5355\u6b21\u83b7\u53d6\u7684\u5143\u7d20\u6570\u91cf\u3002</p> <p>\u8ba1\u7b97\u8d77\u59cb\u8f66\u9053\u7d22\u5f15\uff1a\u901a\u8fc7vstart\u7684\u4f59\u6570\u786e\u5b9a\u8d77\u59cb\u8f66\u9053\u7684\u7d22\u5f15\u3002</p> <p>\u8ba1\u7b97\u7ed3\u675f\u8f66\u9053\u7d22\u5f15\uff1a\u901a\u8fc7vl\u7684\u4f59\u6570\u786e\u5b9a\u7ed3\u675f\u8f66\u9053\u7684\u7d22\u5f15\uff0c\u5e76\u51cf1\u4ee5\u9002\u5e94\u7d22\u5f15\u4ece0\u5f00\u59cb\u7684\u7279\u6027\u3002</p> <pre><code>    unique case (pe_req_d.vtype.vsew)\n      EW8: begin\n        start_lane = &amp;pe_req_d.vstart[$clog2(8*NrLanes)-1:$clog2(NrLanes)]\n                   ? pe_req_d.vstart[$clog2(NrLanes)-1:0]\n                   : '0;//&amp; \u64cd\u4f5c\u7b26\u7528\u4e8e\u68c0\u67e5\u9ad8\u4f4d\u662f\u5426\u5168\u4e3a1\n        buf8       = pe_req_d.vl[$clog2(8*NrLanes)-1:0] - 1;\n        end_lane   = !(|buf8[$clog2(8*NrLanes)-1:$clog2(NrLanes)])//!(|buf) \u7528\u4e8e\u68c0\u67e5\u7f13\u51b2\u533a\u662f\u5426\u5168\u4e3a0\n                   ? pe_req_d.vl[$clog2(NrLanes)-1:0] - 1\n                   : '1;\n      end\n      EW16: begin\n        start_lane = &amp;pe_req_d.vstart[$clog2(4*NrLanes)-1:$clog2(NrLanes)]\n                   ? pe_req_d.vstart[$clog2(NrLanes)-1:0]\n                   : '0;\n        buf16      = pe_req_d.vl[$clog2(4*NrLanes)-1:0] - 1;\n        end_lane   = !(|buf16[$clog2(4*NrLanes)-1:$clog2(NrLanes)])\n                   ? pe_req_d.vl[$clog2(NrLanes)-1:0] - 1\n                   : '1;\n      end\n      EW32: begin\n        start_lane = &amp;pe_req_d.vstart[$clog2(2*NrLanes)-1:$clog2(NrLanes)]\n                   ? pe_req_d.vstart[$clog2(NrLanes)-1:0]\n                   : '0;\n        buf32      = pe_req_d.vl[$clog2(2*NrLanes)-1:0] - 1;\n        end_lane   = !(|buf32[$clog2(2*NrLanes)-1:$clog2(NrLanes)])\n                   ? pe_req_d.vl[$clog2(NrLanes)-1:0] - 1\n                   : '1;\n      end\n      // EW64, default\n      default: begin\n        start_lane = pe_req_d.vstart[$clog2(NrLanes)-1:0];\n        end_lane   = pe_req_d.vl[$clog2(NrLanes)-1:0] - 1;\n      end\n    endcase\n  end\n</code></pre> <p>VRF\u5e03\u5c40\uff08 VLEN=4096 and 4 lanes\uff09</p> <p>sew=64\u65f6\uff0cVRF\u5e03\u5c40\u5982\u4e0b\uff1a </p> <p>sew=32\u65f6\uff0cVRF\u5e03\u5c40\u5982\u4e0b </p> <p>\u7591\u95ee\uff1f<code>end_lane</code>\u7684\u8ba1\u7b97</p> <pre><code>      // EW64, default\n      default: begin\n        start_lane = pe_req_d.vstart[$clog2(NrLanes)-1:0];//vstart % NrLanes\n        end_lane   = pe_req_d.vl[$clog2(NrLanes)-1:0] - 1;//(vl % NrLanes) - 1 \u4e0d\u7528\u52a0start_lane\u5417\uff1f\n      end\n    endcase\n</code></pre> <p> VRF</p> <p>https://10x-engineers.github.io/ara/lane.html</p>"},{"location":"Coprocessor/Ara2/Sequencer/#_5","title":"\u6307\u4ee4\u8c03\u5ea6","text":"<ul> <li>\u8fd4\u56de\u6bcf\u4e2a\u6307\u4ee4\u5bf9\u5e94\u7684VFU<code>target_vfus</code></li> </ul> <pre><code>// This function determines all the targets VFUs of this operation and returns a vector.\n  // Asserted bits correspond to target VFUs. \n  // Unluckily, Verilator does not support assignment patterns with enum types on the indices\n\n  /*\n  hardware/include/ara_pkg.sv\n\n  localparam int unsigned NrVFUs = 7;\n  typedef enum logic [$clog2(NrVFUs)-1:0] {\n    VFU_Alu, VFU_MFpu, VFU_SlideUnit, VFU_MaskUnit, VFU_LoadUnit, VFU_StoreUnit, VFU_None\n  } vfu_e;\n\n  */\n  function automatic logic [NrVFUs-1:0] target_vfus(ara_op_e op);\n    target_vfus = '0;\n    unique case (op) inside\n      [VADD:VFMVSF]:\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_Alu) target_vfus[i] = 1'b1;//VFU_Alu\u662f\u679a\u4e3e\u7c7b\u578b\uff0c\u88ab\u5f53\u4f5cint\u7c7b\u578b\u5b58\u50a8\uff0c\u9ed8\u8ba4\u4ece0\u5f00\u59cb\n\n      [VREDSUM:VWREDSUM]://\u6574\u6570\u5f52\u7ea6\u64cd\u4f5c\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_Alu || i == VFU_SlideUnit) target_vfus[i] = 1'b1;\n          //\u66f4\u76f4\u89c2\u7684\u5199\u6cd5\u662ftarget_vfus[VFU_Alut] = 1'b1;target_vfus[VFU_SlideUnit] = 1'b1\n          //Verilator does not support assignment patterns with enum types on the indices\u6240\u4ee5\u4f7f\u7528\u53e6\u5916\u7684\u65b9\u6cd5\n      [VFREDUSUM:VFWREDOSUM]://\u6d6e\u70b9\u5f52\u7ea6\u64cd\u4f5c\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_MFpu || i == VFU_SlideUnit) target_vfus[i] = 1'b1;\n      [VMUL:VFCVTFF]:\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_MFpu) target_vfus[i] = 1'b1;\n      [VMSEQ:VMXNOR]:\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_Alu || i == VFU_MaskUnit) target_vfus[i] = 1'b1;\n      [VMFEQ:VMFGE]://\u6d6e\u70b9\u6bd4\u8f83\u64cd\u4f5c\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_MFpu || i == VFU_MaskUnit) target_vfus[i] = 1'b1;\n      [VLE:VLXE]:\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_LoadUnit) target_vfus[i] = 1'b1;\n      [VSE:VSXE]:\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_StoreUnit) target_vfus[i] = 1'b1;\n      [VSLIDEUP:VSLIDEDOWN]:\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_SlideUnit) target_vfus[i] = 1'b1;\n      [VMVXS:VFMVFS]:\n        for (int i = 0; i &lt; NrVFUs; i++)\n          if (i == VFU_None) target_vfus[i] = 1'b1;\n    endcase\n  endfunction : target_vfus\n</code></pre> <ul> <li>\u5b9a\u4e49VFU\u7684\u6307\u4ee4\u961f\u5217<code>InsnQueueDepth</code></li> </ul> <pre><code>  localparam int unsigned InsnQueueDepth [NrVFUs] = '{\n    ValuInsnQueueDepth,\n    MfpuInsnQueueDepth,\n    SlduInsnQueueDepth,\n    MaskuInsnQueueDepth,\n    VlduInsnQueueDepth,\n    VstuInsnQueueDepth,\n    NoneInsnQueueDepth\n  };\n</code></pre> <ul> <li>\u66f4\u65b0\u8bfb\u5199\u5217\u8868</li> </ul> <p>\u5229\u7528<code>write_list</code>\u548c<code>read_list</code>\u8fdb\u884c\u5192\u9669\u68c0\u67e5 <code>RAW</code>\u3001<code>WAR</code>\u3001<code>WAW</code></p> <pre><code>    // RAW \u5982\u679c\u7528\u5230\u4e86\u6e90\u64cd\u4f5c\u6570\u5219\u68c0\u67e5\u662f\u5426\u6b63\u5728\u88ab\u5199\u5165\uff0c\u5982\u679c\u6b63\u5728\u88ab\u5199\u5165\u5219\u8bbe\u7f6ehazard\u4f4d\n    // WAR \u5982\u679c\u7528\u5230\u4e86\u76ee\u7684\u64cd\u4f5c\u6570\u5219\u68c0\u67e5\u662f\u5426\u6b63\u5728\u88ab\u8bfb\uff0c\u5982\u679c\u6b63\u5728\u88ab\u8bfb\u5219\u8bbe\u7f6ehazard\u4f4d\n    if (ara_req_i.use_vs1) pe_req_d.hazard_vs1[write_list_d[ara_req_i.vs1].vid] |=\n      write_list_d[ara_req_i.vs1].valid;\n    if (ara_req_i.use_vs2) pe_req_d.hazard_vs2[write_list_d[ara_req_i.vs2].vid] |=\n      write_list_d[ara_req_i.vs2].valid;\n    if (!ara_req_i.vm) pe_req_d.hazard_vm[write_list_d[VMASK].vid] |=\n      write_list_d[VMASK].valid;\n    // WAR \u5982\u679c\u76ee\u6807\u64cd\u4f5c\u6570vd\u6b63\u5728\u88ab\u8bfb\u53d6\uff0c\u5219\u4e0d\u8bba\u662f\u54ea\u4e2a\u6e90\u64cd\u4f5c\u6570\u6216\u5411\u91cf\u63a9\u7801\uff0c\u90fd\u53ef\u80fd\u53d7\u5230\u5f71\u54cd\uff0c\u56e0\u6b64\u90fd\u8bbe\u7f6e\u5bf9\u5e94\u7684\u5192\u9669\u4f4d\u3002\n    if (ara_req_i.use_vd) begin\n      pe_req_d.hazard_vs1[read_list_d[ara_req_i.vd].vid] |= read_list_d[ara_req_i.vd].valid;\n      pe_req_d.hazard_vs2[read_list_d[ara_req_i.vd].vid] |= read_list_d[ara_req_i.vd].valid;\n      pe_req_d.hazard_vm[read_list_d[ara_req_i.vd].vid] |= read_list_d[ara_req_i.vd].valid;\n    end\n    // WAW\n    if (ara_req_i.use_vd) pe_req_d.hazard_vd[write_list_d[ara_req_i.vd].vid] |=\n      write_list_d[ara_req_i.vd].valid;\n</code></pre> <ul> <li>\u53d1\u5c04 \u7ba1\u7406\u5192\u9669\u68c0\u6d4b\u548c\u6307\u4ee4\u51c6\u5907\u8fc7\u7a0b\uff0c\u786e\u4fdd\u4e86\u5411\u91cf\u6307\u4ee4\u5728\u5411\u91cf\u5904\u7406\u5668\u4e2d\u7684\u6b63\u786e\u548c\u9ad8\u6548\u6267\u884c\u3002\u901a\u8fc7\u68c0\u67e5\u5192\u9669\u4f4d\u548c\u6307\u4ee4\u7684\u7279\u5b9a\u6761\u4ef6\uff0c\u5b83\u51b3\u5b9a\u4e86\u54ea\u4e9b\u6307\u4ee4\u53ef\u4ee5\u5b89\u5168\u5730\u53d1\u5e03\u7ed9\u6267\u884c\u5355\u5143\uff0c\u54ea\u4e9b\u9700\u8981\u7b49\u5f85\uff0c\u4ee5\u53ca\u5982\u4f55\u66f4\u65b0\u6267\u884c\u72b6\u6001\u8868\u548c\u8bfb\u5199\u5217\u8868</li> <li>\u66f4\u65b0\u5168\u5c40\u5192\u9669\u8868</li> </ul>"},{"location":"Coprocessor/Ara2/Sequencer/#_6","title":"\u6307\u4ee4\u961f\u5217\u548c\u8ba1\u6570\u5668","text":"<p>\u8d1f\u8d23\u5904\u7406\u6307\u4ee4\u7684\u63a5\u6536\u3001\u6392\u961f\u548c\u53d1\u5c04\uff0c\u786e\u4fdd\u529f\u80fd\u5355\u5143\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u56e0\u4e3a\u8d44\u6e90\u7684\u7ade\u4e89\u800c\u53d1\u751f\u51b2\u7a81\u3002\u5b83\u8bbe\u8ba1\u4e86\u591a\u4e2a\u72b6\u6001\u5bc4\u5b58\u5668\u548c\u8ba1\u6570\u5668\u6765\u8ddf\u8e2a\u5404\u4e2a VFU \u7684\u6307\u4ee4\u8fdb\u5ea6\uff0c\u540c\u65f6\u5f15\u5165\u4e86\u4f18\u5148\u7ea7\u548c\u201c\u9ec4\u91d1\u7968\u201d\u673a\u5236\u6765\u63d0\u9ad8\u6307\u4ee4\u5904\u7406\u7684\u7075\u6d3b\u6027\u548c\u6548\u7387\u3002\u6574\u4f53\u76ee\u6807\u662f\u5b9e\u73b0\u9ad8\u6548\u7684\u6307\u4ee4\u8c03\u5ea6\uff0c\u4ee5\u5e94\u5bf9\u5e76\u884c\u5904\u7406\u7684\u590d\u6742\u6027\u3002</p>"},{"location":"Coprocessor/Ara2/Top/","title":"TOP","text":""},{"location":"Coprocessor/Ara2/Top/#ara_socsv","title":"ara_soc.sv","text":"<p>Ara's SoC, containing CVA6, Ara, and a L2 cache.</p> <p>ara_soc\u6a21\u5757\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53c2\u6570\u5316\u7684SoC\u7ec4\u4ef6\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5305\u542bCVA6\u3001Ara\u548cL2\u7f13\u5b58\u7684SoC\uff08\u7247\u4e0a\u7cfb\u7edf\uff09\u3002\u6a21\u5757\u901a\u8fc7AXI\u63a5\u53e3\u4e0e\u5916\u90e8\u8fdb\u884c\u901a\u4fe1\uff0c\u5e76\u652f\u6301\u5411\u91cf\u5904\u7406\u3001\u6d6e\u70b9\u8fd0\u7b97\u548c\u5b9a\u70b9\u8fd0\u7b97\u3002\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86UART APB\u63a5\u53e3\u7528\u4e8e\u4e32\u884c\u901a\u4fe1\uff0c\u5e76\u5305\u542b\u626b\u63cf\u94fe\u63a5\u53e3\u7528\u4e8e\u6d4b\u8bd5\u3002</p>"},{"location":"Coprocessor/Ara2/Top/#_1","title":"\u6a21\u5757\u58f0\u660e\u4e0e\u53c2\u6570\u5b9a\u4e49","text":"<ul> <li>\u6a21\u5757\u58f0\u660e\uff1a\u5b9a\u4e49\u4e86ara_soc\u6a21\u5757\uff0c\u5bfc\u5165axi_pkg\u548cara_pkg\u5305\u3002</li> <li>\u53c2\u6570\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u5305\u62ec\u5411\u91cf\u901a\u9053\u6570\u3001VLEN\u3001\u6d6e\u70b9\u652f\u6301\u3001\u5b9a\u70b9\u652f\u6301\u3001AXI\u63a5\u53e3\u53c2\u6570\u7b49\u3002</li> <li>\u7aef\u53e3\u58f0\u660e\uff1a\u5305\u62ec\u65f6\u949f\u3001\u590d\u4f4d\u3001\u626b\u63cf\u94fe\u3001UART APB\u63a5\u53e3\u7b49\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#_2","title":"\u5185\u5b58\u533a\u57df","text":"<ul> <li>AXI\u4e3b\u4ece\u7aef\u53e3\u6570\uff1a\u5b9a\u4e49\u4e86AXI\u4e3b\u4ece\u7aef\u53e3\u6570\u3002  </li> <li>\u5185\u5b58\u6620\u5c04\uff1a\u5b9a\u4e49\u4e86\u5404\u4e2a\u5185\u5b58\u533a\u57df\u7684\u957f\u5ea6\u548c\u57fa\u5730\u5740\uff0c\u4ee5\u4fbf\u8fdb\u884c\u5185\u5b58\u6620\u5c04\u548c\u5730\u5740\u5206\u914d\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#axi","title":"AXI\u603b\u7ebf","text":"<ul> <li>AXI\u6570\u636e\u5bbd\u5ea6\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86\u7a84\u548c\u5bbd\u6570\u636e\u5bbd\u5ea6\u3002  </li> <li>AXI ID\u5bbd\u5ea6\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86Soc\u548cCore\u7684ID\u5bbd\u5ea6\u3002  </li> <li>AXI\u7c7b\u578b\u5b9a\u4e49\uff1a\u4f7f\u7528\u5b8f\u5b9a\u4e49\u4e86\u591a\u79cdAXI\u7c7b\u578b<code>AXI_TYPEDEF_ALL</code>\u548c<code>AXI_LITE_TYPEDEF_ALL</code>\u3002  </li> <li>AXI\u603b\u7ebf\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86\u7cfb\u7edfAXI\u603b\u7ebf\u548c\u5916\u8bbeAXI\u603b\u7ebf\u3002  </li> <li>\u914d\u7f6ecrossbar\uff1a\u901a\u8fc7\u5b9a\u4e49XBarCfg\u7ed3\u6784\u4f53\uff0c\u8bbe\u7f6e\u4e86\u4ea4\u53c9\u5f00\u5173\u7684\u5404\u79cd\u53c2\u6570\uff0c\u5982\u7aef\u53e3\u6570\u91cf\u3001\u4f20\u8f93\u9650\u5236\u3001\u5730\u5740\u5bbd\u5ea6\u3001\u6570\u636e\u5bbd\u5ea6\u7b49\u3002  </li> <li>\u5b9a\u4e49\u8def\u7531\u89c4\u5219\uff1a\u901a\u8fc7routing_rules\u6570\u7ec4\uff0c\u5b9a\u4e49\u4e86\u4e0d\u540c\u8bbe\u5907\uff08\u5982CTRL\u3001UART\u3001L2MEM\uff09\u7684\u5730\u5740\u8303\u56f4\uff0c\u7528\u4e8e\u6570\u636e\u5305\u7684\u8def\u7531\u3002  </li> <li>\u5b9e\u4f8b\u5316crossbar\uff1a\u901a\u8fc7axi_xbar\u6a21\u5757\uff0c\u5c06\u914d\u7f6e\u548c\u8def\u7531\u89c4\u5219\u5e94\u7528\u5230\u5b9e\u9645\u7684\u786c\u4ef6\u6a21\u5757\u4e2d\uff0c\u5b9e\u73b0\u4e86\u4ece\u4e3b\u8bbe\u5907\u5230\u4ece\u8bbe\u5907\u7684\u6570\u636e\u4f20\u8f93\u63a7\u5236\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#l2","title":"L2\u7f13\u5b58","text":"<ul> <li>L2\u7f13\u5b58\u914d\u7f6e\uff1a\u5b9a\u4e49\u4e86L2\u7f13\u5b58\u7684AXI\u539f\u5b50\u64cd\u4f5c\u8fc7\u6ee4\u5668<code>axi_atop_filter</code>\u3002  </li> <li>AXI\u5230\u5185\u5b58\u8f6c\u6362\uff1a\u5b9e\u4f8b\u5316\u4e86AXI\u5230\u5185\u5b58\u7684\u8f6c\u6362\u6a21\u5757<code>axi_to_mem</code>\u3002  </li> <li>SRAM\u5b9e\u4f8b\u5316\uff1a\u5b9e\u4f8b\u5316\u4e86SRAM\u6a21\u5757\uff0c\u7528\u4e8eL2\u7f13\u5b58<code>tc_sram</code>\u3002\u5728\u4eff\u771f\u73af\u5883\u4e2d\uff0c\u4f7f\u7528tc_sram\u6a21\u5757\u6a21\u62dfSRAM\u6216DRAM\uff1b\u5728\u5f62\u5f0f\u9a8c\u8bc1\u73af\u5883\u4e2d\uff0c\u5219\u7b80\u5355\u5730\u5c06l2_rdata\u8d4b\u503c\u4e3a0\u3002  </li> </ul>"},{"location":"Coprocessor/Ara2/Top/#uart","title":"UART\u63a5\u53e3","text":"<ul> <li>\u5b9a\u4e49AXI\u3001AXI-Lite\u548cAPB\u534f\u8bae\u7684\u7c7b\u578b\u3002  </li> <li>\u58f0\u660eUART\u6a21\u5757\u6240\u9700\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u4fe1\u53f7\u3002  </li> <li>\u5c06APB\u8bf7\u6c42\u4fe1\u53f7\u8fde\u63a5\u5230UART\u6a21\u5757\u7684\u8f93\u51fa\u7aef\u53e3\uff0c\u5e76\u5c06UART\u6a21\u5757\u7684\u8f93\u5165\u7aef\u53e3\u8fde\u63a5\u5230APB\u54cd\u5e94\u4fe1\u53f7\u3002  </li> <li>\u5b9a\u4e49APB\u5730\u5740\u6620\u5c04\u89c4\u5219\u3002  </li> <li>\u5b9e\u4f8b\u5316AXI-Lite\u5230APB\u7684\u8f6c\u6362\u6a21\u5757<code>axi_lite_to_apb</code>\uff0c\u5c06AXI-Lite\u534f\u8bae\u8f6c\u6362\u4e3aAPB\u534f\u8bae\u3002  </li> <li>\u5b9e\u4f8b\u5316AXI\u5230AXI-Lite\u7684\u8f6c\u6362\u6a21\u5757<code>axi_to_axi_lite</code>\uff0c\u5c06\u5b8c\u6574\u7684AXI\u534f\u8bae\u8f6c\u6362\u4e3aAXI-Lite\u534f\u8bae\u3002  </li> <li>\u5b9e\u4f8b\u5316AXI\u6570\u636e\u5bbd\u5ea6\u8f6c\u6362\u6a21\u5757<code>axi_dw_converter</code>\uff0c\u5c06\u5bbd\u6570\u636e\u5bbd\u5ea6\u7684AXI\u8bf7\u6c42\u8f6c\u6362\u4e3a\u7a84\u6570\u636e\u5bbd\u5ea6\u7684AXI\u8bf7\u6c42\u3002  </li> </ul>"},{"location":"Coprocessor/Ara2/Top/#_3","title":"\u63a7\u5236\u5bc4\u5b58\u5668","text":"<ul> <li>\u63a7\u5236\u5bc4\u5b58\u5668\u7ba1\u7406\uff1a\u901a\u8fc7<code>axi_to_axi_lite</code>\u6a21\u5757\u5c06 AXI \u63a5\u53e3\u8f6c\u6362\u4e3a AXI-Lite \u63a5\u53e3\uff0c\u7136\u540e\u901a\u8fc7<code>ctrl_registers</code>\u6a21\u5757\u5904\u7406\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u8bfb\u5199\u64cd\u4f5c\u3002</li> <li>AXI\u6570\u636e\u5bbd\u5ea6\u8f6c\u6362\uff1a\u901a<code>axi_dw_converter</code>\u6a21\u5757\u5c06 AXI \u63a5\u53e3\u7684\u6570\u636e\u5bbd\u5ea6\u4ece\u5bbd\u5e26\u5230\u7a84\u5e26\u8fdb\u884c\u8f6c\u6362\uff0c\u4ee5\u4fbf\u4e0e\u4e0d\u540c\u6570\u636e\u5bbd\u5ea6\u7684\u5916\u8bbe\u8fdb\u884c\u901a\u4fe1\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#cv6ara","title":"CV6+Ara","text":"<ul> <li>\u786c\u4ef6\u7ebf\u7a0bID\uff1a\u901a\u8fc7<code>hart_id</code>\u53d8\u91cf\u8bbe\u7f6e\u786c\u4ef6\u7ebf\u7a0bID\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002</li> <li>CVA6\u914d\u7f6e\u53c2\u6570\uff1a\u901a\u8fc7<code>CVA6AraConfig</code>\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86CVA6\u5904\u7406\u5668\u7684\u8be6\u7ec6\u914d\u7f6e\u53c2\u6570,\u5982AXI\u63a5\u53e3\u5bbd\u5ea6\u3001\u6d6e\u70b9\u652f\u6301\u3001\u6307\u4ee4\u96c6\u6269\u5c55\u3001\u7f13\u5b58\u914d\u7f6e\u7b49\u3002</li> <li>\u6a21\u5757\u5b9e\u4f8b\u5316\uff1a\u6839\u636e\u6761\u4ef6\u9009\u62e9\u6027\u5730\u5b9e\u4f8b\u5316<code>ara_system</code>\uff0c\u5e76\u5904\u7406\u76f8\u5173\u4fe1\u53f7\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#_4","title":"\u65ad\u8a00","text":"<ul> <li>\u5b9a\u4e49\u591a\u4e2a\u65ad\u8a00\uff0c\u7528\u4e8e\u68c0\u67e5\u53c2\u6570\u7684\u5408\u6cd5\u6027\uff0c\u786e\u4fdd\u6a21\u5757\u5728\u6b63\u786e\u7684\u914d\u7f6e\u4e0b\u8fd0\u884c\u3002  </li> </ul> <pre><code>module ara_soc import axi_pkg::*; import ara_pkg::*; #(\n    // RVV Parameters\n    parameter  int           unsigned NrLanes      = 0,                          // Number of parallel vector lanes.\n    parameter  int           unsigned VLEN         = 0,                          // VLEN [bit]\n    // Support for floating-point data types\n    parameter  fpu_support_e          FPUSupport   = FPUSupportHalfSingleDouble,\n    // External support for vfrec7, vfrsqrt7\n    parameter  fpext_support_e        FPExtSupport = FPExtSupportEnable,\n    // Support for fixed-point data types\n    parameter  fixpt_support_e        FixPtSupport = FixedPointEnable,\n    // AXI Interface\n    parameter  int           unsigned AxiDataWidth = 32*NrLanes,\n    parameter  int           unsigned AxiAddrWidth = 64,\n    parameter  int           unsigned AxiUserWidth = 1,\n    parameter  int           unsigned AxiIdWidth   = 5,\n    // AXI Resp Delay [ps] for gate-level simulation\n    parameter  int           unsigned AxiRespDelay = 200,\n    // Main memory\n    parameter  int           unsigned L2NumWords   = 2**20,\n    // Dependant parameters. DO NOT CHANGE!\n    localparam type                   axi_data_t   = logic [AxiDataWidth-1:0],\n    localparam type                   axi_strb_t   = logic [AxiDataWidth/8-1:0],\n    localparam type                   axi_addr_t   = logic [AxiAddrWidth-1:0],\n    localparam type                   axi_user_t   = logic [AxiUserWidth-1:0],\n    localparam type                   axi_id_t     = logic [AxiIdWidth-1:0]\n  ) (\n    input  logic        clk_i,\n    input  logic        rst_ni,\n    output logic [63:0] exit_o,\n    output logic [63:0] hw_cnt_en_o,\n    // Scan chain\n    input  logic        scan_enable_i,\n    input  logic        scan_data_i,\n    output logic        scan_data_o,\n    // UART APB interface\n    output logic        uart_penable_o,\n    output logic        uart_pwrite_o,\n    output logic [31:0] uart_paddr_o,\n    output logic        uart_psel_o,\n    output logic [31:0] uart_pwdata_o,\n    input  logic [31:0] uart_prdata_i,\n    input  logic        uart_pready_i,\n    input  logic        uart_pslverr_i\n  );\n</code></pre>"},{"location":"Coprocessor/Ara2/Top/#ara_systemsv","title":"ara_system.sv","text":"<p>Ara's System, containing CV6 and Ara. \u5b9e\u73b0\u4e86Ariane\u548cAra\u4e24\u4e2a\u6838\u5fc3\u7684\u96c6\u6210\uff0c\u5e76\u901a\u8fc7AXI\u63a5\u53e3\u8fdb\u884c\u9ad8\u6548\u7684\u6570\u636e\u4ea4\u6362\u3002</p>"},{"location":"Coprocessor/Ara2/Top/#_5","title":"\u53c2\u6570\u5b9a\u4e49","text":"<ul> <li>\u53c2\u6570\u5b9a\u4e49\uff1a\u5305\u62ecRVV\u53c2\u6570\u3001FPU\u652f\u6301\u3001Ariane\u914d\u7f6e\u3001AXI\u63a5\u53e3\u53c2\u6570\u7b49\u3002</li> <li>\u7aef\u53e3\u4e0e\u4fe1\u53f7\uff1a\u65f6\u949f\u3001\u590d\u4f4d\u3001\u542f\u52a8\u5730\u5740\u3001\u7ebf\u7a0bID\u3001\u626b\u63cf\u94fe\u548cAXI\u63a5\u53e3</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#ara-and-cv6","title":"Ara and CV6","text":"<p>\u5b9e\u73b0\u4e86Ariane\u548cAra\u7684\u96c6\u6210\uff0c\u901a\u8fc7AXI\u63a5\u53e3\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u548c\u63a7\u5236\uff0c\u652f\u6301\u591a\u6838\u914d\u7f6e\u548c\u65e0\u6548\u5316\u5904\u7406\u3002</p> <ul> <li>\u5bfc\u5165\u5305\u548c\u5b9a\u4e49\u7aef\u53e3: \u5b9a\u4e49\u4e0e\u52a0\u901f\u5668\u76f8\u5173\u7684\u4fe1\u53f7\u3002</li> <li>\u652f\u6301\u6838\u5fc3\uff1a\u76ee\u524d\u6700\u591a\u652f\u6301\u6700\u591a8\u4e2a\u6838\u5fc3\u3002</li> <li>\u65e0\u6548\u5316\u63a5\u53e3\uff1a\u6253\u5305\u65e0\u6548\u5316\u63a5\u53e3\u5230\u52a0\u901f\u5668\u63a5\u53e3\u3002</li> <li>\u6761\u4ef6\u7f16\u8bd1\uff1a\u6839\u636e\u6761\u4ef6\u7f16\u8bd1\u9009\u62e9\u5b9e\u4f8b\u5316\u7406\u60f3\u7684\u8c03\u5ea6\u5668<code>accel_dispatcher_ideal</code>\u6216\u5b9e\u9645\u7684CVA6\u6838\u5fc3<code>cva6</code>\u3002</li> <li>AXI\u6570\u636e\u5bbd\u5ea6\u8f6c\u6362\u5668: \u7528\u4e8e\u5c06\u7a84\u6570\u636e\u5bbd\u5ea6\u7684AXI\u63a5\u53e3<code>ariane_narrow_axi_req\u548cariane_narrow_axi_resp</code>\u8f6c\u6362\u4e3a\u5bbd\u6570\u636e\u5bbd\u5ea6\u7684AXI\u63a5\u53e3<code>ariane_axi_req\u548cariane_axi_resp</code>\u3002</li> <li>AXI\u65e0\u6548\u5316\u8fc7\u6ee4\u5668: \u4f7f\u7528AXI\u65e0\u6548\u5316\u8fc7\u6ee4\u5668\u5904\u7406\u65e0\u6548\u5316\u8bf7\u6c42\u548c\u54cd\u5e94\u3002\uff08CVA6 L1\u6570\u636e\u7f13\u5b58\u9002\u5e94\u901a\u5199\u7b56\u7565\uff0c\u8fd9\u6837\u7531\u5411\u91cf\u5355\u5143\u8bbf\u95ee\u7684\u4e3b\u5185\u5b58\u603b\u662f\u6700\u65b0\u7684\u3002\u5f53\u5411\u91cf\u5355\u5143\u6267\u884c\u5411\u91cf\u5b58\u50a8\u65f6\uff0c\u5b83\u4f1a\u4f7fCVA6\u6570\u636e\u7f13\u5b58\u4e2d\u76f8\u5e94\u7684\u7f13\u5b58\u884c\u65e0\u6548\uff09</li> <li>Ara\u6a21\u5757\u5b9e\u4f8b\u5316: \u5b9e\u4f8b\u5316Ara\u6a21\u5757\uff0c\u7528\u4e8e\u5904\u7406\u5411\u91cf\u6307\u4ee4\u548c\u6570\u636e\u3002</li> <li>AXI\u591a\u8def\u590d\u7528\u5668: \u4f7f\u7528AXI\u591a\u8def\u590d\u7528\u5668\u5c06\u591a\u4e2aAXI\u63a5\u53e3\u5408\u5e76\u4e3a\u4e00\u4e2aAXI\u63a5\u53e3\u3002</li> </ul> <pre><code>module ara import ara_pkg::*; #(\n    // RVV Parameters\n    parameter  int           unsigned NrLanes      = 0,                          // Number of parallel vector lanes.\n    parameter  int           unsigned VLEN         = 0,                          // VLEN [bit]\n    // Support for floating-point data types\n    parameter  fpu_support_e          FPUSupport   = FPUSupportHalfSingleDouble,\n    // External support for vfrec7, vfrsqrt7\n    parameter  fpext_support_e        FPExtSupport = FPExtSupportEnable,\n    // Support for fixed-point data types\n    parameter  fixpt_support_e        FixPtSupport = FixedPointEnable,\n    // AXI Interface\n    parameter  int           unsigned AxiDataWidth = 0,\n    parameter  int           unsigned AxiAddrWidth = 0,\n    parameter  type                   axi_ar_t     = logic,\n    parameter  type                   axi_r_t      = logic,\n    parameter  type                   axi_aw_t     = logic,\n    parameter  type                   axi_w_t      = logic,\n    parameter  type                   axi_b_t      = logic,\n    parameter  type                   axi_req_t    = logic,\n    parameter  type                   axi_resp_t   = logic,\n    // Dependant parameters. DO NOT CHANGE!\n    // Ara has NrLanes + 3 processing elements: each one of the lanes, the vector load unit, the\n    // vector store unit, the slide unit, and the mask unit.\n    localparam int           unsigned NrPEs        = NrLanes + 4,\n    localparam type                   vlen_t       = logic[$clog2(VLEN+1)-1:0],\n    localparam int           unsigned VLENB        = VLEN / 8\n  ) (\n    // Clock and Reset\n    input  logic              clk_i,\n    input  logic              rst_ni,\n    // Scan chain\n    input  logic              scan_enable_i,\n    input  logic              scan_data_i,\n    output logic              scan_data_o,\n\n    // Interface with Ariane\n    input  cva6_to_acc_t      acc_req_i,\n    output acc_to_cva6_t      acc_resp_o,\n    // AXI interface\n    output axi_req_t          axi_req_o,\n    input  axi_resp_t         axi_resp_i\n  );\n</code></pre>"},{"location":"Coprocessor/Ara2/Top/#arasv","title":"ara.sv","text":"<p>Ara's top-level, interfacing with Ariane.Ara \u5904\u7406\u5668\u7684\u9876\u5c42\u6a21\u5757\uff0c\u4e0ecva6\u5904\u7406\u5668\u63a5\u53e3\u3002</p> <p>ara\u6a21\u5757\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u914d\u7f6e\u7684\u5411\u91cf\u52a0\u901f\u5668\uff0c\u652f\u6301\u591a\u79cd\u6570\u636e\u7c7b\u578b\u548c\u64cd\u4f5c\uff0c\u901a\u8fc7AXI\u63a5\u53e3\u4e0e\u5916\u90e8\u5185\u5b58\u7cfb\u7edf\u4ea4\u4e92\u3002\u5b83\u7684\u8bbe\u8ba1\u5141\u8bb8\u901a\u8fc7\u53c2\u6570\u5316\u6765\u9002\u5e94\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u548c\u6027\u80fd\u9700\u6c42\u3002</p>"},{"location":"Coprocessor/Ara2/Top/#definition","title":"Definition","text":"<ul> <li>\u53c2\u6570\u5b9a\u4e49\u4e0e\u7aef\u53e3\u58f0\u660e\uff1a\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u5305\u62ec\u5e76\u884c\u5411\u91cf\u901a\u9053\u6570<code>NrLanes</code>\u3001\u5411\u91cf\u957f\u5ea6<code>VLEN</code>\u3001\u6d6e\u70b9\u652f\u6301<code>FPUSupport   = FPUSupportHalfSingleDouble</code>\u3001\u56fa\u5b9a\u70b9\u652f\u6301\u7b49\u3002\u58f0\u660e\u4e86\u65f6\u949f\u3001\u590d\u4f4d\u3001\u626b\u63cf\u94fe\u8f93\u5165\u8f93\u51fa\u3001\u4e0e Ariane \u7684\u63a5\u53e3\u3001AXI \u63a5\u53e3\u7b49\u7aef\u53e3\u3002</li> <li>\u672c\u5730\u53c2\u6570\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86\u6bcf\u4e2a\u901a\u9053\u7684\u6700\u5927\u5411\u91cf\u957f\u5ea6<code>MaxVLenPerLane  = VLEN / NrLanes</code>\u3001\u5411\u91cf\u5bc4\u5b58\u5668\u6587\u4ef6\u5927\u5c0f<code>VRFSizePerLane  = MaxVLenPerLane * 32</code>\u7b49\u3002</li> <li>\u63a5\u53e3\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e86 Ara \u8bf7\u6c42\u548c\u54cd\u5e94\u7ed3\u6784\u4f53 <code>ara_req_t</code>\u3001<code>ara_resp_t</code>\uff0c\u4ee5\u53cape\u8bf7\u6c42\u548c\u54cd\u5e94\u7ed3\u6784\u4f53<code>pe_req_t</code>\u3001<code>pe_resp_t</code>\u3002\u901a\u8fc7\u5c01\u88c5\u6307\u4ee4\u6267\u884c\u6240\u9700\u7684\u5404\u79cd\u53c2\u6570\u548c\u72b6\u6001\u4fe1\u606f\uff0c\u652f\u6301\u4e86\u9ad8\u6548\u7684\u6307\u4ee4\u5206\u53d1\u548c\u6267\u884c\u6d41\u7a0b\u3002</li> </ul> ara_req_tara_resp_tpe_req_tpe_resp_t <pre><code>typedef struct packed {\n    ara_op_e op; // Operation\n\n    // Stores and slides do not re-shuffle the\n    // source registers. In these two cases, vl refers\n    // to the target EEW and vtype.vsew, respectively.\n    // Since operand requesters work with the old\n    // eew of the source registers, we should rescale\n    // vl to the old eew to fetch the correct number of Bytes.\n    //\n    // Another solution would be to pass directly the target\n    // eew (vstores) or the vtype.vsew (vslides), but this would\n    // create confusion with the current naming convention\n\n    // \u5b58\u50a8\u548c\u6ed1\u52a8\u64cd\u4f5c\u4e0d\u4f1a\u91cd\u65b0\u6392\u5217\u6e90\u5bc4\u5b58\u5668\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0cvl \u5206\u522b\u6307\u7684\u662f\u76ee\u6807 EEW\uff08Effective Element Width\uff0c\u6709\u6548\u5143\u7d20\u5bbd\u5ea6\uff09\u548c vtype.vsew\uff08vsew \u662f vtype \u5bc4\u5b58\u5668\u4e2d\u7684\u4e00\u4e2a\u5b57\u6bb5\uff0c\u4ee3\u8868 Vector SEW\uff0c\u5373\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u5bbd\u5ea6\uff09\u3002 \n    // \u7531\u4e8e\u64cd\u4f5c\u6570\u8bf7\u6c42\u8005\u4f7f\u7528\u6e90\u5bc4\u5b58\u5668\u7684\u65e7 eew\uff0c\u6211\u4eec\u5e94\u8be5\u5c06 vl \u7f29\u653e\u5230\u65e7 eew \u4ee5\u83b7\u53d6\u6b63\u786e\u6570\u91cf\u7684\u5b57\u8282\u3002  \n\n    // \u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u76f4\u63a5\u4f20\u9012\u76ee\u6807 eew\uff08\u5728\u5b58\u50a8\u64cd\u4f5c\u4e2d\uff09\u6216 vtype.vsew\uff08\u5728\u6ed1\u52a8\u64cd\u4f5c\u4e2d\uff09\uff0c\u4f46\u8fd9\u4f1a\u4e0e\u5f53\u524d\u7684\u547d\u540d\u7ea6\u5b9a\u9020\u6210\u6df7\u6dc6\u3002\n    logic scale_vl;\n\n    // Mask vector register operand \u63a9\u7801\u64cd\u4f5c\u6570\n    logic vm;\n    rvv_pkg::vew_e eew_vmask;\n\n    // 1st vector register operand      \u6e901\n    logic [4:0] vs1;\n    logic use_vs1;\n    opqueue_conversion_e conversion_vs1;\n    rvv_pkg::vew_e eew_vs1;\n    rvv_pkg::vew_e old_eew_vs1;\n\n    // 2nd vector register operand   \u6e902\n    logic [4:0] vs2;\n    logic use_vs2;\n    opqueue_conversion_e conversion_vs2;\n    rvv_pkg::vew_e eew_vs2;\n\n    // Use vd as an operand as well (e.g., vmacc) \u76ee\u7684\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u505a\u6e90\u64cd\u4f5c\u6570\uff0c\u4f8b\u5982\u4e58\u7d2f\u52a0\n    logic use_vd_op;\n    rvv_pkg::vew_e eew_vd_op;\n\n    // Scalar operand \u6807\u91cf\u64cd\u4f5c\u6570\n    elen_t scalar_op;\n    logic use_scalar_op;\n\n    // 2nd scalar operand: stride for constant-strided vector load/stores, slide offset for vector slides\n    //\u5bf9\u4e8e\u5e38\u6b65\u957f\u5411\u91cf\u52a0\u8f7d/\u5b58\u50a8\uff0c\u8fd9\u662f\u6b65\u957f\u503c\uff1b\u5bf9\u4e8e\u5411\u91cf\u6ed1\u52a8\uff0c\u8fd9\u662f\u6ed1\u52a8\u504f\u79fb\u91cf\u3002\n    elen_t stride;\n    logic is_stride_np2;\n\n    // Destination vector register \u76ee\u7684\u5bc4\u5b58\u5668\n    logic [4:0] vd;\n    logic use_vd;\n\n    // If asserted: vs2 is kept in MulFPU opqueue C, and vd_op in MulFPU A\n    logic swap_vs2_vd_op;\n\n    // Effective length multiplier    \u6709\u6548\u7ec4\u4e58\u7cfb\u6570\uff0c\u4e0eEEW\u5bf9\u5e94\n    rvv_pkg::vlmul_e emul;\n\n    //****\u6d6e\u70b9\u76f8\u5173****\n    // Rounding-Mode for FP operations\n    fpnew_pkg::roundmode_e fp_rm;\n    // Widen FP immediate (re-encoding)\n    logic wide_fp_imm;\n    // Resizing of FP conversions\n    resize_e cvt_resize;\n\n    // Vector machine metadata\n    vlen_t vl;//\u8bb0\u5f55\u5904\u7406\u7684\u6570\u636e\u5143\u7d20\u7684\u4e2a\u6570\n    vlen_t vstart;//\u6307\u793a\u7528\u6765\u7b2c\u4e00\u4e2a\u53c2\u4e0e\u8fd0\u7b97\u7684\u6570\u636e\u5143\u7d20\u7684\u7d22\u5f15\n    rvv_pkg::vtype_t vtype;\n\n    // Request token, for registration in the sequencer\u7528\u4e8e\u5728\u5e8f\u5217\u5668\u4e2d\u6ce8\u518c\u8bf7\u6c42\u3002\n    logic token;\n  } ara_req_t;\n</code></pre> <pre><code>typedef struct packed {\n    // Scalar response\n    elen_t resp;\n\n    // Instruction triggered an exception \u6307\u793a\u662f\u5426\u89e6\u53d1\u4e86\u5f02\u5e38\n    ariane_pkg::exception_t exception;\n\n    // New value for vstart \u5982\u679c\u89e6\u53d1\u4e86\u5f02\u5e38\uff0c\u5219\u63d0\u4f9b\u65b0\u7684vstart\u503c\n    vlen_t exception_vstart;\n  } ara_resp_t;\n</code></pre> <pre><code>typedef struct packed {\n    vid_t id; // ID of the vector instruction \u5411\u91cf\u6307\u4ee4\u7684ID\n\n    ara_op_e op; // Operation\n\n    // Mask vector register operand\n    logic vm;\n    rvv_pkg::vew_e eew_vmask;\n\n    vfu_e vfu; // VFU responsible for handling this instruction \u6307\u5b9a\u8d1f\u8d23\u5904\u7406\u6b64\u6307\u4ee4\u7684\u5411\u91cf\u529f\u80fd\u5355\u5143\n\n    // Rescale vl taking into account the new and old EEW\n    logic scale_vl;\n\n    // The lane that provides the first element of the computation \u8ba1\u7b97\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684lane\n    logic [$clog2(MaxNrLanes)-1:0] start_lane;\n    // The lane that provides the last element of the computation  \u8ba1\u7b97\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684lane\n    logic [$clog2(MaxNrLanes)-1:0] end_lane;\n\n    // 1st vector register operand\n    logic [4:0] vs1;\n    logic use_vs1;\n    opqueue_conversion_e conversion_vs1;\n    rvv_pkg::vew_e eew_vs1;\n    rvv_pkg::vew_e old_eew_vs1;\n\n    // 2nd vector register operand\n    logic [4:0] vs2;\n    logic use_vs2;\n    opqueue_conversion_e conversion_vs2;\n    rvv_pkg::vew_e eew_vs2;\n\n    // Use vd as an operand as well (e.g., vmacc)\n    logic use_vd_op;\n    rvv_pkg::vew_e eew_vd_op;\n\n    // Scalar operand\n    elen_t scalar_op;\n    logic use_scalar_op;\n\n    // If asserted: vs2 is kept in MulFPU opqueue C, and vd_op in MulFPU A\n    logic swap_vs2_vd_op;\n\n    // 2nd scalar operand: stride for constant-strided vector load/stores\n    elen_t stride;\n    logic is_stride_np2;\n\n    // Destination vector register\n    logic [4:0] vd;\n    logic use_vd;\n\n    // Effective length multiplier\n    rvv_pkg::vlmul_e emul;\n\n    //****\u6d6e\u70b9\u76f8\u5173****\n    // Rounding-Mode for FP operations\n    fpnew_pkg::roundmode_e fp_rm;\n    // Widen FP immediate (re-encoding)\n    logic wide_fp_imm;\n    // Resizing of FP conversions\n    resize_e cvt_resize;\n\n    // Vector machine metadata\n    vlen_t vl;\n    vlen_t vstart;\n    rvv_pkg::vtype_t vtype;\n\n    // Hazards \u5192\u9669\u4fe1\u53f7 \u63a8\u6d4b\u7528\u4e8e\u6307\u793a\u6e90\u6216\u76ee\u7684\u5bc4\u5b58\u5668\u662f\u5426\u56e0\u4e4b\u524d\u7684\u64cd\u4f5c\u800c\u5904\u4e8e\u5371\u9669\u72b6\u6001\uff08\u5373\uff0c\u5b83\u4eec\u53ef\u80fd\u5c1a\u672a\u51c6\u5907\u597d\u88ab\u5f53\u524d\u64cd\u4f5c\u4f7f\u7528\uff09\n    logic [NrVInsn-1:0] hazard_vs1;\n    logic [NrVInsn-1:0] hazard_vs2;\n    logic [NrVInsn-1:0] hazard_vm;\n    logic [NrVInsn-1:0] hazard_vd;\n  } pe_req_t;\n</code></pre> <pre><code>typedef struct packed {\n    // Each set bit indicates that the corresponding vector loop has finished execution \u6bcf\u4e2a\u8bbe\u7f6e\u7684\u4f4d\u90fd\u8868\u793a\u76f8\u5e94\u7684\u5411\u91cf\u5faa\u73af\u5df2\u5b8c\u6210\u6267\u884c\u3002\n    logic [NrVInsn-1:0] vinsn_done;\n  } pe_resp_t;\n</code></pre>"},{"location":"Coprocessor/Ara2/Top/#dispatcher","title":"Dispatcher","text":"<ul> <li>\u8c03\u5ea6\u5668\u5b9e\u4f8b\u5316\uff1a\u5b9e\u4f8b\u5316\u4e86\u8c03\u5ea6\u5668\u6a21\u5757<code>ara_dispatcher</code>\uff0c\u5e76\u8fde\u63a5\u4e86\u76f8\u5173\u7684\u4fe1\u53f7\uff0c\u5305\u62ec\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u4fe1\u53f7\u3001\u4e0eAriane\u7684\u63a5\u53e3\u4fe1\u53f7\u3001\u4e0e\u5411\u91cf\u5b58\u50a8\u5355\u5143\uff08VSTU\uff09\u7684\u63a5\u53e3\u4fe1\u53f7\u7b49</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#sequencer","title":"Sequencer","text":"<ul> <li>\u5e8f\u5217\u5668\u5b9e\u4f8b\u5316\uff1a\u5b9e\u4f8b\u5316\u4e86\u5e8f\u5217\u5668\u6a21\u5757<code>ara_sequencer</code>\uff0c\u5e76\u8fde\u63a5\u4e86\u76f8\u5173\u7684\u4fe1\u53f7\uff0c\u5305\u62ec\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u4fe1\u53f7\u3001\u4e0e\u8c03\u5ea6\u5668\u7684\u63a5\u53e3\u4fe1\u53f7\u3001\u4e0e\u5904\u7406\u5143\u7d20\uff08PEs\uff09\u7684\u63a5\u53e3\u4fe1\u53f7\u7b49\u3002</li> <li>\u7ec4\u5408\u903b\u8f91\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ec4\u5408\u903b\u8f91\u5757\uff0c\u7528\u4e8e\u5904\u7406\u63a9\u7801\u5355\u5143\u64cd\u4f5c\u6570\u7684\u51c6\u5907\u4fe1\u53f7\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#lanes","title":"Lanes","text":"<ul> <li>\u6570\u636e\u901a\u9053\u63a5\u53e3\uff1a\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7528\u4e8e\u4e0d\u540c\u5355\u5143\uff08\u5982\u5b58\u50a8\u5355\u5143\u3001\u6ed1\u52a8\u5355\u5143\u3001\u52a0\u8f7d\u5355\u5143\u548c\u63a9\u7801\u5355\u5143\uff09\u7684\u63a5\u53e3\u4fe1\u53f7\u3002</li> <li>Lane\u6a21\u5757\u5b9e\u4f8b\u5316\uff1a\u4f7f\u7528\u751f\u6210\u5757\uff08generate block\uff09\u6765\u5b9e\u4f8b\u5316\u591a\u4e2alane\u6a21\u5757\uff0c\u6bcf\u4e2alane\u6a21\u5757\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u6570\u636e\u5904\u7406\u5355\u5143\uff0c\u5b83\u63a5\u6536\u6765\u81ea\u4e0d\u540c\u5355\u5143\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u5e76\u4ea7\u751f\u7ed3\u679c\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#vector-loadstore-unit","title":"Vector Load/Store Unit","text":"<ul> <li>LSU\u5b9e\u4f8b\u5316:vlsu\u6a21\u5757\u8d1f\u8d23\u5411\u91cf\u52a0\u8f7d\u548c\u5b58\u50a8\u64cd\u4f5c\u3002\u5b83\u901a\u8fc7AXI\u63a5\u53e3\u4e0e\u5185\u5b58\u4ea4\u4e92\uff0c\u5904\u7406\u52a0\u8f7d\u548c\u5b58\u50a8\u8bf7\u6c42\uff0c\u5e76\u4e0e\u8c03\u5ea6\u5668\u3001\u5e8f\u5217\u5668\u3001\u63a9\u7801\u5355\u5143\u548c\u901a\u9053\u8fdb\u884c\u901a\u4fe1\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#slide-unit","title":"Slide unit","text":"<ul> <li>\u6ed1\u52a8\u5355\u5143\u5b9e\u4f8b\u5316:sldu\u6a21\u5757\u8d1f\u8d23\u5411\u91cf\u6ed1\u52a8\u64cd\u4f5c\u3002\u5b83\u5904\u7406\u5411\u91cf\u5143\u7d20\u7684\u6ed1\u52a8\u548c\u91cd\u65b0\u6392\u5217\uff0c\u5e76\u4e0e\u4e3b\u5e8f\u5217\u5668\u3001\u901a\u9053\u548c\u63a9\u7801\u5355\u5143\u8fdb\u884c\u901a\u4fe1\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#mask-unit","title":"Mask unit","text":"<ul> <li>\u63a9\u7801\u5355\u5143\u5b9e\u4f8b\u5316:mask\u6a21\u5757\u8d1f\u8d23\u5411\u91cf\u63a9\u7801\u64cd\u4f5c\u3002\u5b83\u5904\u7406\u5411\u91cf\u5143\u7d20\u7684\u63a9\u7801\u64cd\u4f5c\uff0c\u5e76\u4e0e\u4e3b\u5e8f\u5217\u5668\u3001\u901a\u9053\u548c\u5411\u91cf\u5b58\u50a8\u5355\u5143\u8fdb\u884c\u901a\u4fe1\u3002</li> </ul>"},{"location":"Coprocessor/Ara2/Top/#assertions","title":"Assertions","text":"<ul> <li>\u65ad\u8a00\uff1a\u5b9a\u4e49\u4e86\u591a\u4e2a\u65ad\u8a00\uff0c\u7528\u4e8e\u68c0\u67e5\u53c2\u6570\u7684\u5408\u6cd5\u6027\uff0c\u786e\u4fdd\u6a21\u5757\u5728\u6b63\u786e\u7684\u914d\u7f6e\u4e0b\u8fd0\u884c\u3002  </li> </ul> <pre><code>module ara import ara_pkg::*; #(\n    // RVV Parameters\n    parameter  int           unsigned NrLanes      = 0,                          // Number of parallel vector lanes.\n    parameter  int           unsigned VLEN         = 0,                          // VLEN [bit]\n    // Support for floating-point data types\n    parameter  fpu_support_e          FPUSupport   = FPUSupportHalfSingleDouble,\n    // External support for vfrec7, vfrsqrt7\n    parameter  fpext_support_e        FPExtSupport = FPExtSupportEnable,\n    // Support for fixed-point data types\n    parameter  fixpt_support_e        FixPtSupport = FixedPointEnable,\n    // AXI Interface\n    parameter  int           unsigned AxiDataWidth = 0,\n    parameter  int           unsigned AxiAddrWidth = 0,\n    parameter  type                   axi_ar_t     = logic,\n    parameter  type                   axi_r_t      = logic,\n    parameter  type                   axi_aw_t     = logic,\n    parameter  type                   axi_w_t      = logic,\n    parameter  type                   axi_b_t      = logic,\n    parameter  type                   axi_req_t    = logic,\n    parameter  type                   axi_resp_t   = logic,\n    // Dependant parameters. DO NOT CHANGE!\n    // Ara has NrLanes + 3 processing elements: each one of the lanes, the vector load unit, the\n    // vector store unit, the slide unit, and the mask unit.\n    localparam int           unsigned NrPEs        = NrLanes + 4,\n    localparam type                   vlen_t       = logic[$clog2(VLEN+1)-1:0],\n    localparam int           unsigned VLENB        = VLEN / 8\n  ) (\n    // Clock and Reset\n    input  logic              clk_i,\n    input  logic              rst_ni,\n    // Scan chain\n    input  logic              scan_enable_i,\n    input  logic              scan_data_i,\n    output logic              scan_data_o,\n\n    // Interface with Ariane\n    input  cva6_to_acc_t      acc_req_i,\n    output acc_to_cva6_t      acc_resp_o,\n    // AXI interface\n    output axi_req_t          axi_req_o,\n    input  axi_resp_t         axi_resp_i\n  );\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/","title":"RISC-V Matrix","text":""},{"location":"Coprocessor/ISA/Mareix/#_1","title":"\u4ecb\u7ecd","text":"<p>\u76ee\u524dRISC-V\u56fd\u9645\u57fa\u91d1\u4f1a\u6b63\u5728\u79ef\u6781\u63a8\u52a8\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u6b63\u5f0f\u7248\u7684\u8fdb\u5c55\u3002\u73b0\u5728\u6709\u4e24\u79cd\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u7684\u601d\u8def:</p> <ul> <li>IME(Integrated Matrix Extension): \u5728RVV\u7684\u57fa\u7840\u4e0a\uff0c\u590d\u7528\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u6765\u6269\u5c55\u77e9\u9635\u8fd0\u7b97\u7684\u80fd\u529b\uff0c</li> <li>AME(Attached Matrix Extension): \u8bbe\u8ba1\u5168\u65b0\u7684\u77e9\u9635\u72b6\u6001\uff0c\u901a\u8fc7\u4e0e\u5411\u91cf\u8fdb\u884c\u89e3\u8026\u5f62\u6210\u4e00\u5957\u5b8c\u6574\u72ec\u7acb\u7684\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u3002</li> </ul> <p>\u76ee\u524d\u6765\u8bf4\uff0c\u672c\u65b9\u6848\u503e\u5411\u4e8e\u5236\u5b9a\u4e00\u5957\u5b8c\u6574\u72ec\u7acb\u7684\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u5373AME\uff0c\u56e0\u4e3a\u5411\u91cf\u548c\u77e9\u9635\u7684\u5e94\u7528\u573a\u666f\u5e76\u4e0d\u91cd\u5408\uff0c\u5411\u91cf\u6269\u5c55\u53ef\u4ee5\u66f4\u597d\u5730\u89e3\u51b3\u4e0d\u89c4\u5219\u77e9\u9635\u8fd0\u7b97\uff0c\u800c\u77e9\u9635\u6269\u5c55\u53ef\u4ee5\u5728\u89c4\u5219\u7684\u77e9\u9635\u8fd0\u7b97\u4e2d\u5f97\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002\u72ec\u7acb\u7684\u77e9\u9635\u6307\u4ee4\u96c6\u6269\u5c55\u5bf9\u4e0d\u540c\u7684\u4eba\u5de5\u667a\u80fd\u573a\u666f\u4e5f\u4f1a\u6709\u4e0d\u540c\u7684\u5e94\u7528\u3002\u5229\u7528\u5411\u91cf\u6269\u5c55\u53ef\u4ee5\u66f4\u597d\u5730\u8fdb\u884c\u52a0\u89e3\u5bc6\u7684\u64cd\u4f5c\uff0c\u800c\u901a\u8fc7\u77e9\u9635\u6269\u5c55\u53ef\u4ee5\u8fdb\u884c\u4eba\u5de5\u667a\u80fd\u590d\u6742\u573a\u666f\u7684\u8fd0\u7b97\u3002\u5e76\u4e14\u72ec\u7acb\u7684\u77e9\u9635\u6269\u5c55\u5177\u5907\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u5411\u91cf\u6269\u5c55\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u9762\u5bf9\u4e0d\u540c\u7684\u4eba\u5de5\u667a\u80fd\u573a\u666f\u3002  </p> <p>\u5728\u6b64\uff0c\u7814\u7a76\u7384\u94c1\u4e0e\u5e0c\u59c6\u8ba1\u7b97\u7684\u81ea\u5b9a\u4e49\u77e9\u9635\u6269\u5c55\u3002</p> <ul> <li> \u72ec\u7acb\u89e3\u8026\u7684\u77e9\u9635\u6269\u5c55</li> <li> \u8bbe\u8ba1\u77e9\u9635\u5bc4\u5b58\u5668\u7ec4\u53ca\u76f8\u5173\u6307\u4ee4\u96c6</li> <li> \u77e9\u9635\u6269\u5c55\u53ef\u4ee5\u8fdb\u884c\u4eba\u5de5\u667a\u80fd\u590d\u6742\u573a\u666f\u7684\u8fd0\u7b97</li> </ul>"},{"location":"Coprocessor/ISA/Mareix/#_2","title":"\u77e9\u9635\u5bc4\u5b58\u5668","text":"<p>\u77e9\u9635\u6269\u5c55\u589e\u52a0\u4e868\u4e2a\u4e8c\u7ef4\u77e9\u9635\u5bc4\u5b58\u5668\u548c6\u4e2acsr\u5bc4\u5b58\u5668\u3002</p> Privilege Name Description URW xmrstart \u77e9\u9635\u5f00\u59cb\u884c\u4f4d\u7f6e URW xmcsr \u77e9\u9635\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 URW xmsize \u77e9\u9635\u5927\u5c0f\u914d\u7f6e\uff0c\u77e9\u9635\u5927\u5c0f URO xmlenb \u77e9\u9635\u5bc4\u5b58\u5668\u5927\u5c0f\uff0cmrows*xrlenb URO xrlenb RLEN\uff08\u5b57\u8282\uff09 URO xmisa \u77e9\u9635\u6307\u4ee4\u5b50\u96c6 <p>8\u4e2a\u4e8c\u7ef4\u77e9\u9635\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u4e3aM0\u3001M1\u3001M2\u3001M3\u3001M4\u3001M5\u3001M6\u548cM7\u3002RLEN\u4ee5\u4f4d\u5355\u4f4d\u8868\u793a\u6bcf\u4e2a\u5bc4\u5b58\u5668\u884c\u7684\u957f\u5ea6\u3002\u5b83\u5728\u4efb\u4f55\u5b9e\u73b0\u4e2d\u90fd\u662f\u4e00\u4e2a\u5e38\u6570\u503c\uff0c\u53ef\u7528\u7684RLEN\u9009\u9879\u4e3a128\u3001256\u6216512\u6216\u66f4\u591a\u3002\u77e9\u9635\u5bc4\u5b58\u5668\u884c\u6570\u662fRLEN\u9664\u4ee532\uff0c\u7ed3\u679c\u662f4\u30018\u621616\u6216\u66f4\u591a\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u77e9\u9635\u5bc4\u5b58\u5668\u7531[M x K] MSEW\u5143\u7d20\u7ec4\u6210\uff0c\u5176\u4e2dM\u8ba1\u7b97\u4e3aRLEN\u9664\u4ee532\uff0cK\u8ba1\u7b97\u4e3aRLEN\u9664\u4ee5MSEW\uff0cMSEW\u8868\u793a\u5143\u7d20\u5927\u5c0f\u3002</p> <p></p>"},{"location":"Coprocessor/ISA/Mareix/#_3","title":"\u77e9\u9635\u6307\u4ee4\u96c6","text":""},{"location":"Coprocessor/ISA/Mareix/#_4","title":"\u77e9\u9635\u4e58\u7d2f\u52a0\u6307\u4ee4","text":"<p>\u77e9\u9635\u4e58\u7d2f\u52a0\u6307\u4ee4\u4ecems1\u548cms2\u6307\u5b9a\u7684\u77e9\u9635\u5bc4\u5b58\u5668\u4e2d\u63d0\u53d6\u77e9\u9635A\uff08sizeMxsizeK\uff09\u548c\u77e9\u9635B\uff08sizeNxsizeK\uff09\uff0c\u5c06AMK*\uff08BNK\uff09T\u7684\u4e58\u6cd5\u7ed3\u679c\u52a0\u5230\u4ecemd\u5bc4\u5b58\u5668\u83b7\u53d6\u7684\u77e9\u9635C\uff08sizeMxsizeN\uff09\u4e2d\uff0c\u8f93\u51fa\u5c06\u8986\u76d6\u7d2f\u79ef\u5bc4\u5b58\u5668\u3002</p> <ul> <li>sizeK \u21d0 xrlenb</li> <li>sizeM \u21d0 RLEN/32</li> <li>sizeN \u21d0 RLEN/32, for fmmacc.h sizeN \u21d0 2*(RLEN/32)</li> </ul> <p>ISA\u89c4\u8303\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u6307\u4ee4\u6765\u652f\u6301\u6d6e\u70b9\u77e9\u9635\u548c\u6574\u6570\u77e9\u9635\u7684\u4e58\u6cd5\u548c\u64cd\u4f5c\u3002\u786c\u4ef6\u8bbe\u8ba1\u5177\u6709\u6240\u652f\u6301\u7684\u6570\u636e\u7c7b\u578b\u7684\u7075\u6d3b\u6027\u3002</p> <ul> <li>Float Matrix Multiplication(non-widen)</li> </ul> <pre><code>    #float matrix multiplication, md = md + ms1*ms2\n    fmmacc.h md, ms2, ms1 # fmmacc.h: fp16/bf16 floating-point ,illegal if bit[3] of xmisa register is 0\n    fmmacc.s md, ms2, ms1 # fmmacc.s: fp32 floating-point, illegal if bit[4] of xmisa register is 0\n    fmmacc.d md, ms2, ms1 # fmmacc.d: fp64 floating-point, illegal if bit[5] of xmisa register is 0\n</code></pre> <p>For fmmacc.s\uff0cbelow for RLEN=128</p> <p></p> <p>For fmmacc.h\uff0cbelow for RLEN=128</p> <p></p> <p>For fmmacc.d\uff0cbelow for RLEN=128</p> <p></p> <ul> <li>Float Matrix Multiplication(widen)</li> </ul> <pre><code>    #float matrix multiplication, output widen, md = md + ms1*ms2\n    fwmmacc.h md, ms2, ms1 # fp16/bf16 floating-point source and fp32 result ,illegal if bit[8] of xmisa register is 0\n    fwmmacc.s md, ms2, ms1 # fp32 floating-point source and fp64 result , illegal if bit[9] of xmisa register is 0\n</code></pre> <ul> <li>Integer Matrix Multiplication (4x widen)</li> </ul> <pre><code>    #8bit data width\n    #signed matrix multiply\n    mmaqa.b md, ms2, ms1\n    #unsigned matrix multiply\n    mmaqau.b md, ms2, ms1\n    #unsigned-signed matrix multiply\n    mmaqaus.b md, ms2, ms1\n    #signed-unsigned matrix multiply\n    mmaqasu.b md, ms2, ms1\n    #16bit data width\n    #signed matrix multiply\n    mmaqa.h md, ms2, ms1\n    #unsigned matrix multiply\n    mmaqau.h md, ms2, ms1\n    #unsigned-signed matrix multiply\n    mmaqaus.h md, ms2, ms1\n    #signed-unsigned matrix multiply\n    mmaqasu.h md, ms2, ms1\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_5","title":"\u77e9\u9635\u52a0\u8f7d\u5b58\u50a8\u6307\u4ee4","text":"<p>\u77e9\u9635\u52a0\u8f7d\u6307\u4ee4\u5c06\u77e9\u9635\u4ece\u5185\u5b58\u52a0\u8f7d\u5230\u77e9\u9635\u5bc4\u5b58\u5668\u3002\u77e9\u9635\u5b58\u50a8\u6307\u4ee4\u5b58\u50a8\u4e00\u4e2a\u4ece\u77e9\u9635\u5bc4\u5b58\u5668\u5230\u5b58\u50a8\u5668\u7684\u77e9\u9635\u3002</p> <p></p> <p>\u5143\u7d20\u6570\u636e\u5bbd\u5ea6\u91c7\u7528\u6307\u4ee4\u7f16\u7801\uff0c\u5305\u62ec\u5b57\u8282/\u534a\u5b57/\u5b57/\u53cc\u5b57\uff0c\u4fdd\u7559\u5176\u4ed6\u6570\u636e\u5bbd\u5ea6\u3002\u57fa\u5730\u5740\u4e3ars1\uff0c\u884c\u6b65\u5e45\u4e3ars2\uff0cmd/ms3\u662f\u77e9\u9635\u52a0\u8f7d\u76ee\u6807\u7684\u5bc4\u5b58\u5668\u7d22\u5f15\u548c\u77e9\u9635\u5b58\u50a8\u6e90\u7684\u5bc4\u5b58\u5668\u7d22\u5f15\u3002</p> <pre><code>    #matrix load\n    mld.&lt;b/h/w/d&gt; md, (rs1), rs2\n    #stream matrix load\n    mld.&lt;b/h/w/d&gt;.s md, (rs1), rs2\n    #matrix store\n    mst.&lt;b/h/w/d&gt; ms3, (rs1), rs2\n    #stream matrix store\n    mst.&lt;b/h/w/d&gt;.s ms3, (rs1), rs2\n    #whole matrix load\n    mld&lt;1/2/4/8&gt;m.&lt;b/h/w/d&gt; md, (rs1)\n    #whole matrix store\n    mst&lt;1/2/4/8&gt;m.&lt;b/h/w/d&gt; ms3, (rs1)\n</code></pre> <p>\u77e9\u9635\u5f62\u72b6\uff08MxK\uff09\u662f\u57fa\u4e8e\u77e9\u9635\u5927\u5c0f\u7684\u914d\u7f6e\u5bc4\u5b58\u5668\uff0cM\u7531sizeM\u7ed9\u51fa\uff0cK\u7531sizeK\u7ed9\u51fa\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002M=sizeM\u21d0RLEN/32\uff0cK=sizeK/\u5143\u7d20\u5927\u5c0f\uff0csizeK\u21d0RLEN/8\u3002\u5982\u679csizeM &lt; RLEN/32\u6216sizeK &lt; RLEN/8\uff0c\u5219\u5c06\u5177\u6709\u884c\u7d22\u5f15&gt; sizeM\u6216\u5217\u7d22\u5f15&gt;\uff08sizeK/\u5143\u7d20\u5927\u5c0f\u4e3a\u5b57\u8282\uff09\u7684\u77e9\u9635\u5bc4\u5b58\u5668\u6570\u636e\u8bbe\u7f6e\u4e3a\u96f6\u8fdb\u884c\u52a0\u8f7d\uff0c\u5e76\u4e14\u4e0d\u5199\u5165\u5185\u5b58\u8fdb\u884c\u5b58\u50a8\u3002</p> <p>\u63d0\u4f9b\u4e862\u4e2a\u7248\u672c\uff1a(1)\u6b63\u5e38(2)\u6574\u4e2a\u5bc4\u5b58\u5668\u52a0\u8f7d/\u5b58\u50a8\u3002</p>"},{"location":"Coprocessor/ISA/Mareix/#_6","title":"\u77e9\u9635\u914d\u7f6e\u6307\u4ee4","text":"<p>\u77e9\u9635\u914d\u7f6e\u6307\u4ee4\u7528\u4e8e\u914d\u7f6e\u77e9\u9635\u4e2d\u7684\u67d0\u4e2a\u5b57\u6bb5\u6216\u8005\u6574\u4e2a\u77e9\u9635\u5927\u5c0f\u914d\u7f6e\u5bc4\u5b58\u5668\u3002\u5982\u679c\u67d0\u4e2a\u5b57\u6bb5\u6ca1\u6709\u88ab\u914d\u7f6e\u6307\u4ee4\u6539\u53d8\uff0c\u5b83\u5c06\u4fdd\u6301\u539f\u6709\u503c\u3002\u6307\u4ee4\u4e2d\u7684\u7d22\u5f15\u5b57\u6bb5\u6307\u793a\u4e86\u8981\u66f4\u65b0\u7684\u5b57\u6bb5\uff0c\u5305\u62ecsizeM\u3001sizeK\u3001sizeN\u6216\u8005\u6574\u4e2a\u914d\u7f6e\u5bc4\u5b58\u5668\uff0c\u5982\u4e0b\u8868\u6240\u793a\u3002\u66f4\u65b0\u540e\u7684\u77e9\u9635\u5927\u5c0f\u4f1a\u88ab\u8fd4\u56de\u5230rd\u3002</p> \u7d22\u5f15 \u6307\u4ee4 \u5bf9\u77e9\u9635\u5927\u5c0f\u7684\u5f71\u54cd 000 mcfgk(i) msize.half1 = x[rs1]\uff08\u5c06rs1\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u8d4b\u7ed9msize\u7684\u534a\u5b571\u5b57\u6bb5\uff09 001 mcfgm(i) msize.byte0 = x[rs1]\uff08\u5c06rs1\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u8d4b\u7ed9msize\u7684\u5b57\u82820\u5b57\u6bb5\uff09 010 mcfgn(i) msize.byte1 = x[rs1]\uff08\u5c06rs1\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u8d4b\u7ed9msize\u7684\u5b57\u82821\u5b57\u6bb5\uff09 111 mcfg msize.byte0 = x[rs1].byte0\uff0cmsize.byte1 = x[rs1].byte1\uff0cmsize.half1 = x[rs1].half1 \u5176\u4ed6 - \u4fdd\u7559\uff08\u672a\u5b9a\u4e49\u6216\u4e0d\u53ef\u7528\uff09 bits Name Description XLEN-1:XLEN-32 0 reserved if non-zero 31:16 sizeK[15:0] column of Matrix A or Matrix B, in bytes 15:8 sizeN[7:0] row of Matrix B 7:0 sizeM[7:0] row of Matrix A <pre><code>    # imm type\n    mcfg&lt;m/n/k&gt;i uimm7\n    # register type\n    mcfg&lt;m/n/k&gt; rs1\n    # entire register\n    mcfg rs1\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_7","title":"\u77e9\u9635\u9010\u70b9\u8fd0\u7b97\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/Mareix/#_8","title":"\u6574\u6570\u7b97\u6570\u6307\u4ee4","text":"<p>\u5bf9\u4e8e\u6574\u6570\u77e9\u9635\u9010\u70b9\u8fd0\u7b97\u7684\u6307\u4ee4\u683c\u5f0f\uff0c\u5305\u62ec\u77e9\u9635-\u77e9\u9635\u548c\u77e9\u9635-\u5411\u91cf\u7684\u8fd0\u7b97\uff0c\u4ee5\u53ca32\u4f4d\u548c64\u4f4d\u6574\u6570\u6307\u4ee4\u7684\u53ef\u9009\u652f\u6301\u3002\u4ee5\u4e0b\u662f\u5bf9\u5173\u952e\u4fe1\u606f\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a</p> <ul> <li> <p>32\u4f4d\u6307\u4ee4\uff1a\u5f53xmisa\u5bc4\u5b58\u5668\u7684bit[28]\u548cbit[1]\u90fd\u88ab\u8bbe\u7f6e\u4e3a1\u65f6\uff0c32\u4f4d\u6307\u4ee4\u662f\u5408\u6cd5\u7684\u3002\u5f53xmisa\u5bc4\u5b58\u5668\u7684bit[28]\u548cbit[0]\u90fd\u88ab\u8bbe\u7f6e\u4e3a1\u65f6\uff0c32\u4f4d\u6307\u4ee4\u4e5f\u662f\u5408\u6cd5\u7684\u3002\u5728\u5176\u4ed6\u6240\u6709\u60c5\u51b5\u4e0b\uff0c32\u4f4d\u6307\u4ee4\u662f\u975e\u6cd5\u7684\u3002</p> </li> <li> <p>64\u4f4d\u6307\u4ee4\uff1a\u5f53xmisa\u5bc4\u5b58\u5668\u7684bit[15]\u548cbit[2]\u90fd\u88ab\u8bbe\u7f6e\u4e3a1\u65f6\uff0c64\u4f4d\u6307\u4ee4\u662f\u5408\u6cd5\u7684\u3002\u5728\u5176\u4ed6\u6240\u6709\u60c5\u51b5\u4e0b\uff0c64\u4f4d\u6307\u4ee4\u662f\u975e\u6cd5\u7684\u3002</p> </li> <li> <p>\u77e9\u9635\u64cd\u4f5c\u6570\u7684\u5f62\u72b6\uff1a\u77e9\u9635\u7684\u5f62\u72b6\u7531M/K\u7ed9\u51fa\uff0c\u5176\u4e2dM\u548cK\u7684\u503c\u901a\u8fc7sizeM\u548csizeK\u8ba1\u7b97\u5f97\u51fa\u3002<code>sizeM\u21d0RLEN/32</code> <code>sizeK\u21d0RLEN/8</code>\u3002</p> </li> </ul> <p>\u5bf9\u4e8e\u77e9\u9635-\u77e9\u9635\u6307\u4ee4\uff0c\u8fd9\u4e24\u4e2a\u6e90\u90fd\u662f\u77e9\u9635\u3002\u5bf9\u4e8e\u77e9\u9635-\u5411\u91cf\u6307\u4ee4\uff0csrc2\u662f\u77e9\u9635\uff0csrc1\u662f\u4e00\u884c\u77e9\u9635\u3002\u4ee5\u7b2c0\u884c\u4e3a\u4f8b\uff0c\u5411\u91cf\u64cd\u4f5c\u6570\u64cd\u4f5c\u5728\u6bcf\u4e00\u884c\u77e9\u9635\u64cd\u4f5c\u6570\u4e0a\uff0c\u4f5c\u4e3amd[i\uff0cj] = ms2[i\uff0cj] op ms1[0\uff0cj]\u3002</p> <ul> <li><code>madd</code>\uff1a\u6267\u884c src1 \u548c src2 \u7684\u52a0\u6cd5\u8fd0\u7b97\u3002\u5728\u77e9\u9635-\u5411\u91cf\u8fd0\u7b97\u4e2d\uff0c\u5b83\u76f8\u5f53\u4e8e\u5bf9 ms2 \u7684\u6bcf\u4e00\u884c\u4e0e ms1 \u7684\u6307\u5b9a\u884c\uff08\u5982 row0\uff09\u8fdb\u884c\u9010\u5143\u7d20\u52a0\u6cd5\u3002</li> <li><code>msub</code>\uff1a\u4ece src1 \u4e2d\u51cf\u53bb src2\u3002\u5728\u77e9\u9635-\u5411\u91cf\u8fd0\u7b97\u4e2d\uff0c\u5b83\u76f8\u5f53\u4e8e\u5bf9 ms2 \u7684\u6bcf\u4e00\u884c\u4e0e ms1 \u7684\u6307\u5b9a\u884c\u8fdb\u884c\u9010\u5143\u7d20\u51cf\u6cd5\u3002</li> <li><code>mmul</code>\uff1a\u6267\u884c src1 \u548c src2 \u7684\u4e58\u6cd5\u8fd0\u7b97\u3002\u5728\u77e9\u9635-\u77e9\u9635\u8fd0\u7b97\u4e2d\uff0c\u5b83\u8ba1\u7b97\u4e24\u4e2a\u77e9\u9635\u7684\u4e58\u79ef\uff1b\u5728\u77e9\u9635-\u5411\u91cf\u8fd0\u7b97\u4e2d\uff0c\u5b83\u8ba1\u7b97\u77e9\u9635\u4e0e\u5411\u91cf\u7684\u4e58\u79ef\u3002mmul \u6307\u4ee4\u5c06\u4e58\u79ef\u7684\u4f4eXLEN \u4f4d\u5199\u5165\u76ee\u6807\u5bc4\u5b58\u5668 rd\u3002mmulh \u7248\u672c\u5219\u5c06\u4e58\u79ef\u7684\u9ad8 XLEN \u4f4d\u5199\u5165\u76ee\u6807\u5bc4\u5b58\u5668\u3002</li> <li><code>mmax</code> \u548c<code>mmin</code>\uff1a\u5206\u522b\u6267\u884c\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6bd4\u8f83\u3002mmax \u6307\u4ee4\u8fd4\u56de\u4e24\u4e2a\u64cd\u4f5c\u6570\u4e2d\u7684\u6700\u5927\u503c\uff0c\u800c mmin \u6307\u4ee4\u8fd4\u56de\u6700\u5c0f\u503c\u3002</li> </ul> <pre><code>    #matrix-matrix add\n    madd.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector add\n    madd.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix sub\n    msub.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector sub\n    msub.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix mul\n    mmul.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector mul\n    mmul.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix mulh\n    mmulh.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector mulh\n    mmulh.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix max\n    mmax.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector max\n    mmax.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix unsigned max\n    mumax.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector unsigned max\n    mumax.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix min\n    mmin.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector min\n    mmin.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix unsigned min\n    mumin.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector unsigned min\n    mumin.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_9","title":"\u6574\u6570\u79fb\u4f4d\u6307\u4ee4","text":"<p>\u77e9\u9635\u79fb\u4f4d\u6307\u4ee4\uff08\u5982 mn4clip/msll/msrl/msra\uff09\u548c mn4clipu \u6307\u4ee4\u7528\u4e8e\u5904\u7406\u6570\u636e\u7684\u6253\u5305\u3001\u79fb\u4f4d\u7b49\u64cd\u4f5c</p> <ul> <li> <p><code>mn4clip</code> \u548c<code>mn4clipu</code> \u6307\u4ee4\uff1a\u8fd9\u4e24\u4e2a\u6307\u4ee4\u7528\u4e8e\u5c06\u5b9a\u70b9\u6570\u503c\u6253\u5305\u5230\u4e00\u4e2a\u5bbd\u5ea6\u4e3a\u539f\u6570\u636e\u5bbd\u5ea6\u56db\u5206\u4e4b\u4e00\u7684\u76ee\u6807\u4e2d\u3002\u652f\u6301\u7684\u529f\u80fd\u5305\u62ec\u56db\u820d\u4e94\u5165\u3001\u7f29\u653e\u548c\u9971\u548c\u3002\u7f29\u653e\u79fb\u4f4d\u91cf\u6765\u81ea\u4e8e\u4e00\u4e2a\u77e9\u9635\uff08\u7531 ms1 \u6307\u5b9a\uff09\u6216\u4e00\u4e2a\u5411\u91cf\uff08ms1[uimm3]\uff09\uff0c\u5176\u4e2d uimm3 \u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u7acb\u5373\u6570\u7d22\u5f15\uff0c\u7528\u4e8e\u4ece ms1 \u4e2d\u9009\u62e9\u7279\u5b9a\u7684\u5411\u91cf\u5143\u7d20\u3002\u5bf9\u4e8e 64 \u4f4d\u6e90\u6570\u636e\u5bbd\u5ea6\uff0c\u4f7f\u7528\u4f4e 6 \u4f4d\uff1b\u5bf9\u4e8e 32 \u4f4d\u6e90\u6570\u636e\u5bbd\u5ea6\uff0c\u4f7f\u7528\u4f4e 5 \u4f4d\u3002\u66f4\u9ad8\u7684\u4f4d\u88ab\u5ffd\u7565\u3002\u5982\u679c\u76ee\u6807\u503c\u6ea2\u51fa\uff0c\u5219\u8bbe\u7f6e\u9971\u548c\u6807\u5fd7 xmsat\u3002\u5bf9\u4e8e clip \u6307\u4ee4\uff0c\u56db\u820d\u4e94\u5165\u5728\u9971\u548c\u4e4b\u524d\u8fdb\u884c\u3002</p> </li> <li> <p><code>msll</code>\u3001<code>msrl</code> \u548c <code>msra</code> \u6307\u4ee4\uff1a\u8fd9\u4e9b\u6307\u4ee4\u5206\u522b\u6267\u884c\u903b\u8f91\u5de6\u79fb\uff08Logical Shift Left\uff09\u3001\u903b\u8f91\u53f3\u79fb\uff08Logical Shift Right\uff09\u548c\u7b97\u672f\u53f3\u79fb\uff08Arithmetic Shift Right\uff09\u3002\u6e90\u6570\u636e\u4f4d\u4e8e ms2 \u4e2d\u3002\u79fb\u4f4d\u91cf\u7531\u77e9\u9635/\u5411\u91cf\u6570\u636e\u63d0\u4f9b\uff0c\u5177\u4f53\u7531 ms1/ms1[uimm3] \u6307\u5b9a\u3002\u77e9\u9635\u79fb\u4f4d\u6307\u4ee4\u652f\u6301\u56db\u820d\u4e94\u5165\uff0c\u56db\u820d\u4e94\u5165\u6a21\u5f0f\u7531 xmxrm \u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668\uff08CSR\uff09\u6307\u5b9a\u3002</p> </li> </ul> <pre><code>    #matrix-matrix logical left shift\n    msll.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector logical left shift\n    msll.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix logic right shift\n    msrl.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector logic right shift\n    msrl.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix arithmetic right shift\n    msra.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector arithmetic right shift\n    msra.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix signed clip\n    mn4clip.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector clip,uimm3\n    mn4clip.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix unsigned clip\n    mn4clipu.&lt;s/d&gt;.mm md, ms2, ms1\n    #matrix-vector clip,uimm3\n    mn4clipu.&lt;s/d&gt;.mv.i md, ms2, ms1[uimm3]\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_10","title":"\u6d6e\u70b9\u7b97\u6570\u6307\u4ee4","text":"<p>\u5bf9\u4e8e\u6d6e\u70b9\u77e9\u9635\u9010\u70b9\u8fd0\u7b97\u7684\u6307\u4ee4\u683c\u5f0f\uff0c\u5305\u62ec\u77e9\u9635-\u77e9\u9635\u548c\u77e9\u9635-\u5411\u91cf\u7684\u8fd0\u7b97\uff0c\u53ef\u9009\u5730\u652f\u630116\u4f4d\u300132\u4f4d\u548c64\u4f4d\u6d6e\u70b9\u9010\u70b9\u8fd0\u7b97\u3002</p> <p>\u975e\u52a0\u5bbd\u6d6e\u70b9\u9010\u70b9\u6307\u4ee4\u5305\u62ec mfadd\uff08\u6d6e\u70b9\u52a0\u6cd5\uff09\u3001mfsub\uff08\u6d6e\u70b9\u51cf\u6cd5\uff09\u3001mfmul\uff08\u6d6e\u70b9\u4e58\u6cd5\uff09\u3001mfmax\uff08\u6d6e\u70b9\u6700\u5927\u503c\uff09\u3001mfmin\uff08\u6d6e\u70b9\u6700\u5c0f\u503c\uff09\u3002</p> <pre><code>    #matrix-matrix fadd\n    mfadd.&lt;h/s/d&gt;.mm md, ms2, ms1\n    #matrix-vector fadd\n    mfadd.&lt;h/s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix fsub\n    mfsub.&lt;h/s/d&gt;.mm md, ms2, ms1\n    #matrix-vector sub\n    mfsub.&lt;h/s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix fmul\n    mfmul.&lt;h/s/d&gt;.mm md, ms2, ms1\n    #matrix-vector fmul\n    mfmul.&lt;h/s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix fmax\n    mfmax.&lt;h/s/d&gt;.mm md, ms2, ms1\n    #matrix-vector fmax\n    mfmax.&lt;h/s/d&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix fmin\n    mfmin.&lt;h/s/d&gt;.mm md, ms2, ms1\n    #matrix-vector fmin\n    mfmin.&lt;h/s/d&gt;.mv.i md, ms2, ms1[uimm3]  \n</code></pre> <p>\u5bf9\u4e8e\u52a0\u5bbd\u6d6e\u70b9\u9010\u70b9\u6307\u4ee4\uff0c\u7531\u4e8e\u76ee\u6807\u77e9\u9635\u7684\u6570\u636e\u5bbd\u5ea6\u662f\u6e90\u77e9\u9635\u7684\u4e24\u500d\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u77e9\u9635\u5bc4\u5b58\u5668\uff08\u5bc4\u5b58\u5668\u5bf9\uff09\u6765\u8868\u793a\u76ee\u6807\u77e9\u9635\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7531 md \u548c md+1 \u6307\u5b9a\uff0c\u5176\u4e2d md \u662f\u76ee\u6807\u77e9\u9635\u7684\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u6807\u8bc6\u7b26\u3002</p> <pre><code>    #matrix-matrix widen fadd\n    mfwadd.&lt;h/s&gt;.mm md, ms2, ms1\n    #matrix-vector widen fadd\n    mfwadd.&lt;h/s&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix widen fsub\n    mfwsub.&lt;h/s&gt;.mm md, ms2, ms1\n    #matrix-vector widen fsub\n    mfwsub.&lt;h/s&gt;.mv.i md, ms2, ms1[uimm3]\n    #matrix-matrix widen fmul\n    mfwmul.&lt;h/s&gt;.mm md, ms2, ms1\n    #matrix-vector widen fmul\n    mfwmul.&lt;h/s&gt;.mv.i md, ms2, ms1[uimm3] \n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_11","title":"\u6d6e\u70b9\u8f6c\u6362\u6307\u4ee4","text":"<p>\u8f6c\u6362\u6307\u4ee4\u5c06\u6bcf\u4e2a\u5143\u7d20\u4ecems1\u8f6c\u6362\u5230\u76ee\u6807\u5bc4\u5b58\u5668md1\u3002\u6307\u4ee4mfncvt\u652f\u6301\u7a84\u8f6c\u6362\uff0c\u6e90\u5143\u7d20\u7684\u5bbd\u5ea6\u662f\u76ee\u6807\u5143\u7d20\u7684\u4e24\u500d\uff0c\u5bc4\u5b58\u5668ms\u548cms+1\u6307\u5b9a\u7684\u6e90\u77e9\u9635\u4f7f\u7528\u4e24\u4e2a\u77e9\u9635\u5bc4\u5b58\u5668\uff08\u5bc4\u5b58\u5668\u5bf9\uff09\u3002</p> <p></p> <p>\u6307\u4ee4mfwcvt\u652f\u6301\u52a0\u5bbd\u8f6c\u6362\uff0c\u76ee\u6807\u5143\u7d20\u7684\u5bbd\u5ea6\u662f\u6e90\u5143\u7d20\u7684\u4e24\u500d\uff0c\u76ee\u6807\u77e9\u9635\u4f7f\u7528\u4e24\u4e2a\u77e9\u9635\u5bc4\u5b58\u5668\uff08\u5bc4\u5b58\u5668\u5bf9\uff09\u3002\u4fdd\u7559\u4e86\u6307\u5b9a\u5947\u6570md\u7684\u6307\u4ee4\u3002</p> <p></p> <pre><code>    #matrix-matrix floating point narrow convert(fp32tofp16 fp64tofp32)\n    mfncvt.&lt;s/d&gt;.mm md, ms1\n    #matrix-matrix floating point widen convert(fp16tofp32 fp32tofp64)\n    mfwcvt.&lt;h/s&gt;.mm md, ms1\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_12","title":"\u6d6e\u70b9\u6574\u6570\u8f6c\u6362\u6307\u4ee4","text":"<p>\u4ece\u6574\u6570\u5230\u6d6e\u70b9\u6570\u7684\u8f6c\u6362\u652f\u6301\u975e\u52a0\u5bbd\u8f6c\u6362/\u53cc\u52a0\u5bbd\u8f6c\u6362\u3002\u6574\u6570\u652f\u6301\u6709\u7b26\u53f7\u6574\u6570\u548c\u65e0\u7b26\u53f7\u6574\u6570\u3002\u5bf9\u4e8e\u53cc\u52a0\u5bbd\u8f6c\u6362\uff0c\u7531md\u548cmd+1\u6307\u5b9a\u7684\u76ee\u6807\u77e9\u9635\u4f7f\u7528\u4e24\u4e2a\u77e9\u9635\u5bc4\u5b58\u5668\u3002\u4fdd\u7559\u4e86\u6307\u5b9a\u5947\u6570md\u7684\u6307\u4ee4\u3002</p> <pre><code>    #matrix-matrix unsigned integer floating point convert(uint32 to fp32)\n    mufcvt.&lt;w&gt;.mm md, ms2\n    #matrix-matrix signed integer floating point widen convert(uint8 to fp16)\n    mufwcvt.&lt;b&gt;.mm md, ms2\n    #matrix-matrix signed integer floating point convert(sint32 to fp32)\n    msfcvt.&lt;w&gt;.mm md, ms2\n    #matrix-matrix signed integer floating point widen convert(sint8 to fp16)\n    msfwcvt.&lt;b&gt;.mm md, ms2\n</code></pre> <p>\u4ece\u6d6e\u70b9\u8f6c\u6362\u5230\u6574\u6570\u7684\u8f6c\u6362\u652f\u6301\u975e\u7a84\u8f6c\u6362/\u534a\u7a84\u8f6c\u6362\u3002\u6574\u6570\u652f\u6301\u6709\u7b26\u53f7\u6574\u6570\u548c\u65e0\u7b26\u53f7\u6574\u6570\u3002\u5bf9\u4e8e\u534a\u7a84\u8f6c\u6362\uff0c\u7531ms\u548cms+1\u6307\u5b9a\u7684\u6e90\u77e9\u9635\u4f7f\u7528\u4e24\u4e2a\u77e9\u9635\u5bc4\u5b58\u5668\u3002\u4fdd\u7559\u6307\u5b9a\u5947\u6570ms\u7684\u6307\u4ee4\u3002</p> <pre><code>    #matrix-matrix floating point unsigned integer convert(fp32 to uint32)\n    mfucvt.&lt;s&gt;.mm md, ms2\n    #matrix-matrix floating point unsigned integer narrow convert(fp16 to uint8)\n    mfuncvt.&lt;h&gt;.mm md, ms2\n    #matrix-matrix floating point signed integer convert(fp32 to sint32)\n    mfscvt.&lt;s&gt;.mm md, ms2\n    #matrix-matrix floating point signed integer narrow convert(fp16 to sint8)\n    mfsncvt.&lt;h&gt;.mm md, ms2\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_13","title":"\u5176\u4ed6\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/Mareix/#_14","title":"\u7f6e\u96f6\u6307\u4ee4","text":"<p>Mzero\u6307\u4ee4\u5c06\u76ee\u6807\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u96f6\u3002</p> <pre><code>    #matrix-matrix\n    mzero md\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_15","title":"\u91ca\u653e\u6307\u4ee4","text":"<p>Mrelease\u6307\u4ee4\u5c06MS\u8bbe\u7f6e\u4e3a\u521d\u59cb\u72b6\u6001\u3002</p> <pre><code>    mrelease\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_16","title":"\u77e9\u9635\u79fb\u52a8\u6307\u4ee4","text":"<p>\u77e9\u9635\u79fb\u52a8\u6307\u4ee4\u5ffd\u7565\u77e9\u9635\u5927\u5c0f\u914d\u7f6e\u3002</p> <ul> <li>\u5728\u77e9\u9635\u5bc4\u5b58\u5668\u4e4b\u95f4\u79fb\u52a8</li> </ul> <pre><code>    #matrix-matrix mov\n    mmov.mm md, ms1\n    #matrix-vector add,rs1'/uimm3\uff0cmmov.mv.i\u6307\u4ee4\u79fb\u52a8\u5e76\u590d\u5236\u4e00\u4e2a\u5411\u91cf\u5230\u76ee\u6807\u77e9\u9635\u5bc4\u5b58\u5668\u7684\u6bcf\u4e00\u884c\u3002\u5411\u91cf\u6570\u636e\u662f\u4e00\u884c\u77e9\u9635\u5bc4\u5b58\u5668\uff0c\u7531uimm3\u8fdb\u884c\u7d22\u5f15\u3002\n    mmov.mv.i md, ms1[uimm3]\n</code></pre> <ul> <li>\u4eceGPR\u79fb\u52a8\u5230\u77e9\u9635\u5bc4\u5b58\u5668</li> </ul> <pre><code>    #matrix-scalar mov with duplicate\n    #mdup&lt;b/h/w/d&gt;.m.x \u6307\u4ee4\u7528\u4e8e\u5c06\u4e00\u4e2a\u6807\u91cf\u6570\u636e\u79fb\u52a8\u5e76\u590d\u5236\u5230\u76ee\u6807\u77e9\u9635\u5bc4\u5b58\u5668\u7684\u6bcf\u4e2a\u5143\u7d20\u4e2d\n    mdup&lt;b/h/w/d&gt;.m.x md, rs2\n    #matrix-scalar mov\n    #mmov&lt;b/h/w/d&gt;.m.x \u6307\u4ee4\u7528\u4e8e\u5c06\u4e00\u4e2a\u6807\u91cf\u6570\u636e\u79fb\u52a8\u5230\u76ee\u6807\u77e9\u9635\u5bc4\u5b58\u5668\u7684\u7279\u5b9a\u5143\u7d20\u4e2d\uff0c\u884c\u53f7\u7531rs1\u9009\u62e9\uff0c\u6807\u91cf\u6570\u636e\u53d6\u81ears2\u6307\u5b9a\u7684\u6807\u91cfx\u5bc4\u5b58\u5668\u3002\n    mmov&lt;b/h/w/d&gt;.m.x md, rs2, rs1\n</code></pre> <ul> <li>\u4ece\u77e9\u9635\u5bc4\u5b58\u5668\u79fb\u52a8\u5230GPR</li> </ul> <pre><code>    mmov&lt;b/h/w/d&gt;.x.m rd, ms2, rs1\n</code></pre>"},{"location":"Coprocessor/ISA/Mareix/#_17","title":"\u6307\u4ee4\u5217\u8868","text":"<p> XuantieSpec</p> <p>https://github.com/XUANTIE-RV/riscv-matrix-extension-spec</p> <p> XimuSpec</p> <p>https://github.com/riscv-stc</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/","title":"RVV-Crypto","text":""},{"location":"Coprocessor/ISA/RVV-Crypto/#_1","title":"\u7b80\u4ecb","text":"<p>Cryptography Volume I\uff1a\u6807\u91cf\u548c\u71b5\u6e90\u6307\u4ee4\uff0c\u63cf\u8ff0\u4e86\u5bf9\u4e0d\u5b9e\u73b0\u5411\u91cf\u6269\u5c55\u7684\u8f83\u5c0f\u6838\u7684\u52a0\u5bc6\u6307\u4ee4\u5efa\u8bae</p> <p>Cryptography Volume II\uff1aRISC-V\u5411\u91cf\u5bc6\u7801\u5b66\u6269\u5c55\u3002\u8fd9\u91cc\u63d0\u51fa\u7684\u6240\u6709\u6307\u4ee4\u90fd\u662f\u57fa\u4e8e\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u3002\u8fd9\u4e9b\u6307\u4ee4\u88ab\u8bbe\u8ba1\u4e3a\u5177\u6709\u8f83\u9ad8\u6027\u80fd\u7684\u6307\u4ee4\uff0c\u4ee5\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u5668\u7c7b\u6838\u5fc3\u4e3a\u4e3b\u8981\u76ee\u6807\u3002</p> <p>\u5bf9\u4e8e\u52a0\u89e3\u5bc6\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0c\u4f7f\u7528\u9ad8\u7ea7\u8bed\u8a00\u5982C\u8bed\u8a00\u7f16\u7a0b\u4f1a\u56e0\u5b58\u5728\u5927\u91cf\u91cd\u590d\u8fd0\u7b97\u800c\u4ea7\u751f\u66f4\u591a\u7684\u6307\u4ee4\uff0c\u6267\u884c\u6548\u7387\u4f4e\uff0c\u7279\u522b\u662f\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e2d\u3002\u867d\u7136\u4f7f\u7528FPGA\u5b9e\u73b0\u52a0\u89e3\u5bc6\u52a0\u901f\u5668\u901f\u5ea6\u6700\u5feb\uff0c\u4f46\u5176\u901a\u7528\u6027\u53d7\u9650\uff0c\u4e14\u4ec5\u5728FPGA\u4e0a\u5b9e\u73b0\u52a0\u89e3\u5bc6\u7b97\u6cd5\u4e5f\u6d6a\u8d39\u8d44\u6e90\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4f7f\u7528\u52a0\u89e3\u5bc6\u6307\u4ee4\u5b9e\u73b0\u52a0\u89e3\u5bc6\u7b97\u6cd5\u517c\u987e\u901a\u7528\u6027\u548c\u786c\u4ef6\u52a0\u901f\u6027\u80fd\u3002</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvbb","title":"Zvbb","text":"<p>\u5411\u91cf\u57fa\u672c\u4f4d\u64cd\u4f5c\u6307\u4ee4</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvbc","title":"Zvbc","text":"<p>\u5411\u91cf\u65e0\u8fdb\u4f4d\u4e58\u6cd5</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvkb","title":"Zvkb","text":"<p>\u5411\u91cf\u4f4d\u64cd\u4f5c</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvkg","title":"Zvkg","text":"<p>\u65e8\u5728\u5b9e\u73b0\u5728\u4f3d\u7f57\u74e6/\u8ba1\u6570\u5668\u6a21\u5f0f\uff08GCM\uff09\u548c\u4f3d\u7f57\u74e6\u6d88\u606f\u8eab\u4efd\u9a8c\u8bc1\u4ee3\u7801\uff08GMAC\uff09\u4e2d\u4f7f\u7528\u7684GHASHH\u7684\u6709\u6548\u5b9e\u73b0\u7684\u6307\u4ee4</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvkned","title":"Zvkned","text":"<p>\u5411\u91cfAES\u52a0\u901f</p> <p>\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\uff08\u82f1\u8bed\uff1aAdvanced Encryption Standard\uff0c\u7f29\u5199\uff1aAES\uff09\uff0c\u53c8\u79f0Rijndael\u52a0\u5bc6\u6cd5\uff08\u8377\u5170\u8bed\u53d1\u97f3\uff1a[\u02c8r\u025binda\u02d0l]\uff0c\u97f3\u4f3c\u82f1\u6587\u7684\u201cRhine doll\u201d\uff09\uff0c\u662f\u7f8e\u56fd\u8054\u90a6\u653f\u5e9c\u91c7\u7528\u7684\u4e00\u79cd\u533a\u5757\u52a0\u5bc6\u6807\u51c6\u3002\u8fd9\u4e2a\u6807\u51c6\u7528\u6765\u66ff\u4ee3\u539f\u5148\u7684DES\uff0c\u5df2\u7ecf\u88ab\u591a\u65b9\u5206\u6790\u4e14\u5e7f\u4e3a\u5168\u4e16\u754c\u6240\u4f7f\u7528\u3002\u7ecf\u8fc7\u4e94\u5e74\u7684\u7504\u9009\u6d41\u7a0b\uff0c\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\u7531\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u9662\uff08NIST\uff09\u4e8e2001\u5e7411\u670826\u65e5\u53d1\u5e03\u4e8eFIPS PUB 197\uff0c\u5e76\u57282002\u5e745\u670826\u65e5\u6210\u4e3a\u6709\u6548\u7684\u6807\u51c6\u3002\u73b0\u5728\uff0c\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\u5df2\u7136\u6210\u4e3a\u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u4e2d\u6700\u6d41\u884c\u7684\u7b97\u6cd5\u4e4b\u4e00</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvknh","title":"Zvknh","text":"<p>\u5411\u91cfSHA-256\u3001SHA-512 \u52a0\u901f</p> <p>SHA-256\u548cSHA-512\u90fd\u5c5e\u4e8eSHA-2\uff08\u5b89\u5168\u6563\u5217\u7b97\u6cd52\uff09\uff0c\u540c\u6837\u4e5f\u7531NIST\u53d1\u5e03\uff0c\u53d6\u4ee3\u5df2\u7ecf\u4e0d\u518d\u5b89\u5168\u7684SHA-1\uff0c\u662f\u76ee\u524d\u4e3b\u6d41\u7684\u6563\u5217\u7b97\u6cd5\u3002</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvksed","title":"Zvksed","text":"<p>\u5411\u91cfSM-4 \u52a0\u901f</p> <p>SM4\u662f\u4e00\u79cd\u5206\u7ec4\u5bc6\u7801\u7b97\u6cd5\uff0c\u4e5f\u7531\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u53d1\u5e03\u3002</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvksh","title":"Zvksh","text":"<p>\u5411\u91cfSHA-3 \u52a0\u901f</p> <p>SM3\u5c5e\u4e8e\u56fd\u5bc6\u7b97\u6cd5\uff0c\u7531\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u53d1\u5e03\uff0c\u662f\u6211\u56fd\u81ea\u4e3b\u8bbe\u8ba1\u7684\u4e00\u79cd\u6563\u5217\u7b97\u6cd5\u3002</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvkn","title":"Zvkn","text":"<p>Zvkned\u3001Zvknhb\u3001Zvkb\u3001Zvkt</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvknc","title":"Zvknc","text":"<p>Zvkn\u3001Zvbc</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvkng","title":"Zvkng","text":"<p>Zvkn\u3001Zvkg</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvks","title":"Zvks","text":"<p>Zvksed\u3001Zvksh\u3001Zvkb\u3001Zvkt</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvksc","title":"Zvksc","text":"<p>Zvks\u3001Zvbc</p>"},{"location":"Coprocessor/ISA/RVV-Crypto/#zvksg","title":"Zvksg","text":"<p>Zvks\u3001Zvkg</p>"},{"location":"Coprocessor/ISA/RVV-Intrinsics/","title":"RVV-Intrinsics","text":"<p>Intrinsics\u4e00\u822c\u662f\u6307\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4f4e\u7ea7\u6c47\u7f16\u8bed\u8a00\u7684\u63a5\u53e3\u3002\u8fd9\u4efdIntrinsics\u7684API\u7684\u76ee\u6807\u662f\u8ba9C/C++\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u7684RISC-V \"V\"(\u5411\u91cf)\u6269\u5c55\u7684\u6307\u4ee4\u3002\u6240\u4ee5\u8fd9\u4e9bIntrinsics\u7684\u547d\u540d\u5f88\u63a5\u8fd1\u6c47\u7f16\u6307\u4ee4\u7684\u52a9\u8bb0\u7b26\u3002\u9664\u4e86\u4e0e\u6c47\u7f16\u52a9\u8bb0\u7b26\u76f8\u5bf9\u5e94\u7684\u57fa\u672cIntrinsics\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u63a5\u8fd1\u8bed\u4e49(semantic)\u547d\u540d\u7684Intrinsics\u3002</p>"},{"location":"Coprocessor/ISA/RVV-Intrinsics/#_1","title":"\u547d\u540d\u89c4\u5219","text":"<p>\u901a\u5e38\uff0cIntrinsics\u7684\u547d\u540d\u89c4\u5219\u5982\u4e0b\uff1a</p> <pre><code>    Intrinsic\u547d\u540d\uff1a\n    INTRINSIC ::= MNEMONIC '_' RET_TYPE\n    MNEMONIC ::= Instruction name in v-ext specification. Replace '.' with '_'.\n    RET_TYPE ::= SEW LMUL\n    SEW ::= ( i8 | i16 | i32 | i64 | u8 | u16 | u32 | u64 | f16 | f32 | f64 )\n    LMUL ::= ( m1 | m2 | m4 | m8 )\n    Example:\n    vadd.vv vd, vs2, vs1:\n    vint8m1_t vadd_vv_i8m1(vint8m1_t vs2, vint8m1_t vs1)\n\n    \u6570\u636e\u7c7b\u578b\uff1a\n    v&lt;\u57fa\u672c\u7c7b\u578b&gt;m&lt;\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4lmul&gt;_t \u5176\u4e2d\uff1a\n    \u57fa\u672c\u7c7b\u578b\uff1aint8\uff0cint16\uff0cint32\uff0cint64\uff0cuint8\uff0cuint16\uff0cuint32\uff0cuint64\uff0cfloat16\uff0cfloat32\n    \u5411\u91cf\u5bc4\u5b58\u5668\u7ec4 lmul\uff1a1\uff0c2\uff0c4\uff0c8\n    Example:\n    vint32m1_t\uff1a 1\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u4e2d\u5b58\u653e vl \u4e2aint32 \u6570\u636e, 0 &lt; vl &lt;= 4 (vlen/sewlmul=128/321=4 )\n    vfloat32m1_t\uff1a1\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u4e2d\u5b58\u653e vl \u4e2afloat32\u6570\u636e, 0 &lt; vl &lt;=4\n</code></pre>"},{"location":"Coprocessor/ISA/RVV-Intrinsics/#_2","title":"\u793a\u4f8b","text":"<p>\u901a\u8fc7\u6570\u7ec4\u76f8\u52a0\u7684\u4f8b\u5b50\u5bf9 vector \u6269\u5c55 intrinsic \u4f7f\u7528\u4f5c\u7b80\u5355\u4ecb\u7ecd\uff1b\u5047\u8bbe\u6709\u957f\u5ea6\u4e3a ARRAY_LEN \u7684 float \u7c7b\u578b\u6570\u7ec4 A\uff0cB\uff0cC\uff0c\u4e3a\u4e86\u5b9e\u73b0 C = A + B\uff0c\u6709\uff1a</p> <p>\u666e\u901a\u6807\u91cf\u5b9e\u73b0:\u5728\u5faa\u73af\u4e2d\u5bf9\u6570\u7ec4 A\uff0cB \u4e2d\u7684\u6d6e\u70b9\u6570\u9010\u4e2a\u76f8\u52a0\uff0c\u5faa\u73af\u7684\u6b21\u6570\u4e3a ARRAY_LEN \u6b21\u3002</p> <pre><code>    void add(const float *a, const float *b, float *c, size_t length)\n    {\n        for (int i = 0; i &lt; length; i++) {\n            c[i] = a[i] + b[i];\n        }\n    }\n</code></pre> <p>intrinsic \u5411\u91cf\u5316\u5b9e\u73b0:\u5728\u5faa\u73af\u4e2d\u4e00\u6b21\u5bf9\u6570\u7ec4 A\uff0cB \u4e2d\u7684\u591a\u4e2a\u6d6e\u70b9\u6570\u76f8\u52a0\uff1a</p> <pre><code>    void add_vec(const float *a, const float *b, float *c, size_t length)\n    {\n        while (length &gt; 0) {\n            size_t vl = vsetvl_e32m1(length);       // \u8bbe\u7f6e\u5411\u91cf\u5bc4\u5b58\u5668\u6bcf\u6b21\u64cd\u4f5c\u7684\u5143\u7d20\u4e2a\u6570\n            vfloat32m1_t va = vle32_v_f32m1(a, vl); // \u4ece\u6570\u7ec4a\u4e2d\u52a0\u8f7dvl\u4e2a\u5143\u7d20\u5230\u5411\u91cf\u5bc4\u5b58\u5668va\u4e2d\n            vfloat32m1_t vb = vle32_v_f32m1(b, vl); // \u4ece\u6570\u7ec4b\u4e2d\u52a0\u8f7dvl\u4e2a\u5143\u7d20\u5230\u5411\u91cf\u5bc4\u5b58\u5668vb\u4e2d\n            vfloat32m1_t vc = vfadd_vv_f32m1(va, vb, vl);   // \u5411\u91cf\u5bc4\u5b58\u5668va\u548c\u5411\u91cf\u5bc4\u5b58\u5668vb\u4e2dvl\u4e2a\u5143\u7d20\u5bf9\u5e94\u76f8\u52a0\uff0c\u7ed3\u679c\u4e3avc\n            vse32_v_f32m1(c, vc, vl);   // \u5c06\u5411\u91cf\u5bc4\u5b58\u5668\u4e2d\u7684vl\u4e2a\u5143\u7d20\u5b58\u5230\u6570\u7ec4c\u4e2d\n\n            a += vl;\n            b += vl;\n            c += vl;\n            length -= vl;\n        }\n    }\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/","title":"RISC-V Vector","text":"<p>RISC-V\u6307\u4ee4\u96c6\u67b6\u6784\u4e2d\u7684\u5411\u91cf\u6307\u4ee4\u96c6\u6269\u5c55RVV\uff08RISC-V \u201cV\u201d Vector\uff09\uff0c\u5177\u6709\u5411\u91cf\u957f\u5ea6\u548c\u5411\u91cf\u4f4d\u5bbd\u7075\u6d3b\u53ef\u53d8\u3001\u63d0\u4f9b\u591a\u79cd\u5bfb\u5740\u6a21\u5f0f\u3001\u62e5\u6709\u7528\u4e8e\u652f\u6301\u6761\u4ef6\u6267\u884c\u7684\u63a9\u7801\u5bc4\u5b58\u5668\u7b49\u7279\u70b9\u3002\u76ee\u524dRVV\u6269\u5c55\u7684\u89c4\u683c\u6587\u6863\u5df2\u53d1\u5e03\u4e86\u7a33\u5b9a\u76841.0\u7248\u672c\uff0cRISC-V\u5411\u91cf\u52a0\u89e3\u5bc6\u6807\u51c6\u4e5f\u57282023\u5e7410\u6708\u53d1\u5e03\u4e861.0\u6b63\u5f0f\u7248\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_1","title":"\u5411\u91cf\u6269\u5c55\u7f16\u7a0b\u6a21\u578b","text":"<p>\u5411\u91cf\u6269\u5c55\u4e3a\u57fa\u672c\u7684\u6807\u91cfRISC-V ISA\u6dfb\u52a0\u4e8632\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u548c\u4e03\u4e2a\u975e\u7279\u6743\u63a7\u5236\u4e0e\u72b6\u6001\u5bc4\u5b58\u5668CSR\uff08vstart\u3001vxsat\u3001vxrm\u3001vcsr\u3001vtype\u3001vl\u3001vlenb\uff09</p> \u5730\u5740 \u6743\u9650 \u540d\u79f0 \u63cf\u8ff0 0x008 URW vstart \u5411\u91cf\u8d77\u59cb\u4f4d\u7f6e 0x009 URW vxsat \u5b9a\u70b9\u9971\u548c\u6807\u5fd7 0x00A URW vxrm \u5b9a\u70b9\u820d\u5165\u6a21\u5f0f 0x00F URW vcsr \u5411\u91cf\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668 0xC20 URO vl \u5411\u91cf\u4e2a\u6570 0xC21 URO vtype \u5411\u91cf\u7c7b\u578b 0xC22 URO vlenb VLEN/8 <p>Vector type register </p> Bits Name Description XLEN-1 vill \u975e\u6cd5\u503c XLEN-2\uff1a8 0 \u4fdd\u7559 7 vma \u975e\u6d3b\u8dc3\u6570\u636e\u5143\u7d20\u5904\u7406\u7b56\u7565 6 vta \u5c3e\u90e8\u6570\u636e\u5143\u7d20\u5904\u7406\u7b56\u7565 5\uff1a3 vsew[2:0] SEW 2\uff1a0 vlmul[2:0] LMUL"},{"location":"Coprocessor/ISA/RVV/#_2","title":"\u5411\u91cf\u5143\u7d20\u5230\u5411\u91cf\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u6620\u5c04","text":"LMUL &lt; 1LMUL = 1LMUL &gt; 1 <pre><code>    VLEN=128b, LMUL=1/4\n    Byte    F E D C B A 9 8 7 6 5 4 3 2 1 0\n    SEW=8b  - - - - - - - - - - - - 3 2 1 0\n    SEW=16b   -   -   -   -   -   -   1   0\n    SEW=32b       -       -       -       0\n</code></pre> <pre><code>    VLEN=128b\n    Byte    F E D C B A 9 8 7 6 5 4 3 2 1 0\n    SEW=8b  F E D C B A 9 8 7 6 5 4 3 2 1 0\n    SEW=16b   7   6   5   4   3   2   1   0\n    SEW=32b       3       2       1       0\n    SEW=64b               1               0\n</code></pre> <pre><code>    VLEN=128b, SEW=32b, LMUL=4\n    Byte   F E D C B A 9 8 7 6 5 4 3 2 1 0\n    v4*n         3       2       1       0\n    v4*n+1       7       6       5       4\n    v4*n+2       B       A       9       8\n    v4*n+3       F       E       D       C\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_3","title":"\u5411\u91cf\u914d\u7f6e\u6307\u4ee4","text":"<p>\u5411\u91cf\u914d\u7f6e\u548c\u8bbe\u7f6e\u6307\u4ee4\u7684\u683c\u5f0f: </p> <p>vset{i}vl{i}\u6307\u4ee4\u6839\u636e\u5176\u53c2\u6570\u8bbe\u7f6evtype\u548cvl\u3002</p> <pre><code>    vsetvli rd, rs1, vtypei     #rd= new vl, rs1  = AVL, vtypei = new vtype setting\n    vsetivli rd, uimm, vtypei   #rd= new vl, uimm = AVL, vtypei = new vtype setting\n    vsetvl  rd, rs1, rs2        #rd= new vl, rs1  = AVL, rs2    = new vtype value\n</code></pre> <pre><code>    vsetvli t0, a0, e16, m4, ta, ma    # (1)!\n</code></pre> <ol> <li>t0\u5bc4\u5b58\u5668\u5b58\u653e\u4e00\u6b21\u80fd\u5904\u7406\u7684\u6570\u636e\u5143\u7d20\u6570\u91cf\uff0ca0\u5bc4\u5b58\u5668\u5b58\u653e\u5f85\u5904\u7406\u6570\u636e\u5143\u7d20\u6570\u91cf\uff0c\u6570\u636e\u5143\u7d20\u4f4d\u5bbd16\u4f4d\uff0c4\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u4e3a\u4e00\u7ec4\uff0cta\u5c3e\u90e8\u91c7\u53d6\u672a\u77e5\u7b56\u7565\uff0cma\u672a\u6d3b\u8dc3\u91c7\u53d6\u672a\u77e5\u7b56\u7565\u3002</li> </ol>"},{"location":"Coprocessor/ISA/RVV/#_4","title":"\u5411\u91cf\u52a0\u8f7d\u548c\u5b58\u50a8\u6307\u4ee4","text":"<p>\u5411\u91cf\u52a0\u8f7d\u548c\u5b58\u50a8\u6307\u4ee4\u7684\u683c\u5f0f:   \u5411\u91cf\u6269\u5c55\u652f\u63013\u79cd\u5730\u5740\u5bfb\u5740\u6a21\u5f0f\uff1a</p> <ul> <li>\u5355\u4f4d\u6b65\u957f<code>unit-stride</code></li> <li>\u4efb\u610f\u6b65\u957f<code>stride</code></li> <li>\u7d22\u5f15\uff08<code>gather-load/scatter-store</code>\uff09\u6a21\u5f0f<code>index</code></li> </ul> unit-stridestrideindex <pre><code># vd destination, rs1 base address, vm is mask encoding (v0.t or &lt;missing&gt;)\nvle8.v    vd, (rs1), vm  #    8-bit unit-stride load\nvle16.v   vd, (rs1), vm  #   16-bit unit-stride load\nvle32.v   vd, (rs1), vm  #   32-bit unit-stride load\nvle64.v   vd, (rs1), vm  #   64-bit unit-stride load\n# vs3 store data, rs1 base address, vm is mask encoding (v0.t or &lt;missing&gt;)\nvse8.v    vs3, (rs1), vm  #    8-bit unit-stride store\nvse16.v   vs3, (rs1), vm  #   16-bit unit-stride store\nvse32.v   vs3, (rs1), vm  #   32-bit unit-stride store\nvse64.v   vs3, (rs1), vm  #   64-bit unit-stride store\n</code></pre> <pre><code># Vector strided loads and stores\n# vd destination, rs1 base address, rs2 \u5bc4\u5b58\u5668\u5b57\u8282\u6570\u4e3astride\nvlse8.v    vd, (rs1), rs2, vm  #    8-bit strided load\nvlse16.v   vd, (rs1), rs2, vm  #   16-bit strided load\nvlse32.v   vd, (rs1), rs2, vm  #   32-bit strided load\nvlse64.v   vd, (rs1), rs2, vm  #   64-bit strided load\n# vs3 store data, rs1 base address,rs2 \u5bc4\u5b58\u5668\u5b57\u8282\u6570\u4e3astride\nvsse8.v    vs3, (rs1), rs2, vm  #    8-bit strided load\nvsse16.v   vs3, (rs1), rs2, vm  #   16-bit strided load\nvsse32.v   vs3, (rs1), rs2, vm  #   32-bit strided load    \nvsse64.v   vs3, (rs1), rs2, vm  #   64-bit strided load\n</code></pre> <pre><code># \u6709\u5e8f\u7d22\u5f15\uff0c\u8bbf\u95ee\u5185\u5b58\u65f6\u6309\u7167\u7d22\u5f15\u987a\u5e8f\u6709\u5e8f\u8bbf\u95ee\n# \u65e0\u5e8f\u7d22\u5f15\uff0c\u8bbf\u95ee\u5185\u5b58\u65f6\u4e0d\u4fdd\u8bc1\u8bbf\u95ee\u987a\u5e8f\n# Vector indexed-unordered load instructions \n# vd destination, rs1 base address, vs2 byte offsets\nvluxei8.v    vd, (rs1), vs2, vm  # unordered\nvluxei16.v   vd, (rs1), vs2, vm  # unordered\nvluxei32.v   vd, (rs1), vs2, vm  # unordered\nvluxei64.v   vd, (rs1), vs2, vm  # unordered\n# Vector indexed-ordered load instructions\n# vd destination, rs1 base address, vs2 byte offsets\nvloxei8.v    vd, (rs1), vs2, vm  # ordered \nvloxei16.v   vd, (rs1), vs2, vm  # ordered \nvloxei32.v   vd, (rs1), vs2, vm  # ordered \nvloxei64.v   vd, (rs1), vs2, vm  # ordered \n# Vector indexed-unordered store instructions\n# vs3 store data, rs1 base address, vs2 byte offsets\nvsuxei8.v   vs3, (rs1), vs2, vm # unordered \nvsuxei16.v  vs3, (rs1), vs2, vm # unordered \nvsuxei32.v  vs3, (rs1), vs2, vm # unordered \nvsuxei64.v  vs3, (rs1), vs2, vm # unordered \n# Vector indexed-ordered store instructions\n# vs3 store data, rs1 base address, vs2 byte offsets\nvsoxei8.v    vs3, (rs1), vs2, vm  # ordered\nvsoxei16.v   vs3, (rs1), vs2, vm  # ordered\nvsoxei32.v   vs3, (rs1), vs2, vm  # ordered\nvsoxei64.v   vs3, (rs1), vs2, vm  # ordered\n</code></pre> <p>Vector Load/Store Segment Instructions \u5c06\u6253\u5305\u7684\u8fde\u7eed\u6bb5\u79fb\u52a8\u5230\u591a\u4e2a\u76ee\u6807\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u4e2d</p> <p>Vector Load/Store Whole Register Instructions \u52a0\u8f7d\u548c\u5b58\u50a8\u6574\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4</p>"},{"location":"Coprocessor/ISA/RVV/#_5","title":"\u5411\u91cf\u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b","text":"<p>\u5411\u91cf\u5b58\u50a8\u5668\u6307\u4ee4\u5728\u6307\u4ee4\u7ea7\u9075\u5faa RVWMO</p> <p>RVWMO</p> <p>https://blog.csdn.net/jiahonghao2002/article/details/135819701</p>"},{"location":"Coprocessor/ISA/RVV/#_6","title":"\u5411\u91cf\u7b97\u672f\u6307\u4ee4","text":"<p>OP-V \u4e3b\u8981\u64cd\u4f5c\u7801\u4e0b\u5411\u91cf\u7b97\u672f\u6307\u4ee4\u7684\u683c\u5f0f: </p> <p>funct3\u7f16\u7801\u4e86\u64cd\u4f5c\u7c7b\u578b\u548c\u6e90\u5730\u5740</p> funct3[2:0] Category Operand Type of Scale Operand 000 OPIVV integer vector-vector N/A 001 OPFVV FP vector-vector N/A 010 OPMVV multiply-add vector-vector N/A 011 OPIVI integer vector-immediate imm[4:0] 100 OPIVX integer vector-scalar GPR x register rs1 101 OPFVF FP vector-scalar FP f register rs1 110 OPMVX multiply-add vector-scalar GPR x register rs1 111 OPCFG scalars-imms GPR x register rs1 &amp; rs2/imm"},{"location":"Coprocessor/ISA/RVV/#_7","title":"\u5411\u91cf\u6574\u6570\u7b97\u672f\u6307\u4ee4","text":"<p>\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5411\u91cf\u6574\u6570\u7b97\u672f\u6307\u4ee4\u3002\u9664\u975e\u53e6\u6709\u8bf4\u660e\uff0c\u5426\u5219\u6574\u6570\u8fd0\u7b97\u4f1a\u5728\u6ea2\u51fa\u65f6wrap\uff08 \u76f8\u5f53\u4e8e\u4e0d\u5bf9\u6ea2\u51fa\u505a\u7279\u6b8a\u5904\u7406\uff09\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_8","title":"\u5411\u91cf\u6574\u6570\u52a0\u6cd5\u548c\u51cf\u6cd5","text":"<pre><code>    # Integer adds.\n    vadd.vv vd, vs2, vs1, vm    # Vector-vector\n    vadd.vx vd, vs2, rs1, vm    # vector-scalar\n    vadd.vi vd, vs2, imm, vm    # vector-immediate\n    # Integer subtract\n    vsub.vv vd, vs2, vs1, vm     # Vector-vector\n    vsub.vx vd, vs2, rs1, vm     # vector-scalar\n    # Integer reverse subtract\n    vrsub.vx vd, vs2, rs1, vm    # vd[i] = x[rs1] - vs2[i]\n    vrsub.vi vd, vs2, imm, vm    # vd[i] = imm - vs2[i]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_9","title":"\u5411\u91cf\u5355\u5bbd\u5ea6\u4e58\u6cd5\u6307\u4ee4","text":"<p>\u5355\u5bbd\u5ea6\u4e58\u6cd5\u6307\u4ee4\u6267\u884cSEW\u4f4d*SEW\u4f4d\u7684\u4e58\u6cd5\u4ee5\u751f\u62102SEW\u4f4d\u4e58\u79ef\uff0c\u7136\u540e\u5728SEW\u4f4d\u5bbd\u7684\u76ee\u6807\u4f4d\u7f6e\u8fd4\u56de\u4e58\u79ef\u7684\u4e00\u534a\u3002mul\u7248\u672c\u5c06\u4e58\u79ef\u7684\u4f4e\u5b57\u5199\u5165\u76ee\u6807\u5bc4\u5b58\u5668\uff0c\u800cmulh\u7248\u672c\u5c06\u4e58\u79ef\u7684\u9ad8\u5b57\u5199\u5165\u76ee\u6807\u5bc4\u5b58\u5668\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_10","title":"\u5411\u91cf\u9664\u6cd5\u548c\u53d6\u4f59\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/RVV/#_11","title":"\u5411\u91cf\u5355\u5bbd\u5ea6\u6574\u6570\u4e58\u52a0\u6307\u4ee4","text":"<p>\u6574\u6570\u4e58\u52a0\u6307\u4ee4\u662f\u5177\u6709\u7834\u574f\u6027\u7684\uff08\u4f1a\u4fee\u6539\u6e90\u64cd\u4f5c\u5bc4\u5b58\u5668\u7684\u503c\uff09\uff0c\u6709\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u662f\u8986\u76d6\u52a0\u6570\u6216\u51cf\u6570\uff08vmacc, vnmsac\uff09\uff0c\u4e00\u79cd\u662f\u8986\u76d6\u7b2c\u4e00\u4e2a\u4e58\u6570\uff08vmadd, vnmsub\uff09\u3002</p> <p>\u4e58\u79ef\u7684\u4f4e\u534a\u90e8\u5206\u4e0e\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u6570\u76f8\u52a0\u6216\u76f8\u51cf</p> <pre><code>    # Integer multiply-add, overwrite addend\n    vmacc.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) + vd[i]\n    vmacc.vx vd, rs1, vs2, vm    # vd[i] = +(x[rs1] * vs2[i]) + vd[i]\n    # Integer multiply-sub, overwrite minuend\n    vnmsac.vv vd, vs1, vs2, vm    # vd[i] = -(vs1[i] * vs2[i]) + vd[i]\n    vnmsac.vx vd, rs1, vs2, vm    # vd[i] = -(x[rs1] * vs2[i]) + vd[i]\n    # Integer multiply-add, overwrite multiplicand\n    vmadd.vv vd, vs1, vs2, vm    # vd[i] = (vs1[i] * vd[i]) + vs2[i]\n    vmadd.vx vd, rs1, vs2, vm    # vd[i] = (x[rs1] * vd[i]) + vs2[i]\n    # Integer multiply-sub, overwrite multiplicand\n    vnmsub.vv vd, vs1, vs2, vm    # vd[i] = -(vs1[i] * vd[i]) + vs2[i]\n    vnmsub.vx vd, rs1, vs2, vm    # vd[i] = -(x[rs1] * vd[i]) + vs2[i]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_12","title":"\u52a0\u5bbd\u5411\u91cf\u52a0\u6cd5\u548c\u51cf\u6cd5","text":"<p>\u6839\u636e\u8f83\u7a84\u7684\u6e90\u64cd\u4f5c\u6570\u5728\u5f62\u6210\u53cc\u500d\u5bbd\u5ea6\u548c\u4e4b\u524d\u662f\u5426\u9996\u5148\u8fdb\u884c\u7b26\u53f7\u6269\u5c55\u6216\u96f6\u6269\u5c55\uff0c\u63d0\u4f9b\u4e86\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u4e24\u79cd\u6269\u5c55\u7684\u52a0/\u51cf\u6307\u4ee4\u3002</p> <pre><code>    # Widening unsigned integer add/subtract, 2*SEW= SEW +/- SEW\n    vwaddu.vv  vd, vs2, vs1, vm  # vector-vector\n    vwaddu.vx  vd, vs2, rs1, vm  # vector-scalar\n    vwsubu.vv  vd, vs2, vs1, vm  # vector-vector\n    vwsubu.vx  vd, vs2, rs1, vm  # vector-scalar\n    # Widening signed integer add/subtract, 2*SEW =SEW +/- SEW\n    vwadd.vv  vd, vs2, vs1, vm  # vector-vector\n    vwadd.vx  vd, vs2, rs1, vm  # vector-scalar\n    vwsub.vv  vd, vs2, vs1, vm  # vector-vector\n    vwsub.vx  vd, vs2, rs1, vm  # vector-scalar\n    # Widening unsigned integer add/subtract, 2*SEW= 2*SEW +/- SEW\n    vwaddu.wv  vd, vs2, vs1, vm  # vector-vector\n    vwaddu.wx  vd, vs2, rs1, vm  # vector-scalar\n    vwsubu.wv  vd, vs2, vs1, vm  # vector-vector\n    vwsubu.wx  vd, vs2, rs1, vm  # vector-scalar\n    # Widening signed integer add/subtract, 2*SEW =2*SEW +/- SEW\n    vwadd.wv  vd, vs2, vs1, vm  # vector-vector\n    vwadd.wx  vd, vs2, rs1, vm  # vector-scalar\n    vwsub.wv  vd, vs2, vs1, vm  # vector-vector\n    vwsub.wx  vd, vs2, rs1, vm  # vector-scalar\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_13","title":"\u5411\u91cf\u52a0\u5bbd\u6574\u6570\u4e58\u6cd5\u6307\u4ee4","text":"<p>\u52a0\u5bbd\u7684\u6574\u6570\u4e58\u6cd5\u6307\u4ee4\u4eceSEW\u4f4dSEW\u4f4d\u7684\u4e58\u6cd5\u4e2d\u8fd4\u56de\u5b8c\u6574\u76842SEW\u4f4d\u4e58\u79ef\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#-","title":"\u5411\u91cf\u52a0\u5bbd\u6574\u6570\u4e58\u6cd5-\u52a0\u6cd5\u6307\u4ee4","text":"<p>\u52a0\u5bbd\u7684\u6574\u6570\u4e58\u52a0\u6307\u4ee4\u5c06SEW\u4f4dSEW\u4f4d\u4e58\u6cd5\u7684\u5168\u90e82SEW\u4f4d\u4e58\u79ef\u52a0\u52302SEW\u4f4d\u503c\uff0c\u5e76\u4ea7\u751f2SEW\u4f4d\u7ed3\u679c\u3002\u652f\u6301\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u4e58\u6cd5\u64cd\u4f5c\u6570\u7684\u6240\u6709\u7ec4\u5408\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_14","title":"\u5411\u91cf\u6574\u6570\u6269\u5c55\u6307\u4ee4","text":"<p>\u5411\u91cf\u6574\u6570\u6269\u5c55\u6307\u4ee4\u5c06\u6e90\u5411\u91cf\u6574\u6570\u64cd\u4f5c\u6570\uff08\u5176EEW\u5c0f\u4e8eSEW\uff09\u8fdb\u884c\u96f6\u6269\u5c55\u6216\u7b26\u53f7\u6269\u5c55\uff0c\u4ee5\u586b\u5145\u76ee\u6807\u4e2d\u7684SEW\u5927\u5c0f\u5143\u7d20\u3002\u6e90\u7684EEW\u662fSEW\u7684\u00bd\u3001\u00bc\u6216\u215b\uff0c\u800c\u6e90\u7684EMUL\u4e3a(EEW/SEW)*LMUL\u3002\u76ee\u6807\u7684EEW\u7b49\u4e8eSEW\uff0cEMUL\u7b49\u4e8eLMUL</p>"},{"location":"Coprocessor/ISA/RVV/#_15","title":"\u5411\u91cf\u53d8\u7a84\u53f3\u79fb\u6307\u4ee4","text":"<p>\u53d8\u7a84\u6307\u4ee4\u4ece\u8f83\u5bbd\u7684\u64cd\u4f5c\u6570\u4e2d\u63d0\u53d6\u4e00\u4e2a\u8f83\u5c0f\u7684\u5b57\u6bb5\uff0c\u5e76\u5177\u6709\u96f6\u6269\u5c55\uff08srl\uff09\u548c\u7b26\u53f7\u6269\u5c55\uff08sra\uff09\u4e24\u79cd\u5f62\u5f0f\u3002\u79fb\u4f4d\u91cf\u53ef\u4ee5\u6765\u81ea\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u3001\u6807\u91cfx\u5bc4\u5b58\u5668\u6216\u96f6\u6269\u5c55\u76845\u4f4d\u7acb\u5373\u6570\u3002\u79fb\u4f4d\u91cf\u503c\u7684\u4f4elg2(2*SEW)\u4f4d\u88ab\u4f7f\u7528\uff08\u4f8b\u5982\uff0c\u5bf9\u4e8eSEW=64\u4f4d\u5230SEW=32\u4f4d\u7684\u7f29\u5c0f\u64cd\u4f5c\uff0c\u4f7f\u7528\u4f4e6\u4f4d\uff09\u3002</p> <pre><code>    #Narrowing shift right logical, SEW = (2*SEW) &gt;&gt;SEW\n    vnsrl.wv vd, vs2, vs1, vm   # vector-vector\n    vnsrl.wx vd, vs2, rs1, vm   # vector-scalar\n    vnsrl.wi vd, vs2, uimm, vm   # vector-immediate\n    # Narrowing shift right arithmetic, SEW = (2*SEW)&gt;&gt; SEW\n    vnsra.wv vd, vs2, vs1, vm   # vector-vector\n    vnsra.wx vd, vs2, rs1, vm   # vector-scalar\n    vnsra.wi vd, vs2, uimm, vm   # vector-immediate\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_16","title":"\u5411\u91cf\u8fdb\u4f4d\u52a0/\u501f\u4f4d\u51cf\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/RVV/#_17","title":"\u4f4d\u903b\u8f91\u8fd0\u7b97","text":"<p>\u4e0e\u3001\u6216\u3001\u5f02\u6216\u8fd0\u7b97</p>"},{"location":"Coprocessor/ISA/RVV/#_18","title":"\u5411\u91cf\u79fb\u4f4d\u6307\u4ee4","text":"<p>\u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u5411\u91cf\u79fb\u4f4d\u6307\u4ee4\uff0c\u5305\u62ec\u903b\u8f91\u5de6\u79fb(sll)\u4ee5\u53ca\u903b\u8f91\u53f3\u79fb\uff08\u96f6\u6269\u5c55srl\uff09\u548c\u7b97\u672f\u53f3\u79fb\uff08\u7b26\u53f7\u6269\u5c55sra\uff09\u3002\u8981\u79fb\u4f4d\u7684\u6570\u636e\u4f4d\u4e8e\u7531vs2\u6307\u5b9a\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u4e2d\uff0c\u5e76\u4e14\u79fb\u4f4d\u91cf\u503c\u53ef\u4ee5\u6765\u81ea\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4vs1\u3001\u6807\u91cf\u6574\u6570\u5bc4\u5b58\u5668rs1\u6216\u96f6\u6269\u5c55\u76845\u4f4d\u7acb\u5373\u6570\u3002\u4ec5\u4f7f\u7528\u79fb\u4f4d\u91cf\u503c\u7684\u4f4elg2(SEW)\u4f4d\u6765\u63a7\u5236\u79fb\u4f4d\u91cf\u3002</p> <p>\u79fb\u4f4d\u91cf\u503c\u7684\u4f4elg2(SEW)\u4f4d\u7528\u4e8e\u63a7\u5236\u79fb\u4f4d\u91cf\u662f\u56e0\u4e3a\u8fd9\u4e9b\u4f4d\u80fd\u591f\u8986\u76d6\u6240\u6709\u53ef\u80fd\u7684\u79fb\u4f4d\u64cd\u4f5c\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e32\u4f4d\u6570\u636e\uff0clg2(32)\u7b49\u4e8e5\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u75285\u4f4d\u6765\u8868\u793a0\u523031\u7684\u79fb\u4f4d\u91cf\uff0c\u8fd9\u8db3\u4ee5\u8986\u76d6\u6240\u6709\u53ef\u80fd\u7684\u79fb\u4f4d\u8303\u56f4\u3002\u8fd9\u6837\u505a\u7b80\u5316\u4e86\u786c\u4ef6\u8bbe\u8ba1\uff0c\u907f\u514d\u4e86\u5904\u7406\u8d85\u51fa\u6570\u636e\u4f4d\u5bbd\u7684\u79fb\u4f4d\u91cf\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e86\u79fb\u4f4d\u64cd\u4f5c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u6548\u7387\u548c\u6b63\u786e\u6027\u3002</p> <pre><code>    # Bit shift operations\n    vsll.vv vd, vs2, vs1, vm    # Vector-vector\n    vsll.vx vd, vs2, rs1, vm    # vector-scalar\n    vsll.vi vd, vs2, uimm, vm   # vector-immediate\n\n    vsrl.vv vd, vs2, vs1, vm    # Vector-vector\n    vsrl.vx vd, vs2, rs1, vm    # vector-scalar\n    vsrl.vi vd, vs2, uimm, vm   # vector-immediate\n\n    vsra.vv vd, vs2, vs1, vm    # Vector-vector\n    vsra.vx vd, vs2, rs1, vm    # vector-scalar\n    vsra.vi vd, vs2, uimm, vm   # vector-immediate\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_19","title":"\u6574\u6570\u6bd4\u8f83\u6307\u4ee4","text":"<p>\u6574\u6570\u6bd4\u8f83\u6307\u4ee4\u5728\u6bd4\u8f83\u7ed3\u679c\u4e3a\u771f\u65f6\u5c061\u5199\u5165\u76ee\u6807\u63a9\u7801\u5bc4\u5b58\u5668\u5143\u7d20\uff0c\u5426\u5219\u5199\u51650\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_20","title":"\u5411\u91cf\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6307\u4ee4","text":"<p>\u652f\u6301\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6574\u6570\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6307\u4ee4\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_21","title":"\u5411\u91cf\u6574\u6570\u5408\u5e76\u6307\u4ee4","text":"<p>\u5411\u91cf\u6574\u6570\u5408\u5e76\u6307\u4ee4\u57fa\u4e8e\u63a9\u7801\u7ec4\u5408\u4e24\u4e2a\u6e90\u64cd\u4f5c\u6570\u3002\u4e0e\u5e38\u89c4\u7b97\u672f\u6307\u4ee4\u4e0d\u540c\uff0c\u5408\u5e76\u64cd\u4f5c\u5bf9\u6240\u6709\u4e3b\u4f53\u5143\u7d20\uff08\u5373\u4ecevstart\u5230\u5f53\u524d\u5411\u91cf\u957f\u5ea6vl\u7684\u5143\u7d20\u96c6\uff09\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>vmerge\u6307\u4ee4\u88ab\u7f16\u7801\u4e3a\u5e26mask\u7684\u6307\u4ee4\uff08vm=0\uff09\u3002\u8be5\u6307\u4ee4\u5c06\u4e24\u4e2a\u6765\u6e90\u7ed3\u5408\u8d77\u6765\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\u5728mask\u503c\u4e3a0\u65f6\uff0c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u88ab\u590d\u5236\u5230\u76ee\u7684\u5143\u7d20\u4e0a\uff0c\u5426\u5219\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u88ab\u590d\u5236\u5230\u76ee\u7684\u5143\u7d20\u4e0a\u3002\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u603b\u662f\u4e00\u4e2a\u7531vs2\u6307\u5b9a\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u3002\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u662f\u7531vs1\u6307\u5b9a\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u6216\u7531rs1\u6307\u5b9a\u7684\u6807\u91cfx\u5bc4\u5b58\u5668\u6216\u4e00\u4e2a5\u4f4d\u7b26\u53f7\u6269\u5c55\u7684\u7acb\u5373\u6570\u3002</p> <pre><code>    vmerge.vvm vd, vs2, vs1, v0  # vd[i] = v0.mask[i] ? vs1[i] : vs2[i]\n    vmerge.vxm vd, vs2, rs1, v0  # vd[i] = v0.mask[i] ? x[rs1] : vs2[i]\n    vmerge.vim vd, vs2, imm, v0  # vd[i] = v0.mask[i] ? imm     : vs2[i]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_22","title":"\u5411\u91cf\u6574\u6570\u79fb\u52a8\u6307\u4ee4","text":"<p>\u77e2\u91cf\u6574\u6570\u79fb\u52a8\u6307\u4ee4\u590d\u5236\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570\u5230\u4e00\u4e2a\u77e2\u91cf\u5bc4\u5b58\u5668\u7ec4\u3002vmv.v.v\u53d8\u4f53\u590d\u5236\u4e86\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\uff0c\u800cvmv.v.x\u548cvmv.v.i\u53d8\u4f53\u5c06\u4e00\u4e2a\u6807\u91cf\u5bc4\u5b58\u5668\u6216\u7acb\u5373\u6570\u590d\u5236\u5230\u76ee\u6807\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u7684\u6240\u6709\u6709\u6548\u5143\u7d20\u3002\u8fd9\u4e9b\u6307\u4ee4\u88ab\u7f16\u7801\u4e3a\u65e0mask\u6307\u4ee4\uff08vm=1\uff09\u3002</p> <pre><code>    vmv.v.v vd, vs1    #vd[i]=vs1[i]\n    vmv.v.x vd, rs1    #vd[i]=x[rs1]\n    vmv.v.i vd, imm    #vd[i]=imm\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_23","title":"\u5411\u91cf\u5b9a\u70b9\u7b97\u672f\u6307\u4ee4","text":"<p>\u5c06\u6574\u6570\u8fd0\u7b97\u6307\u4ee4\u6269\u5c55\u5373\u53ef\u652f\u6301\u5b9a\u70b9\u8fd0\u7b97\u6307\u4ee4\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_24","title":"\u5411\u91cf\u6d6e\u70b9\u6307\u4ee4","text":"<p>\u5927\u591a\u6570\u6307\u4ee4\u4e0e\u6574\u6570\u6307\u4ee4\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4e0d\u518d\u4e00\u4e00\u5217\u4e3e\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_25","title":"\u5411\u91cf\u6d6e\u70b9\u5f02\u5e38\u6807\u5fd7","text":"<p>\u5728\u4efb\u4f55\u6d3b\u52a8\u7684\u6d6e\u70b9\u5143\u7d20\u4e0a\u53d1\u751f\u7684\u5411\u91cf\u6d6e\u70b9\u5f02\u5e38\u90fd\u4f1a\u5728fflags\u5bc4\u5b58\u5668\u4e2d\u8bbe\u7f6e\u6807\u51c6\u7684FP\u5f02\u5e38\u6807\u5fd7<code>fflags</code>\u3002\u975e\u6d3b\u52a8\u5143\u7d20\u4e0d\u4f1a\u8bbe\u7f6eFP\u5f02\u5e38\u6807\u5fd7\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#_26","title":"\u5411\u91cf\u6d6e\u70b9\u5e73\u65b9\u6839\u6307\u4ee4","text":"<pre><code>    # Floating-point square root\n    vfsqrt.v vd, vs2, vm   # Vector-vector square root\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_27","title":"\u5411\u91cf\u6d6e\u70b9\u5e73\u65b9\u6839\u5012\u6570\u6307\u4ee4","text":"<pre><code>    # Floating-point reciprocal square-root estimate to 7 bits.\n    vfrsqrt7.v vd, vs2, vm\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_28","title":"\u5411\u91cf\u6d6e\u70b9\u5012\u6570\u6307\u4ee4","text":"<pre><code>    # Floating-point reciprocal estimate to 7 bits.\n    vfrec7.v vd, vs2, vm\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_29","title":"\u6d6e\u70b9/\u6574\u6570\u8f6c\u6362\u6307\u4ee4","text":"<p>\u63d0\u4f9b\u8f6c\u6362\u64cd\u4f5c\u4ee5\u5728\u6d6e\u70b9\u503c\u548c\u65e0\u7b26\u53f7\u6574\u6570\u53ca\u6709\u7b26\u53f7\u6574\u6570\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff0c\u5176\u4e2d\u6e90\u548c\u76ee\u6807\u90fd\u662fSEW\u5bbd\u5ea6\u3002</p> <pre><code>    vfcvt.xu.f.v      vd, vs2, vm # Convert float to unsigned integer.\n    vfcvt.x.f.v       vd, vs2, vm # Convert float to signed integer.\n\n    vfcvt.rtz.xu.f.v  vd, vs2, vm # Convert float to unsigned integer, truncating.\n    vfcvt.rtz.x.f.v   vd, vs2, vm # Convert float to signed integer, truncating.\n\n    vfcvt.f.xu.v      vd, vs2, vm # Convert unsigned integer to float.\n    vfcvt.f.x.v       vd, vs2, vm # Convert signed integer to float.\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_30","title":"\u5411\u91cf\u63a9\u7801\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/RVV/#_31","title":"\u903b\u8f91\u64cd\u4f5c\u6307\u4ee4","text":"<p>\u5411\u91cf\u63a9\u7801\u5bc4\u5b58\u5668\u903b\u8f91\u6307\u4ee4\u662f\u4e13\u95e8\u7528\u4e8e\u64cd\u4f5c\u63a9\u7801\u5bc4\u5b58\u5668\u7684\u4e00\u7cfb\u5217\u6307\u4ee4\u3002\u8fd9\u4e9b\u63a9\u7801\u5bc4\u5b58\u5668\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u5355\u4e2a\u6bd4\u7279\u4f4d\uff0c\u56e0\u6b64\u8fd9\u4e9b\u6307\u4ee4\u64cd\u4f5c\u7684\u662f\u5355\u4e00\u7684\u5411\u91cf\u5bc4\u5b58\u5668</p> <p>\u8fd9\u4e9b\u6307\u4ee4\u5728\u9700\u8981\u5bf9\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u4f4d\u7ea7\u64cd\u4f5c\uff08\u5982\u4f4d\u4e0e\u3001\u4f4d\u6216\u3001\u4f4d\u5f02\u6216\u7b49\uff09\u65f6\u975e\u5e38\u6709\u7528\u3002\u7531\u4e8e\u5b83\u4eec\u76f4\u63a5\u64cd\u4f5c\u63a9\u7801\u5bc4\u5b58\u5668\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u901a\u5e38\u7528\u4e8e\u63a7\u5236\u5411\u91cf\u8ba1\u7b97\u7684\u6d41\u7a0b\uff0c\u4f8b\u5982\uff0c\u5728\u6761\u4ef6\u6267\u884c\u6216\u9009\u62e9\u6027\u66f4\u65b0\u5411\u91cf\u5143\u7d20\u65f6\u3002</p> <pre><code>     vmand.mm vd, vs2, vs1 # vd.mask[i] = vs2.mask[i] &amp;&amp; vs1.mask[i]\n     vmnand.mm vd, vs2, vs1 # vd.mask[i] = !(vs2.mask[i] &amp;&amp; vs1.mask[i])\n     vmandn.mm vd, vs2, vs1 # vd.mask[i] = vs2.mask[i] &amp;&amp; !vs1.mask[i]\n     vmxor.mm vd, vs2, vs1 # vd.mask[i] = vs2.mask[i] ^^ vs1.mask[i]\n     vmor.mm vd, vs2, vs1 # vd.mask[i] = vs2.mask[i] || vs1.mask[i]\n     vmnor.mm vd, vs2, vs1 # vd.mask[i] = !(vs2.mask[i] || vs1.mask[i])\n     vmorn.mm vd, vs2, vs1 # vd.mask[i] = vs2.mask[i] || !vs1.mask[i]\n     vmxnor.mm vd, vs2, vs1 # vd.mask[i] = !(vs2.mask[i] ^^ vs1.mask[i])\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#vcpopm","title":"VCPOP.M","text":"<p>\u7edf\u8ba1\u63a9\u7801\u5bc4\u5b58\u5668\u4e2d\u6d3b\u8dc3\u72b6\u6001\u6570\u636e\u5143\u7d20\u7684\u6570\u91cf\u3002</p> <pre><code>     vcpop.m rd, vs2, vm\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#vfirstm","title":"VFIRST.M","text":"<p>\u5728vs2\u5bc4\u5b58\u5668\u4e2d\u627e\u7b2c\u4e00\u4e2a\u6d3b\u8dc3\u5143\u7d20\uff0c\u7136\u540e\u5c06\u5176\u7d22\u5f15\u503c\u5199\u5165rd\u3002</p> <pre><code>    vfirst.m rd, vs2, vm\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#vmsbfm","title":"VMSBF.M","text":"<p>\u76ee\u7684\u5bc4\u5b58\u5668\u4e2d0\u5230\u6e90\u5bc4\u5b58\u5668\u7684\u7b2c\u4e00\u4e2a\u6d3b\u8dc3\u5143\u7d20\u7684\u4f4d\u7f6e\u4e4b\u524d\uff08\u4e0d\u5305\u62ec\u7b2c\u4e00\u4e2a\u6d3b\u8dc3\u5143\u7d20\uff09\u51991\uff0c\u5176\u4f59\u51990</p> <pre><code>    vmsbf.m vd, vs2, vm\n     # Example\n    7 6 5 4 3 2 1 0 Element number\n\n    1 0 0 1 0 1 0 0 v3 contents\n    vmsbf.m v2, v3\n    0 0 0 0 0 0 1 1 v2 contents\n\n    1 0 0 1 0 1 0 1 v3 contents\n    vmsbf.m v2, v3\n    0 0 0 0 0 0 0 0 v2\n\n    0 0 0 0 0 0 0 0 v3 contents\n    vmsbf.m v2, v3\n    1 1 1 1 1 1 1 1 v2\n\n    1 1 0 0 0 0 1 1 v0 vcontents\n    1 0 0 1 0 1 0 0 v3 contents\n    vmsbf.m v2, v3, v0.t\n    0 1 x x x x 1 1 v2 contents\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#vmsifm","title":"VMSIF.M","text":"<p>\u76ee\u7684\u5bc4\u5b58\u5668\u4e2d0\u5230\u6e90\u5bc4\u5b58\u5668\u7684\u7b2c\u4e00\u4e2a\u6d3b\u8dc3\u5143\u7d20\u7684\u4f4d\u7f6e\u4e4b\u524d\uff08\u5305\u62ec\u7b2c\u4e00\u4e2a\u6d3b\u8dc3\u5143\u7d20\uff09\u51991\uff0c\u5176\u4f59\u51990</p> <pre><code>    vmsif.m vd, vs2, vm\n     # Example\n    7 6 5 4 3 2 1 0 Element number\n\n    1 0 0 1 0 1 0 0 v3 contents\n    vmsif.m v2, v3\n    0 0 0 0 0 1 1 1 v2 contents\n\n    1 0 0 1 0 1 0 1 v3 contents\n    vmsif.m v2, v3\n    0 0 0 0 0 0 0 1 v2\n\n    1 1 0 0 0 0 1 1 v0 vcontents\n    1 0 0 1 0 1 0 0 v3 contents\n    vmsif.m v2, v3, v0.t\n    1 1 x x x x 1 1 v2 contents\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#vmsofm","title":"VMSOF.M","text":"<p>\u53ea\u6709\u6e90\u5bc4\u5b58\u5668\u7684\u7b2c\u4e00\u4e2a\u4e3a\u6d3b\u8dc3\u5143\u7d20\u5bf9\u5e94\u7684\u76ee\u7684\u5bc4\u5b58\u5668\u5143\u7d20\u4f4d\u7f6e\u4e3a1</p> <pre><code>    vmsof.m vd, vs2, vm\n    # Example\n    7 6 5 4 3 2 1 0 Element number\n\n    1 0 0 1 0 1 0 0 v3 contents\n    vmsof.m v2, v3\n    0 0 0 0 0 1 0 0 v2 contents\n\n    1 0 0 1 0 1 0 1 v3 contents\n    vmsof.m v2, v3\n    0 0 0 0 0 0 0 1 v2\n\n    1 1 0 0 0 0 1 1 v0 vcontents\n    1 1 0 1 0 1 0 0 v3 contents\n    vmsof.m v2, v3, v0.t\n    0 1 x x x x 0 0 v2 contents\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_32","title":"\u5411\u91cf\u5f52\u7ea6\u6307\u4ee4","text":"<ul> <li>\u5f52\u7ea6\u6307\u4ee4\u63a5\u6536\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u7684\u5143\u7d20,\u548c\u4e00\u4e2a\u653e\u5728\u5411\u91cf\u5bc4\u5b58\u5668\u5143\u7d200\u4f4d\u7f6e\u7684\u6807\u91cf, \u901a\u8fc7\u67d0\u79cd\u5f52\u7ea6\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2a\u6807\u91cf\u503c, \u8be5\u6807\u91cf\u503c\u4e5f\u653e\u5728\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u5143\u7d200\u4f4d\u7f6e.</li> <li>\u5f52\u7ea6\u64cd\u4f5c\u4e2d\u7684\u6807\u91cf\u90fd\u662f\u653e\u5728\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u4e2d, \u800c\u4e0d\u662f\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\uff0c\u4e4b\u6240\u4ee5\u4e0d\u628a\u7ed3\u679c\u653e\u5728\u6807\u91cf\u5bc4\u5b58\u5668, \u662f\u4e3a\u4e86\u4e0e\u6807\u91cfcore \u53bb\u8026</li> <li>\u6e90\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u4e2d\u7684\u975e\u6d3b\u8dc3\u5143\u7d20\u5c06\u4e0d\u53c2\u4e0e\u5f52\u7ea6\u64cd\u4f5c.</li> <li>\u76ee\u7684\u5411\u91cf\u5bc4\u5b58\u5668\u4e2d, \u9664\u4e86\u5143\u7d200\u7684\u90e8\u5206\u90fd\u662ftail, \u9075\u5faa\u5f53\u524d\u7684\u5c3e\u90e8\u4e0d\u53ef\u77e5\u6216\u4e0d\u53d8(tail agnostic/undisturbed)\u7684\u539f\u5219.</li> </ul>"},{"location":"Coprocessor/ISA/RVV/#_33","title":"\u5411\u91cf\u5355\u5bbd\u5ea6\u6574\u6570\u5f52\u7ea6\u6307\u4ee4","text":"<pre><code>    # Simple reductions, where [*] denotes all active elements:\n    vredsum.vs vd, vs2, vs1, vm # vd[0] = sum( vs1[0] , vs2[*] )\n    vredmaxu.vs vd, vs2, vs1, vm # vd[0] = maxu( vs1[0] , vs2[*] )\n    vredmax.vs vd, vs2, vs1, vm # vd[0] = max( vs1[0] , vs2[*] )\n    vredminu.vs vd, vs2, vs1, vm # vd[0] = minu( vs1[0] , vs2[*] )\n    vredmin.vs vd, vs2, vs1, vm # vd[0] = min( vs1[0] , vs2[*] )\n    vredand.vs vd, vs2, vs1, vm # vd[0] = and( vs1[0] , vs2[*] )\n    vredor.vs vd, vs2, vs1, vm # vd[0] = or( vs1[0] , vs2[*] )\n    vredxor.vs vd, vs2, vs1, vm # vd[0] = xor( vs1[0] , vs2[*] )\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_34","title":"\u5411\u91cf\u52a0\u5bbd\u6574\u6570\u5f52\u7ea6\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/RVV/#_35","title":"\u5411\u91cf\u5355\u5bbd\u5ea6\u6d6e\u70b9\u5f52\u7ea6\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/RVV/#_36","title":"\u5411\u91cf\u52a0\u5bbd\u6d6e\u70b9\u5f52\u7ea6\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/RVV/#_37","title":"\u5411\u91cf\u7f6e\u6362\u6307\u4ee4","text":""},{"location":"Coprocessor/ISA/RVV/#_38","title":"\u6574\u6570\u6807\u91cf\u79fb\u52a8\u6307\u4ee4","text":"<pre><code>    vmv.x.s rd, vs2 # x[rd] = vs2[0] (vs1=0)\n    vmv.s.x vd, rs1 # vd[0] = x[rs1] (vs2=0)\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_39","title":"\u6d6e\u70b9\u6807\u91cf\u79fb\u52a8\u6307\u4ee4","text":"<pre><code>    vfmv.f.s rd, vs2 # f[rd] = vs2[0] (rs1=0)\n    vfmv.s.f vd, rs1 # vd[0] = f[rs1] (vs2=0)\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_40","title":"\u5411\u91cf\u6ed1\u52a8\u6307\u4ee4","text":"<p>\u6ed1\u52a8\u6307\u4ee4\u5728\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u4e2d\u4e0a\u4e0b\u79fb\u52a8\u6570\u636e\u5143\u7d20\u3002</p> <p>\u6ed1\u52a8\u64cd\u4f5c\u5728\u5904\u7406\u6ed1\u52a8\u7a97\u53e3\u3001\u91cd\u53e0\u7a97\u53e3\u6216\u5176\u4ed6\u9700\u8981\u5143\u7d20\u95f4\u76f8\u5bf9\u4f4d\u79fb\u7684\u573a\u666f\u65f6\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"Coprocessor/ISA/RVV/#slideup","title":"Slideup","text":"<p><code>vslideup</code>\u6307\u4ee4\u5141\u8bb8\u5c06\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\uff08vs2\uff09\u7684\u5185\u5bb9\u5411\u4e0a\u6ed1\u52a8\uff08\u5373\u5411\u66f4\u9ad8\u7d22\u5f15\u4f4d\u7f6e\u79fb\u52a8\uff09\u4e00\u5b9a\u6570\u91cf\u7684\u4f4d\u7f6e\uff0c\u5e76\u5c06\u7ed3\u679c\u5199\u5165\u5230\u53e6\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\uff08vd\uff09\u4e2d\u3002\u6ed1\u52a8\u8ddd\u79bb\uff08OFFSET\uff09\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5bc4\u5b58\u5668\uff08rs1\uff09\u6216\u4e00\u4e2a\u7acb\u5373\u6570\uff08uimm\uff09\u6765\u6307\u5b9a\u3002</p> <pre><code>     vslideup.vx vd, vs2, rs1, vm # vd[i+rs1] = vs2[i]\n     vslideup.vi vd, vs2, uimm, vm # vd[i+uimm] = vs2[i]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#slidedown","title":"Slidedown","text":"<pre><code>     vslidedown.vx vd, vs2, rs1, vm # vd[i] = vs2[i+rs1]\n     vslidedown.vi vd, vs2, uimm, vm # vd[i] = vs2[i+uimm]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#slide1up","title":"Slide1up","text":"<p>vslide1up\u548cvfslide1up\u6307\u4ee4\u5728\u9700\u8981\u5411\u76ee\u6807\u5411\u91cf\u7684\u5f00\u5934\u63d2\u5165\u4e00\u4e2a\u6807\u91cf\u503c\uff0c\u5e76\u5c06\u5269\u4f59\u5143\u7d20\u5411\u4e0a\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u7684\u573a\u666f\u4e2d\u975e\u5e38\u6709\u7528\u3002\u8fd9\u5728\u5904\u7406\u7a97\u53e3\u51fd\u6570\u3001\u6570\u636e\u586b\u5145\u6216\u4efb\u4f55\u9700\u8981\u4fee\u6539\u5411\u91cf\u5934\u90e8\u5143\u7d20\u65f6\u7279\u522b\u6709\u7528\u3002</p> <pre><code>     vslide1up.vx vd, vs2, rs1, vm # vd[0]=x[rs1], vd[i+1] = vs2[i]\n     vfslide1up.vf vd, vs2, rs1, vm # vd[0]=f[rs1], vd[i+1] = vs2[i]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#slide1down","title":"Slide1down","text":"<pre><code>     vslide1down.vx vd, vs2, rs1, vm # vd[i] = vs2[i+1], vd[vl-1]=x[rs1]\n     vfslide1down.vf vd, vs2, rs1, vm # vd[i] = vs2[i+1], vd[vl-1]=f[rs1]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_41","title":"\u5411\u91cf\u5bc4\u5b58\u5668\u805a\u96c6\u6307\u4ee4","text":"<p>\u5411\u91cf\u5bc4\u5b58\u5668\u805a\u96c6\uff08gather\uff09\u6307\u4ee4\u4ece\u7531\u7b2c\u4e8c\u4e2a\u6e90\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u6307\u5b9a\u7684\u4f4d\u7f6e\u8bfb\u53d6\u7b2c\u4e00\u4e2a\u6e90\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u7684\u5143\u7d20\u3002\u7b2c\u4e8c\u4e2a\u5411\u91cf\u4e2d\u7684\u7d22\u5f15\u503c\u88ab\u89c6\u4e3a\u65e0\u7b26\u53f7\u6574\u6570\u3002\u65e0\u8bbavl\u7684\u503c\u5982\u4f55\uff0c\u90fd\u53ef\u4ee5\u4ece\u6e90\u5411\u91cf\u4e2d\u8bfb\u53d6\u4efb\u4f55\u7d22\u5f15\u5c0f\u4e8eVLMAX\u7684\u5143\u7d20\u3002\u5199\u5165\u76ee\u6807\u5bc4\u5b58\u5668\u7684\u5143\u7d20\u6700\u5927\u6570\u91cf\u7531vl\u7ed9\u5b9a\uff0c\u800c\u8d85\u8fc7vl\u7684\u5143\u7d20\u5219\u6839\u636e\u5f53\u524d\u7684\u5c3e\u90e8\u7b56\u7565\u5904\u7406\uff08\u53c2\u89c1\u5411\u91cf\u5c3e\u90e8\u65e0\u5173\u548c\u5411\u91cf\u63a9\u7801\u65e0\u5173\u7684\u90e8\u5206\uff0c\u5373vta\u548cvma\uff09\u3002\u6b64\u64cd\u4f5c\u53ef\u4ee5\u662f\u6709\u63a9\u7801\u7684\uff0c\u5bf9\u4e8e\u4e0d\u6d3b\u52a8\u7684\u5143\u7d20\uff0c\u9075\u5faa\u63a9\u7801\u672a\u53d8/\u65e0\u5173\u7b56\u7565\u3002</p> <p>\u4e0e\u6ed1\u52a8\u6307\u4ee4\u76f8\u6bd4\uff0c\u7d22\u5f15\u503c\u53ef\u4ee5\u4e0d\u76f8\u8fde\uff0c\u64cd\u4f5c\u6570\u636e\u66f4\u52a0\u7075\u6d3b\uff0c\u5bf9\u4e8e\u4e0d\u89c4\u5219\u6570\u636e\u6709\u4f18\u52bf</p> <pre><code>    # \n    vrgather.vv vd, vs2, vs1, vm # vd[i] = (vs1[i] &gt;= VLMAX) ? 0 : vs2[vs1[i]];\n    vrgatherei16.vv vd, vs2, vs1, vm # vd[i] = (vs1[i] &gt;= VLMAX) ? 0 : vs2[vs1[i]];\n    # \n    vrgather.vx vd, vs2, rs1, vm # vd[i] = (x[rs1] &gt;= VLMAX) ? 0 : vs2[x[rs1]]\n    vrgather.vi vd, vs2, uimm, vm # vd[i] = (uimm &gt;= VLMAX) ? 0 : vs2[uimm]\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_42","title":"\u5411\u91cf\u538b\u7f29\u6307\u4ee4","text":"<p>vcompress.vm \u6307\u4ee4\u662f\u5411\u91cf\u5904\u7406\u4e2d\u7684\u4e00\u4e2a\u9ad8\u7ea7\u6307\u4ee4\uff0c\u5b83\u5141\u8bb8\u6839\u636e\u5411\u91cf\u63a9\u7801\u5bc4\u5b58\u5668\uff08mask register\uff09\u6307\u5b9a\u7684\u6761\u4ef6\uff0c\u5c06\u6e90\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\uff08source vector register group\uff09\u4e2d\u7684\u9009\u5b9a\u5143\u7d20\u538b\u7f29\u5e76\u6253\u5305\u5230\u76ee\u6807\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\uff08destination vector register group\uff09\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u6307\u4ee4\u7279\u522b\u6709\u7528\u4e8e\u5728\u5411\u91cf\u8ba1\u7b97\u4e2d\u7b5b\u9009\u548c\u91cd\u65b0\u7ec4\u7ec7\u6570\u636e\u3002</p> <pre><code>    vcompress.vm vd, vs2, vs1 # Compress into vd elements of vs2 where vs1 is enabled\n    Example use of vcompress instruction\n\n    8 7 6 5 4 3 2 1 0 Element number\n\n    1 1 0 1 0 0 1 0 1 v0\n    8 7 6 5 4 3 2 1 0 v1\n    1 2 3 4 5 6 7 8 9 v2\n\n    vcompress.vm v2, v1, v0\n    1 2 3 4 8 7 5 2 0 v2\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_43","title":"\u6574\u4e2a\u5bc4\u5b58\u5668\u79fb\u52a8","text":"<p>\u6307\u4ee4\u7528\u4e8e\u590d\u5236\u6574\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\uff08\u5373\u6240\u6709 VLEN \u4f4d\uff09\u4ee5\u53ca\u6574\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u7ec4\u3002</p> <pre><code>    vmv&lt;nr&gt;r.v vd, vs2  # General form\n\n    vmv1r.v v1, v2      # Copy v1=v2\n    vmv2r.v v10, v12    # Copy v10=v12; v11=v13\n    vmv4r.v v4, v8      # Copy v4=v8; v5=v9; v6=v10; v7=v11\n    vmv8r.v v0, v8      # Copy v0=v8; v1=v9; ...; v7=v15\n</code></pre>"},{"location":"Coprocessor/ISA/RVV/#_44","title":"\u53c2\u8003\u8d44\u6599","text":"<p>RVV1.0 Spec</p> <p>https://github.com/riscv/riscv-v-spec</p> <p>RVV intrinsic</p> <p>https://github.com/riscv-non-isa/rvv-intrinsic-doc</p> <p>RVV Crypto Spec</p> <p>https://github.com/riscv/riscv-crypto</p> <p>\u4e2d\u6587\u53c2\u8003\u8d44\u6599</p> <p>https://www.cnblogs.com/lyc-seu/p/16999784.html</p> <p>\u4e2d\u6587\u53c2\u8003\u8d44\u6599</p> <p>https://blog.csdn.net/u011376987/article/details/137439362</p>"},{"location":"Coprocessor/Microarchitecture/Microarchitecture/","title":"Microarchitecture","text":""},{"location":"GPGPU/","title":"Getting Started","text":"<p>\u76ee\u524d\u5b66\u672f\u754c\u5f00\u6e90\u7684GPGPU\u9879\u76ee\u4e3b\u8981\u6709\uff1a</p> <p>Tiny-gpu</p> <p>https://github.com/adam-maj/tiny-gpu</p> <p>Ventus</p> <p>https://opengpgpu.org.cn/</p> <p>Vortex</p> <p>https://github.com/vortexgpgpu</p>"},{"location":"GPGPU/Introduction/","title":"GPGPU","text":""},{"location":"GPGPU/Introduction/#introduction","title":"Introduction","text":"<p>GPGPU\uff08General-Purpose computing on Graphics Processing Units\uff09\u662f\u4e00\u79cd\u5229\u7528\u56fe\u5f62\u5904\u7406\u5355\u5143\uff08GPU\uff09\u6267\u884c\u4f20\u7edf\u4e0a\u7531\u4e2d\u592e\u5904\u7406\u5668\uff08CPU\uff09\u5904\u7406\u7684\u8ba1\u7b97\u4efb\u52a1\u7684\u6280\u672f\u3002GPU\u6700\u521d\u4e3b\u8981\u7528\u4e8e\u56fe\u5f62\u6e32\u67d3\uff0c\u4f46\u7531\u4e8e\u5176\u5f3a\u5927\u7684\u5e76\u884c\u5904\u7406\u80fd\u529b\uff0c\u9010\u6e10\u88ab\u5e94\u7528\u4e8e\u5e7f\u6cdb\u7684\u975e\u56fe\u5f62\u8ba1\u7b97\u9886\u57df\uff0c\u5982\u79d1\u5b66\u8ba1\u7b97\u3001\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u7b49\u3002\u968f\u7740GPU\u7684\u53d1\u5c55\uff0cGPGPU\u5c06\u4f1a\u6210\u4e3a\u672a\u6765\u8ba1\u7b97\u9886\u57df\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002</p>"},{"location":"GPGPU/Introduction/#simt","title":"SIMT","text":"<p>SIMD\u5229\u7528\u540c\u4e00\u6761\u6307\u4ee4\u5728\u4e0d\u540c\u6570\u636e\u4e0a\u6267\u884c\u76f8\u540c\u64cd\u4f5c\uff0c\u9700\u8981\u6570\u636e\u5728\u7a7a\u95f4\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u8fd8\u9700\u8981\u501f\u52a9\u5176\u4ed6\u6307\u4ee4\u5bf9\u6570\u636e\u8fdb\u884c\u91cd\u7ec4\u548c\u62c6\u5206\uff1b\u800cSIMT\u5229\u7528\u4e0d\u540c\u7ebf\u7a0b\u6267\u884c\u540c\u4e00\u6307\u4ee4\u6765\u5904\u7406\u4e0d\u540c\u6570\u636e\uff0c\u901a\u8fc7\u5404\u4e2a\u7ebf\u7a0b\u72ec\u7acb\u5bf9\u6570\u636e\u8fdb\u884c\u7075\u6d3b\u7d22\u5f15\uff0c\u964d\u4f4e\u7a7a\u95f4\u8fde\u7eed\u6027\u7684\u9700\u6c42\u3002 SIMD\u5f80\u5f80\u9700\u8981\u6307\u4ee4\u663e\u5f0f\u5730\u5bf9\u6d3b\u63a9\u7801\u5bc4\u5b58\u5668\u8fdb\u884c\u8bbe\u7f6e\uff0c\u4ee5\u63a7\u5236\u76f8\u5e94\u6570\u636e\u662f\u5426\u53c2\u4e0e\u8ba1\u7b97\uff1b\u800cSIMT\u5f80\u5f80\u901a\u8fc7\u786c\u4ef6\u81ea\u52a8\u5bf9\u8c13\u8bcd\u5bc4\u5b58\u5668\u8fdb\u884c\u7ba1\u7406\u3002SIMT\u8fd8\u5141\u8bb8\u7ebf\u7a0b\u5206\u652f\uff0c\u5b9e\u73b0\u591a\u6267\u884c\u8def\u5f84\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u95f4\u63a5\u652f\u6301MIMD\u6267\u884c\u6a21\u5f0f\u3002 SIMD\u6a21\u578b\u5728\u4e0d\u540c\u5e76\u884c\u5143\u7d20\u4e2a\u6570\u5f80\u5f80\u9700\u8981\u8bbe\u8ba1\u4e0d\u540c\u683c\u5f0f\u7684SIMD\u6307\u4ee4\uff0c\u9020\u6210\u6307\u4ee4\u89c4\u6a21\u7684\u81a8\u80c0\uff1b\u800cSIMT\u5bf9\u7ebf\u7a0b\u6570\u539f\u5219\u4e0a\u6ca1\u6709\u9650\u5236\uff0c\u786c\u4ef6\u7ba1\u7406\u65b9\u5f0f\u4e5f\u4f7f\u5f97SIMT\u4e0d\u9700\u8981\u8bbe\u8ba1\u65b0\u7684\u6307\u4ee4</p>"},{"location":"GPGPU/Introduction/#open-source-projects","title":"Open Source Projects","text":"<p>Tiny-gpu</p> <p>https://github.com/adam-maj/tiny-gpu</p> <p>Ventus</p> <p>https://opengpgpu.org.cn/</p> <p>Vortex</p> <p>https://github.com/vortexgpgpu</p>"},{"location":"GPGPU/Introduction/#note","title":"Note","text":"<p>\u901a\u7528\u56fe\u5f62\u5904\u7406\u5668\u8bbe\u8ba1</p> <p>https://blog.csdn.net/AHAHAya_/article/details/132180893?spm=1001.2014.3001.5502</p> <p>\u7b14\u8bb0</p> <p>https://arthurchiao.art/blog/gpu-advanced-notes-1-zh/</p>"},{"location":"GPGPU/Tiny-gpu/","title":"Tiny-gpu","text":""},{"location":"GPGPU/Tiny-gpu/#introduction","title":"Introduction","text":"<p>Tiny-gpu\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 GPU \u6a21\u578b\uff0c\u4e13\u4e3a\u5e2e\u52a9\u7528\u6237\u4ece\u5934\u5f00\u59cb\u7406\u89e3 GPU \u7684\u5de5\u4f5c\u539f\u7406\u800c\u8bbe\u8ba1\u3002\u8fd9\u662f\u6700\u7b80\u5355\u7684\u5f00\u6e90gpgpu\u9879\u76ee\uff0c\u9002\u5408gpu\u5165\u95e8\u5b66\u4e60\u3002</p> <p>\u9879\u76ee\u4e3b\u8981\u4fa7\u91cd\u4e8e\u63a2\u7d22\u4ee5\u4e0b\u65b9\u9762</p> <ul> <li>\u67b6\u6784 (Architecture)\uff1aGPU \u7684\u67b6\u6784\u662f\u4ec0\u4e48\u6837\u7684\uff1f\u54ea\u4e9b\u5143\u7d20\u6700\u91cd\u8981?</li> <li>\u5e76\u884c\u5316 (Parallelization)\uff1a\u5982\u4f55\u5728\u786c\u4ef6\u4e2d\u5b9e\u73b0 SIMD \u7f16\u7a0b\u6a21\u578b\uff1f  </li> <li>\u5185\u5b58 (Memory)\uff1aGPU \u5982\u4f55\u5e94\u5bf9\u5185\u5b58\u5e26\u5bbd\u6709\u9650\u7684\u9650\u5236\uff1f</li> </ul> <p>Tiny-gpu\u7b80\u5316\u4e86\u6267\u884c\u6d41\u7a0b\uff0c\u4e00\u6b21\u4ec5\u5904\u7406\u4e00\u4e2a\u5185\u6838 (kernel)\u3002 \u542f\u52a8\u5185\u6838\u7684\u6b65\u9aa4\u5982\u4e0b</p> <ul> <li>\u52a0\u8f7d\u5168\u5c40\u7a0b\u5e8f\u5185\u5b58\uff1a\u5c06\u5185\u6838\u4ee3\u7801\u52a0\u8f7d\u5230\u5168\u5c40\u7a0b\u5e8f\u5185\u5b58\u4e2d\u3002</li> <li>\u52a0\u8f7d\u6570\u636e\u5185\u5b58\uff1a\u5c06\u5fc5\u9700\u7684\u6570\u636e\u52a0\u8f7d\u5230\u6570\u636e\u5185\u5b58\u4e2d\u3002</li> <li>\u6307\u5b9a\u7ebf\u7a0b\u6570\u91cf\uff1a\u5728\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668\u4e2d\u6307\u5b9a\u8981\u542f\u52a8\u7684\u7ebf\u7a0b\u6570\u91cf\u3002</li> <li>\u542f\u52a8\u5185\u6838\uff1a\u5c06\u542f\u52a8\u4fe1\u53f7\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\uff0c\u542f\u52a8\u5185\u6838\u6267\u884c\u3002</li> </ul>"},{"location":"GPGPU/Tiny-gpu/#architecture","title":"Architecture","text":"<p>Tiny-gpu \u672c\u8eab\u5305\u542b\u4ee5\u4e0b\u5355\u5143\uff1a</p> <ul> <li>\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668\uff1a\u7528\u4e8e\u5b58\u50a8\u7ebf\u7a0b\u6570\u91cf\u7b49\u63a7\u5236\u4fe1\u606f\u3002</li> <li>\u8c03\u5ea6\u5668 (Dispatcher)\uff1a\u8d1f\u8d23\u5c06\u4efb\u52a1\u5206\u914d\u7ed9\u5404\u4e2a\u8ba1\u7b97\u6838\u5fc3\u3002</li> <li>\u53ef\u53d8\u6570\u91cf\u7684\u8ba1\u7b97\u6838\u5fc3\uff1a\u6267\u884c\u5185\u6838\u4ee3\u7801\u7684\u5904\u7406\u5668\u5355\u5143\uff0c\u6570\u91cf\u53ef\u6839\u636e\u8bbe\u8ba1\u7075\u6d3b\u914d\u7f6e\u3002</li> <li>\u5185\u5b58\u63a7\u5236\u5668\uff1a\u5206\u522b\u7528\u4e8e\u63a7\u5236\u6570\u636e\u5185\u5b58\u548c\u7a0b\u5e8f\u5185\u5b58\u7684\u8bbf\u95ee\u3002</li> <li>\u7f13\u5b58 (Cache)\uff1a\u7528\u4e8e\u51cf\u5c11\u5bf9\u4e3b\u5185\u5b58\u7684\u8bbf\u95ee\u6b21\u6570\uff0c\u63d0\u9ad8\u6570\u636e\u8bfb\u53d6\u901f\u5ea6\uff08\u53ef\u80fd\u4e0d\u662f\u6240\u6709 tiny-gpu \u7248\u672c\u90fd\u5305\u542b\uff09\u3002</li> </ul>"},{"location":"GPGPU/Tiny-gpu/#_1","title":"\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668","text":"<p>\u8bbe\u5907\u63a7\u5236\u5bc4\u5b58\u5668\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u63cf\u8ff0\u5185\u6838\u6267\u884c\u65b9\u5f0f\u7684\u5143\u6570\u636e\u3002\u5728 tiny-gpu \u4e2d\uff0c\u5b83\u53ea\u5b58\u50a8\u4e00\u4e2a\u503c\uff1a\u7ebf\u7a0b\u6570\u91cf (thread_count)\uff0c\u5373\u5f85\u6fc0\u6d3b\u5185\u6838\u9700\u8981\u542f\u52a8\u7684\u7ebf\u7a0b\u603b\u6570\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_2","title":"\u8c03\u5ea6\u5668","text":"<p>\u5185\u6838\u542f\u52a8\u540e\uff0c\u8c03\u5ea6\u5668\u8d1f\u8d23\u5c06\u7ebf\u7a0b\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u8ba1\u7b97\u6838\u5fc3\u3002\u8c03\u5ea6\u5668\u4f1a\u5c06\u7ebf\u7a0b\u7ec4\u7ec7\u6210\u5757 (block)\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5757\u53ef\u4ee5\u5e76\u884c\u5730\u5728\u5355\u4e2a\u6838\u5fc3\u4e0a\u6267\u884c\u3002\u7136\u540e\uff0c\u8c03\u5ea6\u5668\u5c06\u7ebf\u7a0b\u5757\u53d1\u9001\u7ed9\u53ef\u7528\u7684\u8ba1\u7b97\u6838\u5fc3\u8fdb\u884c\u5904\u7406\u3002\u5f53\u6240\u6709\u7ebf\u7a0b\u5757\u5904\u7406\u5b8c\u6210\u540e\uff0c\u8c03\u5ea6\u5668\u4f1a\u62a5\u544a\u5185\u6838\u6267\u884c\u5b8c\u6bd5\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_3","title":"\u8ba1\u7b97\u6838\u5fc3","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u90fd\u5305\u542b\u4e00\u5b9a\u6570\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u901a\u5e38\u56f4\u7ed5\u7740\u5b83\u53ef\u4ee5\u652f\u6301\u7684\u7ebf\u7a0b\u6570\u91cf\u8fdb\u884c\u8bbe\u8ba1\u3002\u4e3a\u4e86\u6700\u5927\u5316\u5e76\u884c\u5316\uff0c\u9700\u8981\u6700\u4f73\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u4ee5\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 \u5728\u7b80\u5316\u540e\u7684 tiny-gpu \u4e2d\uff0c\u6bcf\u4e2a\u6838\u5fc3\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u7ebf\u7a0b\u5757 (block)\u3002\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\uff0c\u6838\u5fc3\u90fd\u914d\u5907\u4e86\u4e13\u7528\u7684 ALU\u3001LSU\u3001PC \u548c\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u6267\u884c\u7ebf\u7a0b\u6307\u4ee4\u662f GPU \u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u95ee\u9898\u4e4b\u4e00\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_4","title":"\u5185\u5b58\u63a7\u5236\u5668","text":"<p>\u5168\u5c40\u5185\u5b58\u5177\u6709\u56fa\u5b9a\u7684\u8bfb\u5199\u5e26\u5bbd\uff0c\u4f46\u662f\u6240\u6709\u8ba1\u7b97\u6838\u5fc3\u8bbf\u95ee\u5185\u5b58\u7684\u6570\u636e\u8bf7\u6c42\u53ef\u80fd\u4f1a\u8fdc\u8fdc\u8d85\u51fa\u5916\u90e8\u5185\u5b58\u7684\u5b9e\u9645\u5904\u7406\u80fd\u529b\u3002 \u5185\u5b58\u63a7\u5236\u5668\u8d1f\u8d23\u8ddf\u8e2a\u6765\u81ea\u8ba1\u7b97\u6838\u5fc3\u7684\u6240\u6709\u4f20\u51fa\u5185\u5b58\u8bf7\u6c42\uff0c\u6839\u636e\u5b9e\u9645\u5916\u90e8\u5185\u5b58\u5e26\u5bbd\u9650\u5236\u8bf7\u6c42\uff0c\u5e76\u5c06\u5916\u90e8\u5185\u5b58\u7684\u54cd\u5e94\u4f20\u9012\u56de\u76f8\u5e94\u7684\u8d44\u6e90\u3002 \u6bcf\u4e2a\u5185\u5b58\u63a7\u5236\u5668\u6839\u636e\u5168\u5c40\u5185\u5b58\u7684\u5e26\u5bbd\u914d\u7f6e\u4e86\u56fa\u5b9a\u6570\u91cf\u7684\u901a\u9053\u3002  </p>"},{"location":"GPGPU/Tiny-gpu/#_5","title":"\u7f13\u5b58","text":"<p>\u5168\u5c40\u5185\u5b58\u4e2d\u7684\u76f8\u540c\u6570\u636e\u7ecf\u5e38\u88ab\u591a\u4e2a\u8ba1\u7b97\u6838\u5fc3\u8bf7\u6c42\u3002\u53cd\u590d\u8bbf\u95ee\u5168\u5c40\u5185\u5b58\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u56e0\u4e3a\u6570\u636e\u5df2\u7ecf\u83b7\u53d6\u8fc7\u4e00\u6b21\uff0c\u6240\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u8bbe\u5907\u4e0a\u7684 SRAM \u4e2d\u4ee5\u4fbf\u7a0d\u540e\u66f4\u5feb\u5730\u68c0\u7d22\u4f1a\u66f4\u6709\u6548\u3002 \u8fd9\u5c31\u662f\u7f13\u5b58\u7684\u4f5c\u7528\u3002\u4ece\u5916\u90e8\u5185\u5b58\u68c0\u7d22\u5230\u7684\u6570\u636e\u4f1a\u5b58\u50a8\u5728\u7f13\u5b58\u4e2d\uff0c\u4ee5\u540e\u7684\u8bf7\u6c42\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4ece\u800c\u91ca\u653e\u5185\u5b58\u5e26\u5bbd\u7528\u4e8e\u5904\u7406\u65b0\u6570\u636e\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#core","title":"Core","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u90fd\u5305\u542b\u4e00\u5b9a\u6570\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u901a\u5e38\u56f4\u7ed5\u7740\u5b83\u53ef\u4ee5\u652f\u6301\u7684\u7ebf\u7a0b\u6570\u91cf\u8fdb\u884c\u8bbe\u8ba1\u3002\u4e3a\u4e86\u6700\u5927\u5316\u5e76\u884c\u5316\uff0c\u9700\u8981\u6700\u4f73\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u4ee5\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 \u5728\u7b80\u5316\u540e\u7684 tiny-gpu \u4e2d\uff0c\u6bcf\u4e2a\u6838\u5fc3\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u7ebf\u7a0b\u5757 (block)\u3002\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\uff0c\u6838\u5fc3\u90fd\u914d\u5907\u4e86\u4e13\u7528\u7684 ALU\u3001LSU\u3001PC \u548c\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u7ba1\u7406\u8fd9\u4e9b\u8d44\u6e90\u6267\u884c\u7ebf\u7a0b\u6307\u4ee4\u662f GPU \u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u95ee\u9898\u4e4b\u4e00\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#schedule","title":"Schedule","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u90fd\u6709\u4e00\u4e2a\u8c03\u5ea6\u5668\uff0c\u8d1f\u8d23\u7ba1\u7406\u7ebf\u7a0b\u7684\u6267\u884c\u3002 tiny-gpu \u7684\u8c03\u5ea6\u5668\u4f1a\u987a\u5e8f\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u6307\u4ee4\uff0c\u76f4\u5230\u5b8c\u6210\uff0c\u7136\u540e\u518d\u62fe\u53d6\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u5757\u3002\u5b83\u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u4f9d\u6b21\u6267\u884c\u6240\u6709\u7ebf\u7a0b\u7684\u6307\u4ee4\u3002 \u5728\u66f4\u9ad8\u7ea7\u7684\u8c03\u5ea6\u5668\u4e2d\uff0c\u4f1a\u4f7f\u7528\u6d41\u6c34\u7ebf (pipelining) \u7b49\u6280\u672f\u6765\u6d41\u5f0f\u6267\u884c\u540e\u7eed\u6307\u4ee4\uff0c\u5728\u5148\u524d\u6307\u4ee4\u5b8c\u5168\u5b8c\u6210\u4e4b\u524d\u6700\u5927\u5316\u8d44\u6e90\u5229\u7528\u7387\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6ce2\u5f62\u8c03\u5ea6 (warp scheduling) \u5e76\u884c\u6267\u884c\u7ebf\u7a0b\u5757\u5185\u7684\u591a\u4e2a\u7ebf\u7a0b\u6279\u6b21\u3002 \u8c03\u5ea6\u5668\u9700\u8981\u89e3\u51b3\u7684\u4e3b\u8981\u9650\u5236\u662f\u4e0e\u4ece\u5168\u5c40\u5185\u5b58\u52a0\u8f7d\u548c\u5b58\u50a8\u6570\u636e\u76f8\u5173\u7684\u5ef6\u8fdf\u3002\u867d\u7136\u5927\u591a\u6570\u6307\u4ee4\u53ef\u4ee5\u540c\u6b65\u6267\u884c\uff0c\u4f46\u8fd9\u4e9b\u52a0\u8f7d/\u5b58\u50a8\u64cd\u4f5c\u662f\u5f02\u6b65\u7684\uff0c\u8fd9\u610f\u5473\u7740\u6307\u4ee4\u6267\u884c\u7684\u5176\u4f59\u90e8\u5206\u5fc5\u987b\u56f4\u7ed5\u8fd9\u4e9b\u8f83\u957f\u7684\u7b49\u5f85\u65f6\u95f4\u8fdb\u884c\u6784\u5efa\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#fetch","title":"Fetch","text":"<p>\u5f02\u6b65\u5730\u4ece\u7a0b\u5e8f\u5185\u5b58\u4e2d\u63d0\u53d6\u5f53\u524d\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u7684\u6307\u4ee4\uff08\u901a\u5e38\u5728\u6267\u884c\u5b8c\u4e00\u4e2a\u7ebf\u7a0b\u5757\u540e\u5e94\u8be5\u4ece\u7f13\u5b58\u4e2d\u63d0\u53d6\uff09\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#decode","title":"Decode","text":"<p>\u5c06\u63d0\u53d6\u7684\u6307\u4ee4\u89e3\u7801\u6210\u63a7\u5236\u7ebf\u7a0b\u6267\u884c\u7684\u63a7\u5236\u4fe1\u53f7\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#rf","title":"RF","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u4e13\u7528\u7684\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u5bc4\u5b58\u5668\u6587\u4ef6\u4fdd\u5b58\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u8ba1\u7b97\u7684\u6570\u636e\uff0c\u4ece\u800c\u5b9e\u73b0\u76f8\u540c\u6307\u4ee4\u591a\u6570\u636e (SIMD) \u6a21\u5f0f\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u6587\u4ef6\u90fd\u5305\u542b\u4e00\u4e9b\u53ea\u8bfb\u5bc4\u5b58\u5668\uff0c\u5176\u4e2d\u5b58\u50a8\u6709\u5173\u6b63\u5728\u5c40\u90e8\u6267\u884c\u7684\u5f53\u524d\u7ebf\u7a0b\u5757\u548c\u7ebf\u7a0b\u7684\u6570\u636e\uff0c\u4f7f\u5185\u6838\u80fd\u591f\u57fa\u4e8e\u5c40\u90e8\u7ebf\u7a0b ID \u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u6267\u884c\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#alu","title":"ALU","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u4e13\u7528\u7b97\u672f\u903b\u8f91\u5355\u5143\u7528\u4e8e\u6267\u884c\u8ba1\u7b97\u3002\u5904\u7406\u52a0\u6cd5 (ADD)\u3001\u51cf\u6cd5 (SUB)\u3001\u4e58\u6cd5 (MUL)\u3001\u9664\u6cd5 (DIV) \u7b49\u7b97\u672f\u6307\u4ee4\u3002 \u8fd8\u5904\u7406\u6bd4\u8f83\u6307\u4ee4 (CMP)\uff0c\u8be5\u6307\u4ee4\u5b9e\u9645\u4e0a\u8f93\u51fa\u4e24\u4e2a\u5bc4\u5b58\u5668\u5dee\u503c\u662f\u8d1f\u6570\u3001\u96f6\u8fd8\u662f\u6b63\u6570\u7684\u7ed3\u679c\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728 PC \u5355\u5143\u4e2d\u7684 NZP \u5bc4\u5b58\u5668\u4e2d\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#lsu","title":"LSU","text":"<p>\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u4e13\u7528\u52a0\u8f7d\u5b58\u50a8\u5355\u5143\u7528\u4e8e\u8bbf\u95ee\u5168\u5c40\u6570\u636e\u5185\u5b58\u3002 \u5904\u7406\u52a0\u8f7d (LDR) \u548c\u5b58\u50a8 (STR) \u6307\u4ee4\uff0c\u5e76\u5904\u7406\u5185\u5b58\u8bf7\u6c42\u88ab\u5185\u5b58\u63a7\u5236\u5668\u5904\u7406\u548c\u4e2d\u7ee7\u7684\u5f02\u6b65\u7b49\u5f85\u65f6\u95f4\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#pc","title":"PC","text":"<p>\u6bcf\u4e2a\u5355\u5143\u7684\u4e13\u7528\u7a0b\u5e8f\u8ba1\u6570\u5668\u7528\u4e8e\u786e\u5b9a\u6bcf\u4e2a\u7ebf\u7a0b\u63a5\u4e0b\u6765\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPC \u5728\u6bcf\u4e2a\u6307\u4ee4\u540e\u9012\u589e 1\u3002 \u4f7f\u7528\u5206\u652f\u6307\u4ee4 (BRnzp)\uff0cNZP \u5bc4\u5b58\u5668\u4f1a\u68c0\u67e5 NZP \u5bc4\u5b58\u5668\uff08\u7531\u5148\u524d\u7684 CMP \u6307\u4ee4\u8bbe\u7f6e\uff09\u662f\u5426\u5339\u914d\u67d0\u4e9b\u60c5\u51b5 - \u5982\u679c\u5339\u914d\uff0c\u5b83\u5c06\u8df3\u8f6c\u5230\u7a0b\u5e8f\u5185\u5b58\u7684\u7279\u5b9a\u884c\u3002\u8fd9\u5c31\u662f\u5faa\u73af\u548c\u6761\u4ef6\u8bed\u53e5\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u7531\u4e8e\u7ebf\u7a0b\u5e76\u884c\u5904\u7406\uff0ctiny-gpu \u5047\u8bbe\u6240\u6709\u7ebf\u7a0b\u5728\u6bcf\u4e2a\u6307\u4ee4\u540e\u90fd\u201c\u6536\u655b\u201d\u5230\u76f8\u540c\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668 - \u8fd9\u4e3a\u4e86\u7b80\u5316\u8d77\u89c1\uff0c\u662f\u4e00\u4e2a\u8fd1\u4f3c\u5047\u8bbe\u3002 \u5728\u771f\u6b63\u7684GPU\u4e2d\uff0c\u5355\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e0d\u540c\u7684 PC\uff0c\u5bfc\u81f4\u5206\u652f\u5206\u6b67 (branch divergence)\uff0c\u5373\u6700\u521d\u4e00\u8d77\u5904\u7406\u7684\u4e00\u7ec4\u7ebf\u7a0b\u5fc5\u987b\u5206\u88c2\u6210\u5355\u72ec\u7684\u6267\u884c\u90e8\u5206\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#memory","title":"Memory","text":"<p>GPU \u901a\u5e38\u8fde\u63a5\u5916\u90e8\u5168\u5c40\u5185\u5b58\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\u3002\u4e3a\u4e86\u7b80\u5316\u8bbe\u8ba1\uff0ctiny-gpu \u5c06\u6570\u636e\u5185\u5b58\u548c\u7a0b\u5e8f\u5185\u5b58\u5206\u5f00\u5b58\u653e\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_6","title":"\u5168\u5c40\u5185\u5b58","text":"<p>tiny-gpu\u6570\u636e\u5185\u5b58\u5177\u6709\u4ee5\u4e0b\u89c4\u683c 8 \u4f4d\u5bfb\u5740 (\u603b\u5171256\u884c\u6570\u636e) 8 \u4f4d\u6570\u636e (\u6bcf\u884c\u5b58\u50a8\u5c0f\u4e8e 256 \u7684\u503c)</p> <p>tiny-gpu\u7a0b\u5e8f\u5185\u5b58\u5177\u6709\u4ee5\u4e0b\u89c4\u683c 8 \u4f4d\u5bfb\u5740 (256\u884c\u7a0b\u5e8f\u5185\u5b58) 16 \u4f4d\u6570\u636e (\u6839\u636e\u6307\u4ee4\u96c6\u89c4\u5b9a\uff0c\u6bcf\u6761\u6307\u4ee4\u4e3a 16 \u4f4d)</p>"},{"location":"GPGPU/Tiny-gpu/#_7","title":"\u63a7\u5236\u5668","text":"<p>\u5168\u5c40\u5185\u5b58\u5177\u6709\u56fa\u5b9a\u7684\u8bfb\u5199\u5e26\u5bbd\uff0c\u4f46\u662f\u6240\u6709\u8ba1\u7b97\u6838\u5fc3\u8bbf\u95ee\u5185\u5b58\u7684\u6570\u636e\u8bf7\u6c42\u53ef\u80fd\u4f1a\u8fdc\u8fdc\u8d85\u51fa\u5916\u90e8\u5185\u5b58\u7684\u5b9e\u9645\u5904\u7406\u80fd\u529b\u3002 \u5185\u5b58\u63a7\u5236\u5668\u8d1f\u8d23\u8ddf\u8e2a\u6765\u81ea\u8ba1\u7b97\u6838\u5fc3\u7684\u6240\u6709\u4f20\u51fa\u5185\u5b58\u8bf7\u6c42\uff0c\u6839\u636e\u5b9e\u9645\u5916\u90e8\u5185\u5b58\u5e26\u5bbd\u9650\u5236\u8bf7\u6c42\uff0c\u5e76\u5c06\u5916\u90e8\u5185\u5b58\u7684\u54cd\u5e94\u4f20\u9012\u56de\u76f8\u5e94\u7684\u8d44\u6e90\u3002 \u6bcf\u4e2a\u5185\u5b58\u63a7\u5236\u5668\u6839\u636e\u5168\u5c40\u5185\u5b58\u7684\u5e26\u5bbd\u914d\u7f6e\u4e86\u56fa\u5b9a\u6570\u91cf\u7684\u901a\u9053\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_8","title":"\u5b58\u50a8","text":"<p>\u5168\u5c40\u5185\u5b58\u4e2d\u7684\u76f8\u540c\u6570\u636e\u7ecf\u5e38\u88ab\u591a\u4e2a\u8ba1\u7b97\u6838\u5fc3\u8bf7\u6c42\u3002\u53cd\u590d\u8bbf\u95ee\u5168\u5c40\u5185\u5b58\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u56e0\u4e3a\u6570\u636e\u5df2\u7ecf\u83b7\u53d6\u8fc7\u4e00\u6b21\uff0c\u6240\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u8bbe\u5907\u4e0a\u7684 SRAM \u4e2d\u4ee5\u4fbf\u7a0d\u540e\u66f4\u5feb\u5730\u68c0\u7d22\u4f1a\u66f4\u6709\u6548\u3002 \u8fd9\u5c31\u662f\u7f13\u5b58\u7684\u4f5c\u7528\u3002\u4ece\u5916\u90e8\u5185\u5b58\u68c0\u7d22\u5230\u7684\u6570\u636e\u4f1a\u5b58\u50a8\u5728\u7f13\u5b58\u4e2d\uff0c\u4ee5\u540e\u7684\u8bf7\u6c42\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4ece\u800c\u91ca\u653e\u5185\u5b58\u5e26\u5bbd\u7528\u4e8e\u5904\u7406\u65b0\u6570\u636e\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#isa","title":"ISA","text":"<p>tiny-gpu \u5b9e\u73b0\u4e86\u4e00\u5957\u7b80\u5355\u7684 11 \u6761\u6307\u4ee4\u7684\u6307\u4ee4\u96c6\u67b6\u6784 (ISA)\uff0c\u5728\u652f\u6301\u7528\u4e8e\u6982\u5ff5\u9a8c\u8bc1\u7684\u7b80\u5355\u5185\u6838\uff0c\u4f8b\u5982\u77e9\u9635\u52a0\u6cd5\u548c\u77e9\u9635\u4e58\u6cd5\u3002</p> <p></p> <p>\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\uff0ctiny-gpu \u652f\u6301\u4ee5\u4e0b\u6307\u4ee4 <code>BRnzp (\u5206\u652f\u6307\u4ee4)</code> - \u5982\u679c NZP \u5bc4\u5b58\u5668\u503c\u6ee1\u8db3\u6307\u4ee4\u4e2d\u6307\u5b9a\u7684 nzp \u6761\u4ef6\uff0c\u5219\u8df3\u8f6c\u5230\u7a0b\u5e8f\u5185\u5b58\u4e2d\u7684\u53e6\u4e00\u884c\u3002</p> <p><code>CMP (\u6bd4\u8f83\u6307\u4ee4)</code> - \u6bd4\u8f83\u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728 NZP \u5bc4\u5b58\u5668\u4e2d\uff0c\u4f9b\u540e\u7eed\u7684 BRnzp \u6307\u4ee4\u4f7f\u7528\u3002</p> <p><code>ADD\u3001SUB\u3001MUL\u3001DIV (\u57fa\u672c\u7b97\u672f\u8fd0\u7b97)</code> - \u652f\u6301\u5f20\u91cf\u8fd0\u7b97\u7684\u57fa\u672c\u7b97\u672f\u64cd\u4f5c\u3002</p> <p><code>LDR (\u52a0\u8f7d\u6307\u4ee4)</code>- \u4ece\u5168\u5c40\u5185\u5b58\u4e2d\u52a0\u8f7d\u6570\u636e\u3002</p> <p><code>STR (\u5b58\u50a8\u6307\u4ee4)</code> - \u5c06\u6570\u636e\u5b58\u50a8\u5230\u5168\u5c40\u5185\u5b58\u4e2d\u3002</p> <p><code>CONST (\u5e38\u91cf\u52a0\u8f7d\u6307\u4ee4)</code> - \u5c06\u5e38\u91cf\u503c\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\u3002</p> <p><code>RET (\u8fd4\u56de\u6307\u4ee4)</code> - \u8868\u793a\u5f53\u524d\u7ebf\u7a0b\u5df2\u6267\u884c\u5b8c\u6bd5\u3002</p> <p>\u6bcf\u4e2a\u5bc4\u5b58\u5668\u75314\u4f4d\u6307\u5b9a\uff0c\u610f\u5473\u7740\u5171\u670916\u4e2a\u5bc4\u5b58\u5668\u3002\u524d13\u4e2a\u5bc4\u5b58\u5668 R0-R12 \u662f\u53ef\u8bfb\u5199\u7684\u901a\u7528\u5bc4\u5b58\u5668\u3002\u6700\u540e 3 \u4e2a\u5bc4\u5b58\u5668\u662f\u7279\u6b8a\u7684\u53ea\u8bfb\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u63d0\u4f9b\u5bf9 SIMD \u5173\u952e\u7684 %blockIdx\u3001%blockDim \u548c %threadIdx \u503c\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#exe","title":"Exe","text":""},{"location":"GPGPU/Tiny-gpu/#_9","title":"\u542f\u52a8\u5185\u6838","text":"<p>\u6bcf\u4e2a\u6838\u5fc3\u9075\u5faa\u4ee5\u4e0b\u63a7\u5236\u6d41\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u9636\u6bb5\u6765\u6267\u884c\u6bcf\u4e2a\u6307\u4ee4\uff1a</p> <ol> <li> <p><code>\u83b7\u53d6 (FETCH)</code>\uff1a\u4ece\u7a0b\u5e8f\u5185\u5b58\u4e2d\u83b7\u53d6\u5f53\u524d\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u3002</p> </li> <li> <p><code>\u89e3\u7801 (DECODE)</code>\uff1a\u5c06\u6307\u4ee4\u89e3\u7801\u6210\u63a7\u5236\u4fe1\u53f7\u3002</p> </li> <li> <p><code>\u8bf7\u6c42 (REQUEST)</code>\uff1a\u5982\u679c\u662f\u52a0\u8f7d (LDR) \u6216\u5b58\u50a8 (STR) \u6307\u4ee4\uff0c\u5219\u9700\u8981\u4ece\u5168\u5c40\u5185\u5b58\u4e2d\u8bf7\u6c42\u6570\u636e\u3002</p> </li> <li> <p><code>\u7b49\u5f85 (WAIT)</code>\uff1a\u5982\u679c\u9002\u7528\uff0c\u7b49\u5f85\u6765\u81ea\u5168\u5c40\u5185\u5b58\u7684\u6570\u636e\u3002</p> </li> <li> <p><code>\u6267\u884c (EXECUTE)</code>\uff1a\u5bf9\u6570\u636e\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\u3002</p> </li> <li> <p><code>\u66f4\u65b0 (UPDATE)</code>\uff1a\u66f4\u65b0\u5bc4\u5b58\u5668\u6587\u4ef6\u548c NZP \u5bc4\u5b58\u5668\u3002</p> </li> </ol> <p>\u7b80\u5316\u7406\u89e3\uff0c\u63a7\u5236\u6d41\u7a0b\u88ab\u8fd9\u6837\u5212\u5206\u5f00\u6765\u3002 \u5b9e\u9645\u4e0a\uff0c\u4e3a\u4e86\u4f18\u5316\u5904\u7406\u65f6\u95f4\uff0c\u5176\u4e2d\u51e0\u4e2a\u6b65\u9aa4\u53ef\u4ee5\u88ab\u538b\u7f29\u3002GPU \u8fd8\u53ef\u4ee5\u4f7f\u7528\u6d41\u6c34\u7ebf (pipelining) \u6280\u672f\u5728\u6838\u5fc3\u8d44\u6e90\u4e0a\u6d41\u5f0f\u534f\u8c03\u6267\u884c\u8bb8\u591a\u6307\u4ee4\uff0c\u800c\u65e0\u9700\u7b49\u5f85\u5148\u524d\u6307\u4ee4\u5b8c\u6210\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_10","title":"\u7ebf\u7a0b\u6267\u884c","text":"<p>\u5728\u6bcf\u4e2a\u6838\u5fc3\u5185\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u9075\u5faa\u4e0a\u8ff0\u6267\u884c\u8def\u5f84\uff0c\u5bf9\u5176\u4e13\u7528\u5bc4\u5b58\u5668\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u6267\u884c\u8ba1\u7b97\u3002 \u8fd9\u7c7b\u4f3c\u4e8e\u6807\u51c6\u7684 CPU \u67b6\u6784\u56fe\uff0c\u5728\u529f\u80fd\u4e0a\u4e5f\u76f8\u5f53\u76f8\u4f3c\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u53ea\u8bfb\u5bc4\u5b58\u5668\u4e2d\u5305\u542b %blockIdx\u3001%blockDim \u548c %threadIdx \u503c\uff0c\u4ece\u800c\u5b9e\u73b0 SIMD \u529f\u80fd\u3002 </p>"},{"location":"GPGPU/Tiny-gpu/#simulation","title":"Simulation","text":"<p>tiny-gpu \u53ef\u4ee5\u6a21\u62df\u4e0a\u8ff0\u4e24\u79cd\u5185\u6838\u7684\u6267\u884c\u3002\u5728\u8fdb\u884c\u6a21\u62df\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u5b89\u88c5 iverilog \u548c cocotb\u3002 \u5b89\u88c5\u5b8c\u5148\u51b3\u6761\u4ef6\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 make test_matadd \u548c make test_matmul \u8fd0\u884c\u5185\u6838\u6a21\u62df\u3002 \u6267\u884c\u6a21\u62df\u5c06\u5728 test/logs \u4e2d\u8f93\u51fa\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u521d\u59cb\u6570\u636e\u5185\u5b58\u72b6\u6001\u3001\u5185\u6838\u7684\u5b8c\u6574\u6267\u884c\u8ddf\u8e2a\u4ee5\u53ca\u6700\u7ec8\u6570\u636e\u5185\u5b58\u72b6\u6001\u3002 \u5982\u679c\u60a8\u67e5\u770b\u6bcf\u4e2a\u65e5\u5fd7\u6587\u4ef6\u5f00\u5934\u8bb0\u5f55\u7684\u521d\u59cb\u6570\u636e\u5185\u5b58\u72b6\u6001\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u7528\u4e8e\u8ba1\u7b97\u7684\u4e24\u4e2a\u8d77\u59cb\u77e9\u9635\uff0c\u5e76\u4e14\u5728\u6587\u4ef6\u672b\u5c3e\u7684\u6700\u7ec8\u6570\u636e\u5185\u5b58\u4e2d\uff0c\u60a8\u8fd8\u5e94\u8be5\u4f1a\u770b\u5230\u7ed3\u679c\u77e9\u9635\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#to-do","title":"To do","text":"<p>tiny-gpu \u7701\u7565\u4e86\u8bb8\u591a\u73b0\u4ee3 GPU \u4e2d\u5b9e\u73b0\u7684\u989d\u5916\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6027\u80fd\u548c\u529f\u80fd\u3002\u672c\u8282\u5c06\u8ba8\u8bba\u5176\u4e2d\u4e00\u4e9b\u6700\u5173\u952e\u7684\u7279\u6027\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_11","title":"\u591a\u7ea7\u7f13\u5b58\u548c\u5171\u4eab\u5185\u5b58","text":"<p>\u5728\u73b0\u4ee3 GPU \u4e2d\uff0c\u4f7f\u7528\u591a\u4e2a\u4e0d\u540c\u7ea7\u522b\u7684\u7f13\u5b58\u6765\u6700\u5c0f\u5316\u9700\u8981\u4ece\u5168\u5c40\u5185\u5b58\u8bbf\u95ee\u7684\u6570\u636e\u91cf\u3002tiny-gpu \u53ea\u5728\u8bf7\u6c42\u5185\u5b58\u7684\u5355\u4e2a\u8ba1\u7b97\u5355\u5143\u548c\u5b58\u50a8\u6700\u8fd1\u7f13\u5b58\u6570\u636e\u7684\u5185\u5b58\u63a7\u5236\u5668\u4e4b\u95f4\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7f13\u5b58\u5c42\u3002</p> <p>\u5b9e\u73b0\u591a\u7ea7\u7f13\u5b58\u5141\u8bb8\u5c06\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u66f4\u672c\u5730\u5730\u7f13\u5b58\u5230\u5176\u4f7f\u7528\u4f4d\u7f6e\uff08\u67d0\u4e9b\u7f13\u5b58\u4f4d\u4e8e\u5355\u4e2a\u8ba1\u7b97\u6838\u5fc3\u5185\uff09\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u6b64\u6570\u636e\u7684\u52a0\u8f7d\u65f6\u95f4\u3002\u4e0d\u540c\u7684\u7f13\u5b58\u7b97\u6cd5\u7528\u4e8e\u6700\u5927\u5316\u7f13\u5b58\u547d\u4e2d\u7387 - \u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6765\u6539\u5584\u7684\u5173\u952e\u65b9\u9762\u3002</p> <p>\u6b64\u5916\uff0cGPU \u7ecf\u5e38\u4f7f\u7528\u5171\u4eab\u5185\u5b58\uff0c\u4f7f\u540c\u4e00\u5757\u4e2d\u7684\u7ebf\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u5355\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u8be5\u7a7a\u95f4\u53ef\u4ee5\u7528\u6765\u4e0e\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u7ed3\u679c\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_12","title":"\u5185\u5b58\u5408\u5e76","text":"<p>GPU \u4f7f\u7528\u7684\u53e6\u4e00\u4e2a\u5173\u952e\u5185\u5b58\u4f18\u5316\u662f\u5185\u5b58\u5408\u5e76\u3002\u5e76\u884c\u8fd0\u884c\u7684\u591a\u4e2a\u7ebf\u7a0b\u901a\u5e38\u9700\u8981\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u8fde\u7eed\u5730\u5740\uff08\u4f8b\u5982\uff0c\u4e00\u7ec4\u7ebf\u7a0b\u8bbf\u95ee\u77e9\u9635\u4e2d\u7684\u76f8\u90bb\u5143\u7d20\uff09\uff0c\u4f46\u662f\u6bcf\u4e2a\u5185\u5b58\u8bf7\u6c42\u90fd\u5355\u72ec\u63d0\u4ea4\u3002</p> <p>\u5185\u5b58\u5408\u5e76\u7528\u4e8e\u5206\u6790\u6392\u961f\u7684\u5185\u5b58\u8bf7\u6c42\u5e76\u5c06\u76f8\u90bb\u8bf7\u6c42\u5408\u5e76\u6210\u5355\u4e2a\u4e8b\u52a1\uff0c\u4ece\u800c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5bfb\u5740\u65f6\u95f4\u5e76\u4e00\u8d77\u53d1\u51fa\u6240\u6709\u8bf7\u6c42\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_13","title":"\u6d41\u6c34\u7ebf","text":"<p>\u5728 tiny-gpu \u7684\u63a7\u5236\u6d41\u4e2d\uff0c\u5185\u6838\u4f1a\u5728\u5bf9\u4e00\u7ec4\u7ebf\u7a0b\u6267\u884c\u4e00\u6761\u6307\u4ee4\u540e\u624d\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u6761\u6307\u4ee4\u3002</p> <p>\u73b0\u4ee3 GPU \u4f7f\u7528\u6d41\u6c34\u7ebf\u6765\u4e00\u6b21\u6d41\u5f0f\u6267\u884c\u591a\u4e2a\u987a\u5e8f\u6307\u4ee4\uff0c\u540c\u65f6\u786e\u4fdd\u76f8\u4e92\u4f9d\u8d56\u7684\u6307\u4ee4\u4ecd\u7136\u6309\u987a\u5e8f\u6267\u884c\u3002\u8fd9\u6709\u52a9\u4e8e\u6700\u5927\u5316\u5185\u6838\u5185\u7684\u8d44\u6e90\u5229\u7528\u7387\uff0c\u56e0\u4e3a\u8d44\u6e90\u4e0d\u4f1a\u5728\u7b49\u5f85\u65f6\u95f2\u7f6e\uff08\u4f8b\u5982\uff1a\u5f02\u6b65\u5185\u5b58\u8bf7\u6c42\u671f\u95f4\uff09\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_14","title":"\u6ce2\u5f62\u8c03\u5ea6","text":"<p>\u53e6\u4e00\u79cd\u7528\u4e8e\u6700\u5927\u5316\u8d44\u6e90\u5229\u7528\u7387\u7684\u7b56\u7565\u662f\u6ce2\u5f62\u8c03\u5ea6\u3002\u8fd9\u79cd\u65b9\u6cd5\u6d89\u53ca\u5c06\u5757\u5206\u89e3\u6210\u53ef\u4ee5\u4e00\u8d77\u6267\u884c\u7684\u5355\u72ec\u7ebf\u7a0b\u6279\u5904\u7406\u3002\u53ef\u4ee5\u5728\u5355\u4e2a\u6838\u5fc3\u4e0a\u540c\u65f6\u6267\u884c\u591a\u4e2a\u6ce2\u5f62\uff0c\u65b9\u6cd5\u662f\u5728\u4e00\u4e2a\u6ce2\u5f62\u7b49\u5f85\u65f6\u4ece\u53e6\u4e00\u4e2a\u6ce2\u5f62\u6267\u884c\u6307\u4ee4\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u6d41\u6c34\u7ebf\uff0c\u4f46\u5904\u7406\u6765\u81ea\u4e0d\u540c\u7ebf\u7a0b\u7684\u6307\u4ee4\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_15","title":"\u5206\u652f\u5206\u6b67","text":"<p>tiny-gpu \u5047\u8bbe\u5355\u4e2a\u6279\u5904\u7406\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u5728\u6bcf\u4e2a\u6307\u4ee4\u540e\u90fd\u6700\u7ec8\u4f4d\u4e8e\u76f8\u540c\u7684 PC \u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u7ebf\u7a0b\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u5176\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u5355\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u76f8\u4e92\u5206\u6b67\u5e76\u6839\u636e\u5176\u6570\u636e\u5206\u652f\u5230\u4e0d\u540c\u7684\u884c\u3002\u4f7f\u7528\u4e0d\u540c\u7684 PC\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u9700\u8981\u62c6\u5206\u6210\u672c\u8d28\u4e0a\u4e0d\u540c\u7684\u6267\u884c\u7ebf\u8def\uff0c\u8fd9\u9700\u8981\u7ba1\u7406\u53d1\u6563\u7684\u7ebf\u7a0b\u5e76\u6ce8\u610f\u7ebf\u7a0b\u4f55\u65f6\u518d\u6b21\u6536\u655b\u3002</p>"},{"location":"GPGPU/Tiny-gpu/#_16","title":"\u540c\u6b65\u548c\u5c4f\u969c","text":"<p>\u73b0\u4ee3 GPU \u7684\u53e6\u4e00\u4e2a\u6838\u5fc3\u529f\u80fd\u662f\u80fd\u591f\u8bbe\u7f6e\u5c4f\u969c\uff0c\u4ee5\u4fbf\u5757\u4e2d\u7684\u7ebf\u7a0b\u7ec4\u53ef\u4ee5\u540c\u6b65\u5e76\u7b49\u5f85\u540c\u4e00\u5757\u4e2d\u7684\u6240\u6709\u5176\u4ed6\u7ebf\u7a0b\u5230\u8fbe\u67d0\u4e2a\u70b9\u7136\u540e\u518d\u7ee7\u7eed\u6267\u884c\u3002 \u8fd9\u5bf9\u4e8e\u7ebf\u7a0b\u9700\u8981\u76f8\u4e92\u4ea4\u6362\u5171\u4eab\u6570\u636e\u7684\u60c5\u51b5\u5f88\u6709\u7528\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u786e\u4fdd\u6570\u636e\u5df2\u5b8c\u5168\u5904\u7406\u3002</p>"},{"location":"GPGPU/Ventus/","title":"Introduction","text":"<p>\u627f\u5f71GPGPU\u662f\u4e00\u6b3e\u91c7\u7528\u5f00\u6e90\u6307\u4ee4\u96c6RISC-V\u53ca\u5176Vector\u6269\u5c55\u6307\u4ee4\u96c6\u8bbe\u8ba1\u7684\u4e00\u6b3eSIMT\u67b6\u6784\u7684GPGPU\uff0c\u4e5f\u662f\u4e16\u754c\u9996\u6b3e\u57fa\u4e8eRVV\u7684GPGPU\u3002\u76ee\u524d\u5df2\u7ecf\u5f00\u6e90\u53d1\u5e03\uff0c\u5f00\u6e90\u4ee3\u7801\u5305\u62ec\u627f\u5f71GPGPU\u6e90\u7801\uff0cgcc\u5de5\u5177\u94fe\u548cspike\u4eff\u771f\u5668\u3002 \u627f\u5f71GPGPU\u65e2\u4fdd\u6301\u4e86RISC-V Vector\u6307\u4ee4\u96c6\u7684\u4f18\u52bf\uff0c\u53c8\u5229\u7528\u4e86SIMT\u67b6\u6784\u6269\u5c55\u6027\u597d\u7684\u7279\u70b9\uff0c\u5b9e\u73b0\u4e86\u5f00\u6e90\u6307\u4ee4\u96c6\u9ad8\u6027\u80fdGPGPU\u7684\u8bbe\u8ba1\uff0cChisel\u8bed\u8a00\u7f16\u5199\u3002 </p> <p>Github</p> <p>https://github.com/THU-DSP-LAB</p> <p>Gitee</p> <p>https://gitee.com/tsinghua-sh</p> <p>\u5b98\u7f51</p> <p>https://opengpgpu.org.cn/</p>"},{"location":"GPGPU/Vortex/Architecture/","title":"Vortex","text":""},{"location":"GPGPU/Vortex/Architecture/#architecture","title":"Architecture","text":""},{"location":"GPGPU/Vortex/Architecture/#isa","title":"ISA","text":""},{"location":"GPGPU/Vortex/Introduction/","title":"Introduction","text":"<p>Vortex \u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u7801\u7684\u901a\u7528\u5e76\u884c\u8ba1\u7b97\uff08GPGPU\uff09\u6846\u67b6\uff0c\u4e13\u4e3a\u9ad8\u6548\u5229\u7528\u73b0\u4ee3\u56fe\u5f62\u5904\u7406\u5668\u7684\u8ba1\u7b97\u80fd\u529b\u800c\u8bbe\u8ba1\u3002\u5b83\u91c7\u7528C++\u63a5\u53e3\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u6613\u4e8e\u4f7f\u7528\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u65e8\u5728\u7b80\u5316GPU\u7f16\u7a0b\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u66f4\u4fbf\u6377\u5730\u5b9e\u73b0\u9ad8\u6027\u80fd\u8ba1\u7b97\u4efb\u52a1\u3002  Vortex \u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aVerilog</li> <li>\u5f00\u6e90\u534f\u8bae\uff1aApache-2.0 license\uff08\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u4fee\u6539\u4ee3\u7801\u6765\u6ee1\u8db3\u9700\u8981\u5e76\u4f5c\u4e3a\u5f00\u6e90\u6216\u5546\u4e1a\u4ea7\u54c1\u53d1\u5e03/\u9500\u552e\uff09</li> <li>\u6307\u4ee4\u96c6\u67b6\u6784\uff1aRISC-V RV32IMAF\uff0c RV64IMAFD</li> <li>\u7b97\u529b\uff1a\u53ef\u4ee5\u5728FPGA\u4e0a\u6269\u5c55\u523032\u6838\uff0c\u5728200 Mhz\u65f6\u7684\u5cf0\u503c\u6027\u80fd\u4e3a25.6 GFlops</li> <li>\u8f6f\u4ef6\uff1a\u652f\u6301OpenCL</li> <li>\u652f\u6301\u7684FPGA\uff1a Altera Arria 10\uff0cAltera Stratix 10\uff0cXilinx Alveo U50, U250, U280\uff0cXilinx Versal VCK5000</li> <li>\u6307\u4ee4\uff1a\u6dfb\u52a0\u4e866\u6761\u81ea\u5b9a\u4e49\u6307\u4ee4\u652f\u6301GPGPU</li> </ul> <p>\u53c2\u8003\u8d44\u6599</p> <p>https://blog.csdn.net/u014756627/article/details/132591618?spm=1001.2014.3001.5502 https://blog.csdn.net/wwzzwwzzjjjj/article/details/123388551</p>"},{"location":"blog/","title":"Blog","text":"<p>Entry</p>"},{"location":"blog/Archive/1/","title":"Hello world","text":"<p>\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u65e5\u5fd7\u3002\u5efa\u7acb\u9759\u6001\u7f51\u7ad9\u7684\u8fc7\u7a0b\u5f88\u6709\u8da3\uff01</p> <p>Reference</p> <p>https://wdk-docs.github.io/mkdocs-material-docs/</p> <p>Reference</p> <p>https://squidfunk.github.io/mkdocs-material/</p>"},{"location":"gem5/","title":"Getting Started","text":"<p>gem5\u662f\u4e00\u4e2a\u5f00\u6e90\u8ba1\u7b97\u673a\u67b6\u6784\u6a21\u62df\u5668\uff0c\u5305\u62ec\u7cfb\u7edf\u7ea7\u67b6\u6784\u4ee5\u53ca\u5904\u7406\u5668\u5fae\u67b6\u6784\u3002</p> <p>learning_gem5</p> <p>https://www.gem5.org/documentation/learning_gem5/part1/extending_configs</p> <p>general_docs</p> <p>https://www.gem5.org/documentation/general_docs/cpu_models/minor_cpu</p> <p>\u4e2d\u6587\u5b66\u4e60\u8d44\u6599</p> <p>https://zhuanlan.zhihu.com/p/530336703 https://zybzzz.github.io/ybsite/notes/sim/gem5/cpu_model.html#minorcpu https://blog.csdn.net/zhenz0729/article/details/135464175?spm=1001.2014.3001.5502 https://blog.csdn.net/qq_34898487?type=blog</p>"},{"location":"gem5/Introduction/","title":"gem5","text":""},{"location":"gem5/Introduction/#introduction","title":"Introduction","text":"<p>gem5\u662f\u4e00\u4e2a\u5f00\u6e90\u8ba1\u7b97\u673a\u67b6\u6784\u6a21\u62df\u5668\uff0c\u5305\u62ec\u7cfb\u7edf\u7ea7\u67b6\u6784\u4ee5\u53ca\u5904\u7406\u5668\u5fae\u67b6\u6784\u3002gem5\u7684\u524d\u8eab\u4e3a\u5bc6\u6b47\u6839\u5927\u5b66\u7684m5\u9879\u76ee\u4e0e\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u7684GEMS\u9879\u76ee\u30022011\u5e74m5\u4e0eGEMS\u5408\u5e76\u4e3agem5\uff0c\u76ee\u524d\u88ab\u5e7f\u6cdb\u7528\u4e8e\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u3002\u901a\u8fc7\u8c37\u6b4c\u5b66\u672f\u53ef\u4ee5\u770b\u5230\uff0cgem5\u76ee\u524d\u88ab\u5f15\u7528\u8d85\u8fc75000\u6b21\uff0c\u5927\u91cf\u8bba\u6587\u91c7\u7528gem5\u4f5c\u4e3a\u7814\u7a76\u5de5\u5177\u3002\u540c\u65f6\u4e5f\u88ab\u8bb8\u591a\u5de5\u4e1a\u754c\u516c\u53f8\u4f7f\u7528\uff0c\u5305\u62ecARM\u3001AMD\u3001Google\u3001Micron\u3001Metempsy\u3001HP\u3001Samsung\u7b49\u3002\u8bb8\u591a\u516c\u53f8\u4e5f\u79ef\u6781\u4e3agem5\u6dfb\u52a0\u4e86\u65b0\u529f\u80fd\u6216\u6539\u8fdb\u4e86\u73b0\u6709\u529f\u80fd\u3002\u8fd1\u5e74\u6765\uff0cgem5\u793e\u533a\u4ecd\u5728\u79ef\u6781\u66f4\u65b0\u4e0e\u5f00\u53d1\uff0c\u4ee5\u652f\u6301\u672a\u676515\u5e74\u7684\u8ba1\u7b97\u673a\u67b6\u6784\u7814\u7a76\u3002</p> <p>gem5\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u79bb\u6563\u4e8b\u4ef6\u9a71\u52a8\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u6a21\u62df\u5668\u5e73\u53f0\u3002\u8fd9\u610f\u5473\u7740\uff0c\u67b6\u6784\u7814\u7a76\u4eba\u5458\u5728\u7814\u7a76\u65b0\u67b6\u6784\u65f6\uff0c\u53ea\u9700\u6dfb\u52a0\u6216\u4fee\u6539\u7279\u5b9a\u4e8e\u76ee\u6807\u7684\u529f\u80fd\u6a21\u5757\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u6a21\u62df\u5668\u7684\u65b9\u65b9\u9762\u9762\u3002\u540c\u65f6\uff0c\u4e5f\u4f7f\u5f97gem5\u5bb9\u6613\u4e0e\u5176\u4ed6\u6a21\u62df\u5668\u8054\u5408\u4eff\u771f\uff0c\u6784\u5efa\u8054\u5408\u6a21\u62df\u5668\u5e73\u53f0\u6216\u642d\u5efa\u81ea\u5df1\u7684\u6a21\u62df\u7cfb\u7edf\uff0c\u76ee\u524d\u5df2\u6709\u8bb8\u591a\u5de5\u4f5c\u57fa\u4e8egem5\u5f00\u53d1\u4e86\u6a21\u62df\u5e73\u53f0\u3002</p> <p>gem5\u4e3b\u8981\u7531C++\u548cpython\u7f16\u5199\u7684\u3002\u5176\u4e2dC++\u5360\u7edd\u5927\u591a\u6570\uff0c\u4e3b\u8981\u8d1f\u8d23\u5e95\u5c42\u67b6\u6784\u7684\u5177\u4f53\u5b9e\u73b0\u7b49\uff0cpython\u5219\u8d1f\u8d23\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u3001\u914d\u7f6e\u548c\u6a21\u62df\u63a7\u5236\u7b49\u3002\u53e6\u5916\u5305\u542b\u4e86\u4e24\u4e2a\u9886\u57df\u7279\u5b9a\u8bed\u8a00DSL\uff0c\u5176\u4e2dISADSL\u8d1f\u8d23\u7edf\u4e00\u4e8c\u8fdb\u5236\u6307\u4ee4\u7684\u89e3\u7801\u548c\u8bed\u4e49\u89c4\u8303\uff0cSLICC\u7528\u4e8e\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p> <p>gem5\u7684\u4e3b\u8981\u7279\u6027\u5305\u62ec\uff1a</p> <ol> <li> <p>\u6a21\u62df\u5668\u67b6\u6784\u6a21\u5757\u5316\uff1agem5\u7684\u67b6\u6784\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u4f7f\u5f97\u67b6\u6784\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u53ea\u6dfb\u52a0\u6216\u4fee\u6539\u7279\u5b9a\u4e8e\u76ee\u6807\u7684\u529f\u80fd\u6a21\u5757\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u6a21\u62df\u5668\u7684\u65b9\u65b9\u9762\u9762\u3002</p> </li> <li> <p>\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\u652f\u6301\uff1agem5\u652f\u6301\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\uff0c\u5305\u62ecARM\u3001MIPS\u3001PowerPC\u3001x86\u3001SPARC\u3001Alpha\u3001M68K\u3001HPPA\u3001SystemZ\u7b49\u3002</p> </li> <li> <p>\u591a\u79cd\u7cfb\u7edf\u7ea7\u67b6\u6784\u652f\u6301\uff1agem5\u652f\u6301\u591a\u79cd\u7cfb\u7edf\u7ea7\u67b6\u6784\uff0c\u5305\u62ec\u5fae\u63a7\u5236\u5668\u3001\u7cfb\u7edf\u7ea7\u7f13\u5b58\u3001\u7f51\u7edc\u3001\u5b58\u50a8\u3001\u5904\u7406\u5668\u3001\u5185\u5b58\u7b49\u3002</p> </li> <li> <p>\u591a\u79cd\u5904\u7406\u5668\u5fae\u67b6\u6784\u652f\u6301\uff1agem5\u652f\u6301\u591a\u79cd\u5904\u7406\u5668\u5fae\u67b6\u6784\uff0c\u5305\u62ecRISC-V\u3001ARM\u3001MIPS\u3001PowerPC\u3001x86\u3001SPARC\u3001Alpha\u3001M68K\u3001HPPA\u3001SystemZ\u7b49\u3002</p> </li> <li> <p>\u7edf\u4e00\u7684\u6307\u4ee4\u96c6\u63cf\u8ff0\u8bed\u8a00\uff1agem5\u5305\u542b\u4e24\u4e2a\u9886\u57df\u7279\u5b9a\u8bed\u8a00DSL\uff0c\u5176\u4e2dISADSL\u8d1f\u8d23\u7edf\u4e00\u4e8c\u8fdb\u5236\u6307\u4ee4\u7684\u89e3\u7801\u548c\u8bed\u4e49\u89c4\u8303\uff0cSLICC\u7528\u4e8e\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p> </li> <li> <p>\u9ad8\u6027\u80fd\uff1agem5\u7684\u6027\u80fd\u4e0e\u5904\u7406\u5668\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u5904\u7406\u5668\u6570\u91cf\u8d8a\u591a\uff0c\u6027\u80fd\u8d8a\u9ad8\u3002</p> </li> <li> <p>\u6613\u4e8e\u4f7f\u7528\uff1agem5\u7684\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7b80\u5355\u5730\u914d\u7f6e\u4e00\u4e0b\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u6a21\u62df\u5668\uff0c\u5e76\u83b7\u53d6\u6a21\u62df\u7ed3\u679c\u3002</p> </li> <li> <p>\u5f00\u6e90\uff1agem5\u662f\u5f00\u6e90\u9879\u76ee\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\u3001\u4f7f\u7528\u3001\u4fee\u6539\u3001\u6269\u5c55\u3001\u7814\u7a76\u3002</p> </li> </ol>"},{"location":"gem5/Introduction/#download-and-install","title":"Download and Install","text":"<p>gem5\u7684\u4e0b\u8f7d\u4e0e\u5b89\u88c5\u8bf7\u53c2\u8003https://www.gem5.org/documentation/general_docs/building\u3002</p>"},{"location":"gem5/Introduction/#quick-start","title":"Quick Start","text":"<p>gem5\u7684\u5feb\u901f\u5165\u95e8\u8bf7\u53c2\u8003https://www.gem5.org/documentation/learning_gem5/part1/\u3002</p>"},{"location":"gem5/Introduction/#community","title":"Community","text":"<p>gem5\u7684\u793e\u533a\u5305\u62ec\u90ae\u4ef6\u5217\u8868\u3001IRC\u9891\u9053\u3001\u8bba\u575b\u3001wiki\u7b49\u3002</p> <ul> <li>\u90ae\u4ef6\u5217\u8868\uff1ahttps://gem5.groups.io/g/main</li> <li>IRC\u9891\u9053\uff1airc.freenode.net #gem5</li> <li>\u8bba\u575b\uff1ahttps://gem5.atlassian.net/wiki/spaces/GEM5/overview</li> <li>wiki\uff1ahttps://gem5.atlassian.net/wiki</li> </ul>"},{"location":"gem5/Introduction/#license","title":"License","text":"<p>gem5\u4f7f\u7528Apache 2.0\u8bb8\u53ef\u8bc1\u3002</p>"},{"location":"gem5/Introduction/#documents","title":"Documents","text":"<p>learning_gem5</p> <p>https://www.gem5.org/documentation/learning_gem5/part1/extending_configs</p> <p>general_docs</p> <p>https://www.gem5.org/documentation/general_docs/cpu_models/minor_cpu</p> <p>\u4e2d\u6587\u5b66\u4e60\u8d44\u6599</p> <p>https://zhuanlan.zhihu.com/p/530336703 https://zybzzz.github.io/ybsite/notes/sim/gem5/cpu_model.html#minorcpu https://blog.csdn.net/zhenz0729/article/details/135464175?spm=1001.2014.3001.5502 https://blog.csdn.net/qq_34898487?type=blog</p>"},{"location":"gem5/CPU%20models/AtomicSimpleCPU/","title":"AtomicSimpleCPU","text":"<p>AtomicSimpleCPU \u4e00\u822c\u662f\u7528\u6765\u8fdb\u884c\u9a8c\u8bc1\u529f\u80fd\u6216\u8005\u52a0\u901f\u5168\u7cfb\u7edf\u4eff\u771f\u7528\u7684\uff0c AtomicSimpleCPU\u662f\u4f7f\u7528\u539f\u5b50\u5185\u5b58\u8bbf\u95ee\u7684SimpleCPU\u7248\u672c\u3002\u5b83\u4f7f\u7528\u539f\u5b50\u8bbf\u95ee\u7684\u5ef6\u8fdf\u4f30\u8ba1\u6765\u4f30\u8ba1\u603b\u4f53\u7f13\u5b58\u8bbf\u95ee\u65f6\u95f4\u3002AtomicSimpleCPU\u6d3e\u751f\u81eaBaseSimpleCPU\uff0c\u5e76\u5b9e\u73b0\u4e86\u8bfb\u53d6\u548c\u5199\u5165\u5185\u5b58\u7684\u51fd\u6570\uff0c\u4ee5\u53catick\u51fd\u6570\uff0c\u5b83\u5b9a\u4e49\u4e86\u6bcf\u4e2aCPU\u5468\u671f\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5b83\u5b9a\u4e49\u4e86\u7528\u4e8e\u8fde\u63a5\u5230\u5185\u5b58\u7684\u7aef\u53e3\uff0c\u5e76\u5c06CPU\u8fde\u63a5\u5230\u7f13\u5b58\u3002  AtomicSimpleCPU\u6ca1\u6709CPU\u6d41\u6c34\u7ebf\uff0c\u56e0\u6b64\u6a21\u62df\u8fc7\u7a0b\u76f8\u5bf9\u7b80\u5355\u3002\u5176\u5185\u5b58\u8bbf\u95ee\u6a21\u578b\u662f\u539f\u5b50\u6027\u7684\uff0c\u5373\u5185\u5b58\u8bf7\u6c42\u7acb\u5373\u5b8c\u6210\uff0c\u4e0d\u8003\u8651\u5b9e\u9645\u7684\u5185\u5b58\u8bbf\u95ee\u5ef6\u8fdf\u3002\u7531\u4e8e\u5176\u7b80\u5355\u6027\u548c\u5feb\u901f\u6027\uff0cAtomicSimpleCPU\u4e3b\u8981\u7528\u4e8e\u5feb\u901f\u529f\u80fd\u6a21\u62df\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u5feb\u901f\u542f\u52a8Linux\u7b49\u64cd\u4f5c\u7cfb\u7edf\u65f6\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u7528\u4f5c\u68c0\u67e5\u70b9\uff0c\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u5207\u6362\u5230\u66f4\u8be6\u7ec6\u7684CPU\u6a21\u578b\u3002</p>"},{"location":"gem5/CPU%20models/BaseCPU/","title":"\u6e90\u4ee3\u7801\u89e3\u8bfb","text":"<p>\u5904\u4e8e cpu \u7ee7\u627f\u6811\u7684\u9876\u5c42\uff0cBaseCPU \u662f\u6240\u6709\u540e\u7eed cpu \u7684\u7236\u7c7b\uff0c\u5b83\u62bd\u8c61\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 cpu \u6a21\u578b\uff0c\u628a\u540e\u7eed\u6240\u6709 cpu \u9700\u8981\u7528\u5230\u7684\u516c\u5171\u529f\u80fd\u5c01\u88c5\u5230\u4e86\u8fd9\u4e2a BaseCPU \u4e2d\u3002  </p>"},{"location":"gem5/CPU%20models/BaseCPU/#basehh","title":"base.hh","text":"<p>\u8be5\u4ee3\u7801\u662fbase.cc\u7684\u58f0\u660e\u3002\u5177\u4f53\u5b9e\u73b0\u5728base.cc\u4e2d\u3002</p>"},{"location":"gem5/CPU%20models/BaseCPU/#basecc","title":"base.cc","text":"<p>\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2aCPU\u7684\u57fa\u7c7bBaseCPU\uff0c\u63d0\u4f9b\u4e86CPU\u7684\u57fa\u672c\u529f\u80fd\u548c\u7ba1\u7406\u673a\u5236\uff0c\u5305\u62ec\uff1aCPU\u72b6\u6001\u7ba1\u7406\uff1a\u521d\u59cb\u5316\u3001\u542f\u52a8\u3001\u6302\u8d77\u3001\u6fc0\u6d3b\u548c\u505c\u6b62CPU\uff1b\u6ce8\u518c\u3001\u67e5\u627e\u3001\u6fc0\u6d3b\u548c\u6302\u8d77\u7ebf\u7a0b\u4e0a\u4e0b\u6587\uff1b\u5904\u7406\u4e2d\u65ad\u5e76\u5524\u9192\u7ebf\u7a0b\uff1b\u8bbe\u7f6e\u548c\u5904\u7406\u5185\u5b58\u76d1\u89c6\u5668\uff1b\u7ba1\u7406\u7535\u6e90\u72b6\u6001\u548c\u7535\u6e90\u95e8\u63a7\u4e8b\u4ef6\uff1b\u6536\u96c6\u548c\u62a5\u544aCPU\u7684\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982IPC\u3001CPI\u7b49\uff1b\u4fdd\u5b58\u548c\u6062\u590dCPU\u72b6\u6001;\u8c03\u5ea6\u5404\u79cd\u4e8b\u4ef6\uff0c\u5982\u8fdb\u5ea6\u4e8b\u4ef6\u3001\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u7b49\u3002 \u901a\u8fc7\u8fd9\u4e9b\u529f\u80fd\uff0cBaseCPU\u7c7b\u4e3a\u66f4\u590d\u6742\u7684CPU\u6a21\u578b\u63d0\u4f9b\u4e86\u57fa\u7840\uff0c\u4f7f\u5f97\u6a21\u62df\u5668\u80fd\u591f\u6a21\u62df\u548c\u5206\u6790CPU\u7684\u884c\u4e3a\u548c\u6027\u80fd\u3002  </p> <p>1.\u7248\u6743\u58f0\u660e\u548c\u5305\u542b\u7684\u5934\u6587\u4ef6  </p> <p>\u4ee3\u7801\u5f00\u59cb\u90e8\u5206\u662f\u7248\u6743\u58f0\u660e\uff0c\u63a5\u7740\u662f\u5305\u542b\u7684\u5934\u6587\u4ef6\u3002\u8fd9\u4e9b\u5934\u6587\u4ef6\u5305\u62ec\u4e86\u5404\u79cd\u5e93\u548c\u6a21\u5757\uff0c\u5982cpu/base.hh\u3001iostream\u3001sstream\u3001string\u7b49\uff0c\u8fd9\u4e9b\u5934\u6587\u4ef6\u4e3a\u540e\u7eed\u7684\u4ee3\u7801\u63d0\u4f9b\u4e86\u5fc5\u8981\u7684\u529f\u80fd\u548c\u5b9a\u4e49\u3002  </p> <p>2.\u547d\u540d\u7a7a\u95f4\u548c\u5168\u5c40\u53d8\u91cf  </p> <p>\u4ee3\u7801\u8fdb\u5165\u4e86gem5\u547d\u540d\u7a7a\u95f4\uff0c\u5e76\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u5982BaseCPU::globalStats\u548cBaseCPU::cpuList\uff0c\u8fd9\u4e9b\u53d8\u91cf\u7528\u4e8e\u7ba1\u7406\u548c\u8ddf\u8e2aCPU\u7684\u72b6\u6001\u548c\u7edf\u8ba1\u4fe1\u606f\u3002  </p> <p>3.CPUProgressEvent\u7c7b  </p> <p>CPUProgressEvent\u7c7b\u7528\u4e8e\u5b9a\u671f\u62a5\u544aCPU\u7684\u8fdb\u5ea6\u3002\u5b83\u7ee7\u627f\u81eaEvent\u7c7b\uff0c\u5e76\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5b9a\u671f\u4e8b\u4ef6\uff0c\u7528\u4e8e\u5728\u6bcf\u4e2a\u65f6\u95f4\u95f4\u9694\u540e\u8c03\u7528process\u65b9\u6cd5\u3002process\u65b9\u6cd5\u8ba1\u7b97\u5e76\u6253\u5370\u51faCPU\u7684IPC\uff08\u6bcf\u65f6\u949f\u5468\u671f\u7684\u6307\u4ee4\u6570\uff09\u3002  </p> <p>4.BaseCPU\u7c7b  </p> <p>BaseCPU\u7c7b\u662fCPU\u7684\u57fa\u7c7b\uff0c\u5305\u542b\u4e86\u8bb8\u591a\u91cd\u8981\u7684\u65b9\u6cd5\u548c\u6210\u5458\u53d8\u91cf\uff0c\u7528\u4e8e\u7ba1\u7406CPU\u7684\u72b6\u6001\u3001\u7ebf\u7a0b\u3001\u4e2d\u65ad\u3001\u7edf\u8ba1\u4fe1\u606f\u7b49\u3002 <code>\u6784\u9020\u51fd\u6570</code>\uff1a\u521d\u59cb\u5316CPU\u7684\u5404\u79cd\u5c5e\u6027\uff0c\u5982CPU ID\u3001\u7ebf\u7a0b\u6570\u3001\u7f13\u5b58\u884c\u5927\u5c0f\u7b49\u3002\u8fd8\u8bbe\u7f6e\u4e86\u51fd\u6570\u8ddf\u8e2a\u548c\u7edf\u8ba1\u4fe1\u606f\u3002 <code>enableFunctionTrace</code>\uff1a\u542f\u7528\u51fd\u6570\u8ddf\u8e2a\u3002 <code>postInterrupt</code>\uff1a\u5904\u7406\u4e2d\u65ad\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u5524\u9192\u7ebf\u7a0b\u3002 <code>armMonitor</code>\uff1a\u8bbe\u7f6e\u76d1\u89c6\u5668\uff0c\u7528\u4e8e\u76d1\u89c6\u7279\u5b9a\u7684\u5185\u5b58\u5730\u5740\u3002 <code>mwait</code>\uff1a\u5904\u7406mwait\u6307\u4ee4\uff0c\u7528\u4e8e\u7b49\u5f85\u67d0\u4e2a\u5185\u5b58\u5730\u5740\u7684\u53d8\u5316\u3002 <code>mwaitAtomic</code>\uff1a\u539f\u5b50\u5730\u5904\u7406mwait\u6307\u4ee4\u3002 <code>init</code>\uff1a\u521d\u59cb\u5316CPU\uff0c\u8bbe\u7f6e\u6307\u4ee4\u8ba1\u6570\u7ec8\u6b62\u4e8b\u4ef6\u7b49\u3002 <code>startup</code>\uff1a\u542f\u52a8CPU\uff0c\u8bbe\u7f6e\u8fdb\u5ea6\u4e8b\u4ef6\u548c\u7535\u6e90\u72b6\u6001\u3002 <code>regProbePoints</code>\uff1a\u6ce8\u518c\u63a2\u9488\u70b9\uff0c\u7528\u4e8e\u6027\u80fd\u76d1\u63a7\u3002 <code>probeInstCommit</code>\uff1a\u5904\u7406\u6307\u4ee4\u63d0\u4ea4\u4e8b\u4ef6\uff0c\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\u3002 <code>regStats</code>\uff1a\u6ce8\u518c\u7edf\u8ba1\u4fe1\u606f\u3002 <code>getPort</code>\uff1a\u6839\u636e\u540d\u79f0\u83b7\u53d6\u7aef\u53e3\u3002 <code>registerThreadContexts</code>\uff1a\u6ce8\u518c\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>deschedulePowerGatingEvent</code>\uff1a\u53d6\u6d88\u7535\u6e90\u95e8\u63a7\u4e8b\u4ef6\u3002 <code>schedulePowerGatingEvent</code>\uff1a\u8c03\u5ea6\u7535\u6e90\u95e8\u63a7\u4e8b\u4ef6\u3002 <code>findContext</code>\uff1a\u67e5\u627e\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>activateContext</code>\uff1a\u6fc0\u6d3b\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>suspendContext</code>\uff1a\u6302\u8d77\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>haltContext</code>\uff1a\u505c\u6b62\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u3002 <code>enterPwrGating</code>\uff1a\u8fdb\u5165\u7535\u6e90\u95e8\u63a7\u72b6\u6001\u3002 <code>switchOut</code>\uff1a\u5207\u6362\u51faCPU\u3002 <code>takeOverFrom</code>\uff1a\u4ece\u53e6\u4e00\u4e2aCPU\u63a5\u7ba1\u72b6\u6001\u3002 <code>setReset</code>\uff1a\u8bbe\u7f6e\u91cd\u7f6e\u72b6\u6001\u3002 <code>flushTLBs</code>\uff1a\u5237\u65b0TLB\u3002 <code>serialize</code>\uff1a\u5e8f\u5217\u5316CPU\u72b6\u6001\u3002 <code>unserialize</code>\uff1a\u53cd\u5e8f\u5217\u5316CPU\u72b6\u6001\u3002 <code>scheduleInstStop</code>\uff1a\u8c03\u5ea6\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u3002 <code>getCurrentInstCount</code>\uff1a\u83b7\u53d6\u5f53\u524d\u6307\u4ee4\u8ba1\u6570\u3002 <code>traceFunctionsInternal</code>\uff1a\u8ddf\u8e2a\u51fd\u6570\u8c03\u7528\u3002 <code>scheduleSimpointsInstStop</code>\uff1a\u8c03\u5ea6SimPoints\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u3002 <code>scheduleInstStopAnyThread</code>\uff1a\u8c03\u5ea6\u4efb\u610f\u7ebf\u7a0b\u7684\u6307\u4ee4\u505c\u6b62\u4e8b\u4ef6\u3002  </p> <p>5.BaseCPUStats\u7c7b  </p> <p>BaseCPUStats\u7c7b\u7528\u4e8e\u6536\u96c6\u548c\u62a5\u544aCPU\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u5468\u671f\u6570\u3001IPC\u3001CPI\u7b49\u3002 FetchCPUStats\u3001ExecuteCPUStats\u3001CommitCPUStats\u7c7b \u8fd9\u4e9b\u7c7b\u5206\u522b\u7528\u4e8e\u6536\u96c6\u548c\u62a5\u544a\u53d6\u6307\u3001\u6267\u884c\u548c\u63d0\u4ea4\u9636\u6bb5\u7684\u7edf\u8ba1\u4fe1\u606f\u3002  </p>"},{"location":"gem5/CPU%20models/BaseSimpleCPU/","title":"BaseSimpleCPU","text":"<p>\u5b9e\u73b0\u4e86\u51e0\u4e2a\u529f\u80fd\uff1a</p> <p>\u4fdd\u5b58\u4f53\u7cfb\u7ed3\u6784\u72b6\u6001\uff0c\u5728SimpleCPU\u6a21\u578b\u4e2d\u901a\u7528\u7684\u72b6\u6001\u3002 \u5b9a\u4e49\u4e86\u68c0\u67e5\u4e2d\u65ad\u3001\u8bbe\u7f6e\u83b7\u53d6\u8bf7\u6c42\u3001\u5904\u7406\u9884\u6267\u884c\u8bbe\u7f6e\u3001\u5904\u7406\u540e\u6267\u884c\u64cd\u4f5c\u4ee5\u53ca\u5c06PC\u63a8\u8fdb\u5230\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u5728SimpleCPU\u6a21\u578b\u4e2d\u4e5f\u5f88\u5e38\u89c1\u3002 \u5b9e\u73b0ExecContext\u63a5\u53e3\u3002</p> <p>BaseSimpleCPU\u4e0d\u80fd\u5355\u72ec\u8fd0\u884c\uff0c\u5fc5\u987b\u4f7f\u7528\u4eceBaseSimpleCPU\u7ee7\u627f\u7684\u7c7b\u4e4b\u4e00\uff0cAtomicSimpleCPU\u6216TimingSimpleCPU\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/","title":"MinorCPU","text":""},{"location":"gem5/CPU%20models/MinorCPU/#introduction","title":"Introduction","text":"<p>Minor\u662f\u4e00\u79cd\u6709\u5e8f\u5904\u7406\u5668\u6a21\u578b\uff0c\u5177\u6709\u56fa\u5b9a\u7684\u6d41\u6c34\u7ebf\uff0c\u4f46\u53ef\u914d\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u548c\u6267\u884c\u884c\u4e3a\u3002\u5b83\u65e8\u5728\u7528\u4e8e\u5bf9\u5177\u6709\u4e25\u683c\u987a\u5e8f\u6267\u884c\u884c\u4e3a\u7684\u5904\u7406\u5668\u8fdb\u884c\u5efa\u6a21\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7 <code>MinorTrace/minorview.py</code>\u683c\u5f0f/\u5de5\u5177\u53ef\u89c6\u5316\u6307\u4ee4\u5728\u6d41\u6c34\u7ebf\u4e2d\u7684\u4f4d\u7f6e\u3002\u5176\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a\u6846\u67b6\uff0c\u7528\u4e8e\u5728\u5fae\u67b6\u6784\u4e0a\u5c06\u6a21\u578b\u4e0e\u5177\u6709\u7c7b\u4f3c\u529f\u80fd\u7684\u7279\u5b9a\u9009\u5b9a\u5904\u7406\u5668\u76f8\u5173\u8054\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#model-structure","title":"Model Structure","text":"<p>MinorCPU\u5b9e\u73b0\u4e86<code>cpu.hh</code>\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u4e3a\u8fde\u63a5\u5230\u7f13\u5b58\u7cfb\u7edf\u63d0\u4f9b\u6570\u636e\u548c\u6307\u4ee4\u63a5\u53e3\u3002\u8be5\u6a21\u578b\u901a\u8fc7python\u4ee5\u7c7b\u4f3c\u4e8e\u5176\u4ed6gem5\u6a21\u578b\u7684\u65b9\u5f0f\u914d\u7f6e\u3002\u8be5\u914d\u7f6e\u88ab\u4f20\u9012\u7ed9<code>minorpu::pipeline</code>\uff0c\u540e\u8005\u5b9e\u9645\u4e0a\u5b9e\u73b0\u4e86\u5904\u7406\u5668pipeline\u3002</p> <p>MinorCPU\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>MinorCPU\n--- Pipeline - container for the pipeline, owns the cyclic 'tick' event mechanism and the idling (cycle skipping) mechanism.\n--- --- Fetch1 - instruction fetch unit responsible for fetching cache lines (or parts of lines from the I-cache interface).\n--- --- --- Fetch1::IcachePort - interface to the I-cache from Fetch1.\n--- --- Fetch2 - line to instruction decomposition.\n--- --- Decode - instruction to micro-op decomposition.\n--- --- Execute - instruction execution and data memory interface.\n--- --- --- LSQ - load store queue for memory ref. instructions.\n--- --- --- LSQ::DcachePort - interface to the D-ache from Execute.\n</code></pre>"},{"location":"gem5/CPU%20models/MinorCPU/#key-data-structures","title":"Key data structures","text":"<p>Instruction and line identity: Instld:\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u8bb0\u5f55\u4e86\u4e00\u4e9b\u5173\u952e\u7684id\uff0c\u6bd4\u5982\u8bf4\u5206\u652f\u9884\u6d4b\u63a7\u5236\u6d41\u7684\u53d8\u66f4\u5c31\u8981\u4ece\u8fd9\u4e2aid\u4e2d\u770b\u51fa\u6765\u3002</p> <ul> <li> <p>T/S.P/L - for fetched cache lines</p> </li> <li> <p>T/S.P/L/F - for instructions before Decode</p> </li> <li> <p>T/S.P/L/F.E - for instructions from Decode onwards</p> </li> </ul> Field Symbol Generated by Checked by Function InstId::threadId T Fetch1 Everywhere the thread number is needed Thread number. InstId::streamSeqNum S Execute Fetch1, Fetch2, Execute \u7531 Execute \u9009\u62e9\u7684\u6d41\u5e8f\u5217\u53f7 InstId::predictionSeqNum P Fetch2 Fetch2 \u9884\u6d4b\u5e8f\u5217\u53f7\u8868\u793a\u5206\u652f\u9884\u6d4b\u51b3\u7b56 InstId::lineSeqNum L Fetch1 Just for debugging \u6b64\u7f13\u5b58\u884c\u7684\u884c\u63d0\u53d6\u5e8f\u5217\u53f7\u6216\u4ece\u4e2d\u63d0\u53d6\u6b64\u6307\u4ee4\u7684\u884c InstId::fetchSeqNum F Fetch2 Fetch2 \u5f53\u884c\u5206\u89e3\u4e3a\u6307\u4ee4\u65f6\uff0c\u7531 Fetch2 \u5206\u914d\u7684\u6307\u4ee4\u83b7\u53d6\u987a\u5e8f InstId::execSeqNum E Decode Execute \u5fae\u64cd\u4f5c\u5206\u89e3\u540e\u7684\u6307\u4ee4\u987a\u5e8f"},{"location":"gem5/CPU%20models/MinorCPU/#pipeline","title":"Pipeline","text":"<p>MinorCPU \u7684\u6d41\u6c34\u7ebf\u7531 <code>Pipeline</code> \u7c7b\uff08\u4f4d\u4e8e <code>cpu/minor/pipeline.cc</code>\uff09\u7ba1\u7406\u3002\u8be5\u7c7b\u5305\u542b\u4e86 <code>Fetch1</code>\u3001<code>Fetch2</code>\u3001<code>Decode</code>\u3001<code>Execute</code>\u7b49\u5b50\u6a21\u5757\uff0c\u5e76\u8d1f\u8d23\u7ba1\u7406\u5b83\u4eec\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</p> <pre><code>------------------------------------------------------------------------------\n    Key:\n\n    [] : inter-stage BufferBuffer\n    ,--.\n    |  | : pipeline stage\n    `--'\n    ---&gt; : forward communication\n    &lt;--- : backward communication\n\n    rv : reservation information for input buffers\n\n                ,------.     ,------.     ,------.     ,-------.\n (from  --[]-v-&gt;|Fetch1|-[]-&gt;|Fetch2|-[]-&gt;|Decode|-[]-&gt;|Execute|--&gt; (to Fetch1\n Execute)    |  |      |&lt;-[]-|      |&lt;-rv-|      |&lt;-rv-|       |     &amp; Fetch2)\n             |  `------'&lt;-rv-|      |     |      |     |       |\n             `--------------&gt;|      |     |      |     |       |\n                             `------'     `------'     `-------'\n------------------------------------------------------------------------------\n</code></pre> <p>\u8fd9\u56db\u4e2apipeline\u901a\u8fc7<code>minorbuffer-fifo</code>\uff08<code>stage.hh</code>\uff0c\u6700\u7ec8\u4ecetimebuffer\u6d3e\u751f\uff09\u7ed3\u6784\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u8fd9\u4e9b\u7ed3\u6784\u5141\u8bb8\u5bf9\u7ea7\u95f4\u5ef6\u8fdf\u8fdb\u884c\u5efa\u6a21\u3002\u5728\u5411\u524d\u65b9\u5411\u7684\u76f8\u90bb\u9636\u6bb5\uff08\u4f8b\u5982\uff1a\u4ece<code>Fetch1</code>\u5230<code>Fetch2</code>\u7684\u7ebf\u8def\uff09\u4e4b\u95f4\u6709\u4e00\u4e2a<code>minorbuffers</code>\uff0c\u5728<code>Fetch2</code>\u548c<code>Fetch1</code>\u4e4b\u95f4\u6709\u4e00\u4e2a\u53cd\u5411\u7f13\u51b2\u533a\uff0c\u627f\u8f7d\u5206\u652f\u9884\u6d4b\u3002</p> <p>\u9636\u6bb5<code>Fetch2</code>\u3001<code>Decode</code>\u548c<code>Execute</code>\u5177\u6709\u8f93\u5165\u7f13\u51b2\u533a\uff0c\u6bcf\u4e2a\u5468\u671f\u90fd\u53ef\u4ee5\u63a5\u53d7\u4e0a\u4e00\u9636\u6bb5\u7684\u8f93\u5165\u6570\u636e\uff0c\u5982\u679c\u9636\u6bb5\u5c1a\u672a\u51c6\u5907\u597d\u5904\u7406\u8be5\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u4fdd\u5b58\u8be5\u6570\u636e\u3002\u8f93\u5165\u7f13\u51b2\u533a\u4ee5\u63a5\u6536\u5230\u7684\u76f8\u540c\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\u3002</p> <p>\u9636\u6bb5\u8f93\u5165\u7f13\u51b2\u533a\u63d0\u4f9b\u4e00\u4e2a\u4e0e\u524d\u4e00\u9636\u6bb5\u7684\u53ef\u4fdd\u7559\uff08<code>stage.hh</code>\uff09\u63a5\u53e3\uff0c\u4ee5\u5141\u8bb8\u5728\u5176\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u4fdd\u7559\u63d2\u69fd\uff0c\u5e76\u5411\u540e\u901a\u4fe1\u5176\u8f93\u5165\u7f13\u51b2\u533a\u5360\u7528\u60c5\u51b5\uff0c\u4ee5\u5141\u8bb8\u524d\u4e00\u9636\u6bb5\u8ba1\u5212\u662f\u5426\u5e94\u5728\u7ed9\u5b9a\u7684\u5468\u671f\u4e2d\u8fdb\u884c\u8f93\u51fa\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#fetch1-stage","title":"Fetch1 stage","text":"<p>Fetch1 \u5b8c\u6210\u7684\u5de5\u4f5c\u662f\u53d6\u6307\u3002Fetch1 \u9996\u5148\u5904\u7406\u7684\u662f\u5206\u652f\u9884\u6d4b\u7684\u76f8\u5173\u6570\u636e\uff0c \u53ef\u80fd\u6d89\u53ca\u5230\u6d41<code>stream</code>\u7684\u6539\u53d8\u6e05\u7a7a\u6307\u4ee4\u4e4b\u7c7b\u7684\u3002\u968f\u540e\u8fdb\u5165\u5230\u6b63\u5e38\u7684\u6d41\u7a0b\u5c31\u662f\u53d6\u6307\uff0c\u8fd9\u4e2a\u9636\u6bb5\u9996\u5148\u53d1\u8d77\u5bf9 ITLB \u7684\u5730\u5740\u7ffb\u8bd1\u8bf7\u6c42<code>itb-&gt;translateTiming</code>\uff0c\u5e76\u5c06\u8bf7\u6c42<code>FetchRequest</code> \u63d2\u5165\u5230 Request \u961f\u5217\u4e2d\uff1b\u5f53 ITLB \u8bf7\u6c42\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u53d1\u8d77\u5bf9\u4e8e\u5185\u5b58\u7684\u53d6\u6307\u8bf7\u6c42\uff0c\u5e76\u5c06\u8bf7\u6c42\u653e\u5165\u5230 Transfer \u961f\u5217\u4e2d<code>Fetch1::tryToSendToTransfers</code>\u3002\u968f\u540e\u4ece\u5185\u5b58\u4e2d\u5f97\u5230\u6570\u636e\u4e4b\u540e\uff0c\u5c06\u6570\u636e\u53d1\u9001\u7ed9 Fetch2 \u9636\u6bb5 <code>Fetch1::evaluate</code>\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#fetch2-stage","title":"Fetch2 stage","text":"<p>\u8fd9\u4e2a\u9636\u6bb5\u4e3b\u8981\u8fdb\u884c\u5206\u652f\u9884\u6d4b\u548c\u8bd1\u7801\u3002\u9996\u5148\u63a5\u53d7\u5230\u6765\u81ea Execute \u9636\u6bb5\u7684\u5206\u652f\u9884\u6d4b\u9a8c\u8bc1\u7ed3\u679c\uff0c\u5982\u679c\u4e4b\u524d\u7684\u9884\u6d4b\u7ed3\u679c\u548c\u9a8c\u8bc1\u7ed3\u679c\u51fa\u73b0\u504f\u5dee\uff0c\u5219\u4f1a\u5bf9 BTB \u8fdb\u884c\u66f4\u65b0\u3002\u968f\u540e\u8fdb\u884c\u5206\u652f\u9884\u6d4b\uff0c\u5e76\u5c06\u5206\u652f\u9884\u6d4b\u7684\u7ed3\u679c\u5199\u5165\u5230 Latch \u4e2d\u5411 Fetch1 \u4e2d\u4f20\u9012\uff0c\u4f7f Fetch1 \u5728\u4e0b\u4e2a\u65f6\u949f\u5468\u671f\u80fd\u591f\u83b7\u5f97\u5206\u652f\u9884\u6d4b\u7684\u7ed3\u679c\u3002\u968f\u540e\u8fdb\u884c\u7684\u5c31\u662f\u8bd1\u7801\uff0c\u6839\u636e\u524d\u4e00\u9636\u6bb5\u5f97\u5230\u7684\u5185\u5b58\u6570\u636e\uff0c\u5c06\u6307\u4ee4\u8f6c\u6362\u6210<code>StaticInst</code>\u7684\u5f62\u5f0f\uff0c\u5e76\u521b\u5efa\u51fa <code>DynInst</code>\uff0c\u4f9b\u672c\u9636\u6bb5\u548c\u540e\u7eed\u9636\u6bb5\u4f7f\u7528\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#decode-stage","title":"Decode stage","text":"<p>\u8fd9\u4e2a\u9636\u6bb5\u4e3b\u8981\u7684\u5de5\u4f5c\u662f\u8bd1\u7801\u3002Decode \u4ece Fetch2 \u83b7\u53d6\u6307\u4ee4\u5411\u91cf\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6307\u4ee4\u5206\u89e3\u4e3a\u5fae\u64cd\u4f5c<code>micro-ops</code>\uff08\u5982\u6709\u5fc5\u8981\uff09\u5e76\u5c06\u5b83\u4eec\u6253\u5305\u5230\u5176\u8f93\u51fa\u6307\u4ee4\u5411\u91cf\u4e2d\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#execute-stage","title":"Execute Stage","text":"<p>\u8fd9\u4e2a\u9636\u6bb5\u4e3b\u8981\u7684\u5de5\u4f5c\u662f\u53d1\u5c04\u3001\u6267\u884c\u3001\u63d0\u4ea4\u7b49,\u63d0\u4f9b\u6240\u6709\u6307\u4ee4\u6267\u884c\u548c\u5185\u5b58\u8bbf\u95ee\u673a\u5236\u3002\u901a\u8fc7 Execute \u7684\u6307\u4ee4\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u5468\u671f\uff0c\u5176\u7cbe\u786e\u65f6\u5e8f\u7531<code>functional unit pipeline FIFO</code>\u5efa\u6a21\u3002</p> <p>\u5229\u7528<code>Scoreboard</code>\u7ba1\u7406\u4f9d\u8d56\u5173\u7cfb\uff0c\u5c06\u5408\u9002\u7684\u6307\u4ee4\u53d1\u9001\u5230\u529f\u80fd\u5355\u5143\u8fdb\u884c\u6267\u884c\u3002\u5982\u679c\u6267\u884c\u662f\u5206\u652f\u6307\u4ee4\uff0c\u9700\u8981\u628a\u7ed3\u679c\u5411 Fetch1 \u548c Fetch2 \u4f20\u9012\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#functional-units","title":"Functional Units","text":"<p><code>Execute</code>\u9636\u6bb5\u5305\u542b\u6bcf\u4e2a\u529f\u80fd\u5355\u5143\u7684pipeline\u3002\u529f\u80fd\u5355\u5143\u901a\u8fc7 <code>executeFuncUnits</code> \u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u3002</p> <p>\u6bcf\u4e2a\u6d3b\u52a8\u5468\u671f\uff0c<code>Execute::evaluate</code> \u90fd\u4f1a\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c:</p> <pre><code>    Execute::evaluate:\n        push input to inputBuffer\n        setup references to input/output data slots and branch output slot\n\n        step D-cache interface queues (similar to Fetch1)\n\n        if interrupt posted:\n            take interrupt (signalling branch to Fetch1/Fetch2)\n        else\n            commit instructions\n            issue new instructions\n\n        advance functional unit pipelines\n\n        reactivate Execute if the unit is still active\n\n        commit the push to the inputBuffer if that data hasn't all been used\n</code></pre>"},{"location":"gem5/CPU%20models/MinorCPU/#functional-units-fifos","title":"Functional Units FIFOs","text":"<p><code>TimeBuffer FIFO</code>,\u901a\u8fc7<code>stalled flag</code>\u63a7\u5236\u529f\u80fd\u5355\u5143\u7684\u65f6\u5e8f\u3002</p> <p><code>issue</code>\u3001<code>commit</code>\u548c<code>advance</code>\u64cd\u4f5c\u4f5c\u7528\u4e8e<code>functional units</code></p>"},{"location":"gem5/CPU%20models/MinorCPU/#issue","title":"Issue","text":"<p>\u53d1\u5c04\u6307\u4ee4\u9700\u8981\u904d\u5386\u8f93\u5165\u7f13\u51b2\u533a\u6307\u4ee4\u548c\u529f\u80fd\u5355\u5143\u7684\u5934\u90e8\uff0c\u4ee5\u6309\u987a\u5e8f\u53d1\u51fa\u6307\u4ee4</p> <p>\u6bcf\u4e2a\u53d1\u5c04\u7684\u6307\u4ee4\u88ab\u63a8\u9001\u5230 Execute:::inFlightInsts\u4e2d\u3002\u5185\u5b58\u5f15\u7528\u6307\u4ee4\u88ab\u63a8\u9001\u5230 <code>Execute\uff1a\uff1ainFUMemInsts</code> \u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#commit","title":"Commit","text":"<p>\u901a\u8fc7\u68c0\u67e5 <code>Execute\uff1a\uff1ainFlightInsts</code> \u961f\u5217\u7684\u5934\u90e8\u6765\u63d0\u4ea4\u6307\u4ee4\u3002\u53ef\u4ee5\u5728\u5176\u529f\u80fd\u5355\u5143\u4e2d\u627e\u5230\u7684\u6307\u4ee4\u88ab\u6267\u884c\u5e76\u4ece <code>Execute\uff1a\uff1ainFlightInsts</code> \u4e2d\u5f39\u51fa</p> <p>\u4efb\u4f55\u5206\u652f\u3001\u6545\u969c\u6216\u4e2d\u65ad\u90fd\u4f1a\u5bfc\u81f4<code>stream</code>\u5e8f\u5217\u53f7\u66f4\u6539\uff0c\u5e76\u5411 Fetch1/Fetch2 \u53d1\u51fa\u5206\u652f\u4fe1\u53f7\u3002\u53ea\u6709\u5177\u6709\u5f53\u524d\u6d41\u5e8f\u5217\u53f7\u7684\u6307\u4ee4\u624d\u4f1a\u88ab\u53d1\u5c04\u6216\u63d0\u4ea4\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#advance","title":"Advance","text":"<p>\u6240\u6709\u672a<code>stalled</code>\u7684pipeline\u90fd\u4f1aadvance\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#scoreboard","title":"Scoreboard","text":"<p>\u8bb0\u5206\u724c<code>Scoreboard</code>\u7528\u4e8e\u63a7\u5236\u6307\u4ee4\u53d1\u5c04\u3002\u5b83\u5305\u542b <code>Execute\uff1a\uff1ainFlightInsts</code> \u4e2d\u5c06\u5199\u5165\u6574\u6570\u6216\u6d6e\u70b9\u5bc4\u5b58\u5668\u7684\u6307\u4ee4\u6570\u91cf\u3002\u53ea\u6709\u5f53\u8bb0\u5206\u724c\u5305\u542b 0 \u6761\u6307\u4ee4\u65f6\uff0c\u624d\u4f1a\u53d1\u51fa\u6307\u4ee4\u3002</p>"},{"location":"gem5/CPU%20models/MinorCPU/#lsq","title":"LSQ","text":"<p><code>LSQ</code> \u662f\u4e00\u4e2a\u52a0\u8f7d/\u5b58\u50a8\u961f\u5217\uff0c\u7528\u4e8e\u5904\u7406\u5185\u5b58\u5f15\u7528\u6307\u4ee4\u3002<code>LSQ</code> \u7ef4\u62a4\u4e00\u4e2a <code>DcachePort</code>\uff0c\u7528\u4e8e\u5411 <code>Execute</code> \u53d1\u9001\u6570\u636e\u3002</p>"},{"location":"gem5/CPU%20models/O3CPU/","title":"Introduction","text":""},{"location":"gem5/CPU%20models/O3CPU/#fetch","title":"Fetch","text":"<p> \u6bcf\u4e2a\u5468\u671f\u83b7\u53d6\u6307\u4ee4\uff0c\u6839\u636e\u6240\u9009\u7b56\u7565\u9009\u62e9\u8981\u4ece\u54ea\u4e2a\u7ebf\u7a0b\u83b7\u53d6\u3002\u6b64\u9636\u6bb5\u662f\u9996\u6b21\u521b\u5efa DynInst \u7684\u5730\u65b9\u3002\u8fd8\u5904\u7406\u5206\u652f\u9884\u6d4b\u3002</p>"},{"location":"gem5/CPU%20models/O3CPU/#decode","title":"Decode","text":"<p>\u6bcf\u4e2a\u5468\u671f\u89e3\u7801\u6307\u4ee4\u3002\u8fd8\u5904\u7406 PC \u76f8\u5bf9\u65e0\u6761\u4ef6\u5206\u652f\u7684\u65e9\u671f\u89e3\u6790\u3002</p>"},{"location":"gem5/CPU%20models/O3CPU/#rename","title":"Rename","text":"<p> \u4f7f\u7528\u5e26\u6709\u7a7a\u95f2\u5217\u8868\u7684\u7269\u7406\u5bc4\u5b58\u5668\u6587\u4ef6\u91cd\u547d\u540d\u6307\u4ee4\u3002\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u5bc4\u5b58\u5668\u53ef\u4ee5\u91cd\u547d\u540d\u5230\uff0c\u6216\u8005\u540e\u7aef\u8d44\u6e90\u5df2\u6ee1\uff0c\u5219\u4f1a\u505c\u6b62\u3002\u6b64\u65f6\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728\u91cd\u547d\u540d\u4e2d\u505c\u6b62\u5b83\u4eec\u76f4\u5230\u540e\u7aef\u8017\u5c3d\u6765\u5904\u7406\u4efb\u4f55\u5e8f\u5217\u5316\u6307\u4ee4\u3002</p>"},{"location":"gem5/CPU%20models/O3CPU/#issueexecutewriteback","title":"Issue/Execute/Writeback","text":"<p> \u5f53\u5728\u6307\u4ee4\u4e0a\u8c03\u7528 execute\uff08\uff09 \u51fd\u6570\u65f6\uff0c\u6211\u4eec\u7684\u6a21\u62df\u5668\u6a21\u578b\u4f1a\u5904\u7406\u6267\u884c\u548c\u5199\u56de\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8fd9\u4e09\u4e2a\u9636\u6bb5\u5408\u5e76\u4e3a\u4e00\u4e2a\u9636\u6bb5\u3002\u6b64\u9636\u6bb5 \uff08IEW\uff09 \u5904\u7406\u5411\u6307\u4ee4\u961f\u5217\u53d1\u9001\u6307\u4ee4\uff0c\u544a\u8bc9\u6307\u4ee4\u961f\u5217\u53d1\u51fa\u6307\u4ee4\uff0c\u4ee5\u53ca\u6267\u884c\u548c\u5199\u56de\u6307\u4ee4\u3002</p>"},{"location":"gem5/CPU%20models/O3CPU/#commit","title":"Commit","text":"<p> \u6bcf\u4e2a\u5468\u671f\u63d0\u4ea4\u6307\u4ee4\uff0c\u5904\u7406\u6307\u4ee4\u53ef\u80fd\u5bfc\u81f4\u7684\u4efb\u4f55\u6545\u969c\u3002\u8fd8\u5904\u7406\u5728\u5206\u652f\u9884\u6d4b\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\u91cd\u5b9a\u5411\u524d\u7aef\u3002</p>"},{"location":"gem5/CPU%20models/TimingSimpleCPU/","title":"TimingSimpleCPU","text":"<p>TimingSimpleCPU\u662f\u4f7f\u7528\u8ba1\u65f6\u5185\u5b58\u8bbf\u95ee\u7684SimpleCPU\u7248\u672c\u3002\u5b83\u5728\u8bbf\u95ee\u9ad8\u901f\u7f13\u5b58\u65f6\u505c\u6b62\uff0c\u5e76\u5728\u7ee7\u7eed\u4e4b\u524d\u7b49\u5f85\u5185\u5b58\u7cfb\u7edf\u7684\u54cd\u5e94\u3002\u4e0eAtomicSimpleCPU\u4e00\u6837\uff0cTimingSimpleCPU\u4e5f\u6d3e\u751f\u81eaBaseSimpleCPU\uff0c\u5e76\u5b9e\u73b0\u4e86\u76f8\u540c\u7684\u4e00\u7ec4\u51fd\u6570\u3002\u5b83\u5b9a\u4e49\u4e86\u7528\u4e8e\u8fde\u63a5\u5230\u5185\u5b58\u7684\u7aef\u53e3\uff0c\u5e76\u5c06CPU\u8fde\u63a5\u5230\u7f13\u5b58\u3002\u5b83\u8fd8\u5b9a\u4e49\u4e86\u5904\u7406\u4ece\u5185\u5b58\u5230\u53d1\u51fa\u8bbf\u95ee\u7684\u54cd\u5e94\u6240\u9700\u7684\u51fd\u6570\u3002 TimingSimpleCPU \u7684\u6307\u4ee4\u6267\u884c\u6d41\u7a0b\u7531\u4e0b\u56fe\u7ed9\u51fa\uff1a  \u4e0eAtomicSimpleCPU\u4e0d\u540c\uff0cTimingSimpleCPU\u5728\u6a21\u62df\u4e2d\u4f1a\u8003\u8651\u5185\u5b58\u8bbf\u95ee\u7684\u5b9e\u9645\u5ef6\u8fdf\u3002\u5f53CPU\u53d1\u51fa\u5185\u5b58\u8bf7\u6c42\u65f6\uff0c\u5b83\u4f1a\u7b49\u5f85\u5185\u5b58\u7cfb\u7edf\u8fd4\u56de\u54cd\u5e94\uff0c\u800c\u4e0d\u662f\u7acb\u5373\u5b8c\u6210\u3002\u5c3d\u7ba1\u8003\u8651\u4e86\u5185\u5b58\u65f6\u5e8f\uff0c\u4f46TimingSimpleCPU\u4ecd\u7136\u4e0d\u4f7f\u7528CPU\u6d41\u6c34\u7ebf\u6280\u672f\uff0c\u56e0\u6b64\u5176\u6a21\u62df\u8fc7\u7a0b\u4ecd\u7136\u76f8\u5bf9\u7b80\u5355\u3002</p>"}]}